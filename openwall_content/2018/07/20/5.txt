  oss-security - [CVE] PHP Runtime for Apache OpenWhisk            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Fri, 20 Jul From: Rodric Rabbah <rabbah@...che.org> To: Apache Security Team <security@...che.org>, oss-security@...ts.openwall.com,  	announce@...che.org, dev@...nwhisk.apache.org Cc: Ory Segal <ory@...esec.io> Subject: [CVE] PHP Runtime for Apache OpenWhisk  Who is Affected: Apache OpenWhisk users with an explicitly created Docker action, and the Docker image used for the action inherits from the affected Docker tags: - openwhisk/action-php-v7.2 < - openwhisk/action-php-v7.1 <  The PHP Runtime does not currently have any Apache releases.  Description: A Docker action running as a serverless function (e.g., wsk action create <name> —docker <image>), where the Dockerfile used to create the Docker image inherits one of the affected tags, may allow a carefully crafted parameter to overwrite the serverless function running inside the container. This requires the user included function to be vulnerable in some way, for example via parameter hijacking, remote code execution, or unsafe use of “eval()”. Subsequent executions of the original function in the same container will use the replaced implementation if the function was successfully exploited.  Mitigation: Users that create their own Docker runtimes to run as Apache OpenWhisk Docker actions, and who pin their Docker runtime image (e.g., Dockerfile starts with “FROM should upgrade their Docker tag to the latest available tag. Users who build from source, should use the latest commit Git tag [1]. Operators of an Apache OpenWhisk deployment should check their runtime manifest to determine if they are affected, and if so, upgrade the tags in their runtimes manifest to automatically patch all actions runtimes when updating their deployment.  Credit: This issue was discovered while investigating a related issue researched and reported by Yuri Shapira and Ory Segal of PureSec.  [1]   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      