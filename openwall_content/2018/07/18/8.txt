  oss-security - Re: Multiple vulnerabilities in Jenkins            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Wed, 18 Jul From: Daniel Beck <ml@...kweb.net> To: oss-security@...ts.openwall.com Subject: Re: Multiple vulnerabilities in Jenkins   > On 18. Jul at Daniel Beck <ml@...kweb.net> wrote: >  > > Unauthenticated users could provide maliciously crafted login credentials  > that cause Jenkins to move the config.xml file from the Jenkins home  > directory. This configuration file contains basic configuration of  > Jenkins, including the selected security realm and authorization strategy.  > If Jenkins is started without this file present, it will revert to the  > legacy defaults of granting administrator access to anonymous users.   > > An arbitrary file read vulnerability in the Stapler web framework used by  > Jenkins allowed unauthenticated users to send crafted HTTP requests  > returning the contents of any file on the Jenkins master file system that  > the Jenkins master process has access to.   > > The URLs handling cancellation of queued builds did not perform a  > permission check, allowing users with Overall/Read permission to cancel  > queued builds.   > > The URL that initiates agent launches on the Jenkins master did not perform  > a permission check, allowing users with Overall/Read permission to initiate  > agent launches.   > > The build timeline widget shown on URLs like /view/âŚ/builds did not  > properly escape display names of items. This resulted in a cross-site  > scripting vulnerability exploitable by users able to control item display  > names.   > > Files indicating when a plugin JPI file was last extracted into a  > subdirectory of plugins/ in the Jenkins home directory was accessible via  > HTTP by users with Overall/Read permission. This allowed unauthorized users  > to determine the likely install date of a given plugin.   > > Stapler is the web framework used by Jenkins to route HTTP requests. When  > its debug mode is enabled, HTTP error pages display diagnostic  > information. Those error pages did not escape parts of URLs they displayed,  > in rare cases resulting in a cross-site scripting vulnerability.    Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      