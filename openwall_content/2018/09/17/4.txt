  oss-security - Smarty or below  Trusted-Directory Bypass via Path Traversal            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Mon, 17 Sep From: SBA Research Advisory <advisory@...-research.org> To: <oss-security@...ts.openwall.com> Subject: Smarty or below  Trusted-Directory Bypass via Path Traversal  # Smarty Trusted-Directory Bypass via Path Traversal #  Link:  ## Vulnerability Overview ##  Smarty or below is prone to a path traversal vulnerability due to insufficient template code sanitization. This allows attackers controlling the executed template code to bypass the trusted directory security restriction and read arbitrary files.  * **Identifier**            : * **Type of Vulnerability** : Path Traversal * **Software/Product Name** : [Smarty](https://www.smarty.net/) * **Vendor**                : Smarty * **Affected Versions**     : and probably prior * **Fixed in Version**      : * **CVE ID**                : * **CVSSv3 Vector**         : CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:N/A:N * **CVSSv3 Base Score**     : 8.6 (High)  ## Vendor Description ##  > Smarty is a template engine for PHP, facilitating the separation of > presentation (HTML/CSS) from application logic. This implies that PHP > code is application logic, and is separated from the presentation.  Source: <https://www.smarty.net/about_smarty>  ## Impact ##  An attacker controlling the executed template code can read arbitrary files accessible by the webserver by exploiting the vulnerability documented in this advisory. Sensitive data such as database credentials might get exposed through this attack.  We recommend upgrading to version or newer.  ## Vulnerability Description ##  Smarty allows restricting which paths are accessible paths during template evaluation. This feature is implemented in the `Smarty_Security` class and is enabled via the method `enableSecurity`. However, the trusted directory check implemented in the method `isTrustedResourceDir` of the `Smarty_Security` class is vulnerable to path traversal.  The method `isTrustedResourceDir` first builds a list of allowed directories in `$filepath` and then relies on the `_checkDir` method to check if the requested resource dir is trusted. In version neither `isTrustedResourceDir` nor `_checkDir` avoid path traversal:  ```php public function isTrustedResourceDir($filepath, $isConfig = null) {     [...]     $this->_resource_dir = $this->_checkDir($filepath, $this->_resource_dir);     return true; }  private function _checkDir($filepath, $dirs) {     $directory = dirname($filepath) . DIRECTORY_SEPARATOR;     $_directory = array();     while (true) {         // remember the directory to add it to _resource_dir in case we're successful         $_directory[ $directory ] = true;         // test if the directory is trusted         if (isset($dirs[ $directory ])) {             // merge sub directories of current $directory into _resource_dir to speed up subsequent lookup             $dirs = array_merge($dirs, $_directory);             return $dirs;         }         // abort if we've reached root         if (!preg_match('#[\\\/][^\\\/]+[\\\/]$#', $directory)) {             break;         }         // bubble up one level         $directory = preg_replace('#[\\\/][^\\\/]+[\\\/]$#', DIRECTORY_SEPARATOR, $directory);     }     // give up     throw new SmartyException("directory '{$filepath}' not allowed by security setting"); } ```  In version `_checkDir` calls `_realpath` before checking if the requested resource is trusted. However, the custom realpath method is broken and allows path traversal at least on Unix systems.  For example, the fetch tag uses the `isTrustedResourceDir` method to check if a user-specified path is allowed to read.  ## Proof-of-Concept ##  An attacker can exploit this vulnerability by using the fetch tag:  ```php {fetch file="/var/www/templates/../../../../../etc/passwd"} ```  Full example:  ```php <?php require_once "vendor/autoload.php";  $smarty = new Smarty; $smarty->enableSecurity(); // Fails //$smarty->display('eval:{fetch file="/etc/passwd"}'); // Works $smarty->display('eval:{fetch file="'.addslashes(getcwd()).'/templates/../../../../../etc/passwd"}'); ```  ## Timeline ##  * identification of vulnerability in version * initial vendor contact * disclosed vulnerability to vendor * vendor acknowledged vulnerability and released version * notified vendor about incomplete fix * vendor fixed vulnerability * request CVE from MITRE * MITRE assigned * vendor released fix in version * public release  ## References ##  * Changelog: * Patches:   *   *   *   *  ## Credits ##  * David Gnedt ([SBA Research](https://www.sba-research.org/)) * Thomas Konrad ([SBA Research](https://www.sba-research.org/))  Download attachment of type "application/pgp-keys" bytes)  Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      