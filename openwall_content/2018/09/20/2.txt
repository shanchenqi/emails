  oss-security - X41 D-Sec GmbH Security Advisory Multiple  Vulnerabilities in mgetty            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Thu, 20 Sep From: X41 D-Sec GmbH Advisories <advisories@...-dsec.de> To: bugtraq@...urityfocus.com, fulldisclosure@...lists.org,  oss-security@...ts.openwall.com Subject: X41 D-Sec GmbH Security Advisory Multiple  Vulnerabilities in mgetty  -----BEGIN PGP SIGNED MESSAGE----- Hash:  X41 D-Sec GmbH Security Advisory:  Multiple Vulnerabilities in mgetty ==================================   Overview - -------- Confirmed Affected Versions: Patched Versions: Vendor: mgetty Vendor URL: http://mgetty.greenie.net Credit: X41 D-Sec GmbH, Eric Sesterhenn Status: Public Advisory-URL:   Summary and Impact - ------------------ Multiple issues have been identified in the mgetty fax software. These might be used by local users to elevate their privileges. X41 did not perform a full test or audit on the software.   Product Description - ------------------- - From the vendor: For those of you that do not know mgetty+sendfax yet: it's a reliable and proven fax send and receive solution for unix and Linux. But it can do much more... so read the docs and be surprised.  Shell injection via faxq-helper =============================== Severity Rating: Medium Vector: Fax Job CVE: CWE: 78 CVSS Score: 6.1 CVSS Vector: CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:N In fax/faxq-helper.c function do_activate(), not all characters are properly sanitized to prevent command injection. It is possible to use ||, && or > to change the control flow.  {% highlight c %}         /* replace all quote characters, backslash and ';' by '' */         for( q = buf; *q != '\0'; q++ )         {             if ( *q == '\'' || *q == '"' || *q == '`' ||                  *q == '\' || *q == ';' )                                     { *q = ''; }         } {% endhighlight %}  A job file containing malicious input can be constructed using faxq-helper activate <jobid>. One faxrunq is started, the code is executed as the user running the command.  {% highlight bash %}         /* replace all quote characters, backslash and ';' by '' */     #               "   '    \    $   ;     command=tr -d <JOB | \              $AWK 'BEGIN { phone="-"; flags=""; pages="" }                   $1=="phone" { phone=$2 }                   $1=="header"     { flags=flags" -h "$2 }                   $1=="poll"       { flags=flags" -p" }                   $1=="normalres" { flags=flags" -n" }                   $1=="accthandle" { flags=flags" -A }                   $1=="pages" { for( i=2; i<=NF; i++) pages=pages$i" " }                   END { printf "'"$FAXSENDER"' -v%s %s %s", \                                flags, phone, pages }' -`   execute faxsend command ======================= $echo "$command"  eval $command {% endhighlight %}   Stack Based Buffer Overflow With Long Username in contrib/next-login/login.c ============================================================================ Severity Rating: Low Vector: Command Line Parameter CVE: CWE: CVSS Score: 2.9 CVSS Vector: CVSS:3.0/AV:L/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N In file contrib/next-login/login.c the command line parameter username is passed unsanitized to strcpy(), which causes a stack based buffer overflow if too long.  {% highlight c %}         char tbuf[MAXPATHLEN + 2], tname[sizeof(PATHTTY) + 10]; ...         if (*argv) {                 username = *argv;                 ask = 0; ...                 if (failures && strcmp(tbuf, username)) {                         if (failures > (pwd ? 0 : 1))                                 badlogin(tbuf);                         failures = 0;                 }                 (void)strcpy(tbuf, username); {% endhighlight %}   Stack Based Buffer Overflow With Long Argument in contrib/scrts.c ================================================================= Severity Rating: Low Vector: Command Line Parameter CVE: CWE: CVSS Score: 2.9 CVSS Vector: CVSS:3.0/AV:L/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N In file contrib/scrts.c a stack buffer overflow can be triggered via command line parameter.  {% highlight c %} int main( int argc, char ** argv ) { int i, fd; struct termios tio; char  for ( i=1; i<argc; i++ )  {      if ( strchr( argv[i], '/' ) == NULL )          sprintf( device, "/dev/%s", argv[i] );      else          strcpy( device, argv[i] ); {% endhighlight %}   Stack Based Buffer Overflow and Command injection in faxrec.c ============================================================= Severity Rating: Low Vector: Command Line Parameter CVE: (for command injection), (for overflow) CWE: CVSS Score: 2.9 CVSS Vector: CVSS:3.0/AV:L/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N In file faxrec.c function fax_notify_mail(), the mail_to parameter is not sanitized. It could allow for command injection or a buffer overflow if it is too long. If is called from facrec() which in turn is called from main() in mgetty.c. Since the notify_mail parameter is a configuration parameter, it should only be possible to set it from trusted source. If mgetty would be used with e.g. a webfront end, this might be abused for a privilege escalation.  {% highlight c %} void faxnotifymail P3( (pagenum, ppagenum, mailto),                           int pagenum, int ppagenum, char * mailto ) { FILE  * pipefp; char  * filename, * p; char    int     r; timet  ti;     lprintf( LNOISE, "faxnotifymail: sending mail to: %s", mailto );     sprintf( buf, "%s %s >/dev/null 2>&1", MAILER, mailto );     pipefp = popen( buf, "w" ); {% endhighlight %}   Endless loop in =========================== When converting g32 files using an endless loop can be triggered by malformed input file. Example can be found at files/g32pmbinfiniteloop.  Out Of Bounds Access in =================================== When converting pbm files using out of bounds accesses can occur with malformed input files in putwhitespan(). An example can be found with files/pbm2g2oobaccess.  {% highlight c %}      putcode( twhite[l].bitcode, twhite[l].bitlength ); {% endhighlight %}   Workaround - ---------- None.   Timeline - -------- Issues found Issue reported to vendor Vendor reply Vendors sends patches CVE IDs requested CVE IDs assigned Patched Version released Advisory released  About X41 D-SEC GmbH ==================== X41 is an expert provider for application security services. Having extensive industry experience and expertise in the area of information security, a strong core security team of world class security experts enables X41 to perform premium security services. Fields of expertise in the area of application security are security centered code reviews, binary reverse engineering and vulnerability discovery. Custom research and a IT security consulting and support services are core competencies of X41.  - --  X41 D-SEC GmbH, Dennewartstr. Aachen T: +49 Fax: -9 Unternehmenssitz: Aachen, Amtsgericht Aachen: Geschäftsführer: Markus Vervier   -----BEGIN PGP SIGNATURE-----  =g4wJ -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      