  oss-security - Re: Re: More Ghostscript Issues: Should we disable PS  coders in policy.xml by default?            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 6 Sep From: Marcus Meissner <meissner@...e.de> To: oss-security@...ts.openwall.com, taviso@...gle.com Subject: Re: Re: More Ghostscript Issues: Should we disable PS  coders in policy.xml by default?  Hi,  Following CVEs have been assigned by Mitre:  > > # > handling /undefined results in SEGV   > > # missing type check in ztype   > # > A /invalidaccess checks stop working after a failed restore > # > B /invalidaccess checks stop working after a failed restore > # > C /invalidaccess checks stop working after a failed restore > > D /invalidaccess checks stop working after a failed restore   > > # - missing type checking in setcolor   > > # - LockDistillerParams boolean missing type checks   > > # - Bypassing PermitFileReading by handling undefinedfilename errors   > > # - shading_param incomplete type checking > > # - shading_param incomplete type checking   > > # - pdf14 garbage collection memory corruption   > > # - .setdistillerkeys memory corruption  	CVE Requested (this morning, will be assigned in some hours I expect)  > > # - corrupt device object after error in job   > > # - .tempfile SAFER restrictions seem to be broken   > > # - memory corruption in aesdecode   > > # - .definemodifiedfont memory corruption if /typecheck is handled   > > # gssetresolution memory corruption   > > # handling /undefined results in SEGV > > # PDF interpreter can leave dangerous operators available  	As its the same commit, I assume it is also covered by from bug  I have not yet requested the current issue(s) you spotted.  Ciao, Marcus  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      