  oss-security - perl Crypt::JWT vulnerability            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Fri, 7 Sep From: Jeremy Choi <jechoi@...hat.com> To: oss-security@...ts.openwall.com Subject: perl Crypt::JWT vulnerability  A vulnerability that might be able to cause bypass authentication was discovered by myself in Perl Crypt::JWT package prior to - ). ## Details  (JWT.pm) # key my $key = defined $args{keypass} ? [$args{key}, $args{keypass}] : $args{key}; my $kid = exists $header->{kid} ? $header->{kid} : $unprotected_header->{kid}; if (!defined $key && defined $kid && $args{kid_keys}) { my $k = _kid_lookup($kid, $args{kid_keys}, $alg); $key = $k if defined $k; } # if no key given, try to use 'jwk' value from header $key = $header->{jwk} if !$key && $header->{jwk};  The vulnerability comes from line If no 'kid' is given, 'jwk' will be used instead. Where is set as alg, it's okay as _prepare_rsa_key() will be failed. However, if is set, the key from the 'jwk' header is used for decoding.  ...  elsif ($alg =~ { # HMAC integrity $key = _prepare_oct_key($key); return 1 if $sig eq hmac("SHA$1", $key, $data); }  ...  65 sub _prepare_oct_key { 66 my ($key) = @_; 67 croak "JWT: undefined oct key" unless defined $key; 68 if (ref $key eq 'HASH' && $key->{k} && $key->{kty} && $key->{kty} eq 'oct') { 69 return decode_b64u($key->{k}); 70 } 71 elsif (!ref $key) { 72 return $key; 73 }  Since the jwk key is a string, it reaches line 72 and then above.  If a project uses Crypt::JWT for its authentication without additional mitigation, it may allow attackers to bypass authentication by providing a token by crafting with hmac() with  I'm requesting a CVE ID through DWF.  Thanks -- Jeremy Choi / Red Hat Product Security   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      