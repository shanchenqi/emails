  oss-security - Re: Multiple telnet.c overflows            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 12 Dec From: Tavis Ormandy <taviso@...gle.com> To: oss-security@...ts.openwall.com Cc: hackerfantastic@...glemail.com Subject: Re: Multiple telnet.c overflows  On Tue, Dec 11, at PM Alan Coopersmith < alan.coopersmith@...cle.com> wrote:  > On AM, Hacker Fantastic wrote: > > When a telnet server requests environment options the sprintf on line > will > > not perform bounds checking and causes an overflow of stack buffer > > temp[50] defined > > at line This issue can be trivially fixed using a patch to add > > bounds checking > > to sprintf such as with a call to snprintf(); > > GNU inetutils telnet is a fork of the original BSD telnet code, but most of > the BSD's seem to have already switched to snprintf a while ago: > > To be clear, this is a bug in the (little used) GNU inetutils telnet *client*, not server. It's hard to imagine a real usage of this in a context that would be exploitable.  If you can set DISPLAY, then you can probably also set LD_PRELOAD, and if you can interact with the command then you can use shell escapes.  I asked on twitter, and was told that maybe someone is using untrusted telnet:// URIs with GNU inetutils, but there are no known examples. I was also told that "plenty" of embedded devices GNU inetutils in restricted shells. I'm told Mikrotik RouterOS is an example, but it's not clear to me if it's using it in a context that would make this a security issue, and if they did how they locked down the command to prevent trivial escapes.  Tavis.   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      