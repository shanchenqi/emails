  oss-security - Announce: OpenSSH 7.7 released            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Mon, 2 Apr (MDT) From: Damien Miller <djm@...nbsd.org> To: oss-security@...ts.openwall.com Subject: Announce: OpenSSH 7.7 released  OpenSSH 7.7 has just been released. It will be available from the mirrors listed at http://www.openssh.com/ shortly.  OpenSSH is a complete SSH protocol 2.0 implementation and includes sftp client and server support.  Once again, we would like to thank the OpenSSH community for their continued support of the project, especially those who contributed code or patches, reported bugs, tested snapshots or donated to the project. More information on donations may be found at: http://www.openssh.com/donations.html  Potentially-incompatible changes ================================  This release includes a number of changes that may affect existing configurations:   * ssh(1)/sshd(8): Drop compatibility support for some very old SSH    implementations, including ssh.com <=2.* and OpenSSH <= 3.*. These    versions were all released in or before and predate the final    SSH RFCs. The support in question isn't necessary for RFC-compliant    SSH implementations.  Changes since OpenSSH 7.6 =========================  This is primarily a bugfix release.  New Features ------------   * All: Add experimental support for PQC XMSS keys (Extended Hash-    Based Signatures) based on the algorithm described in    https://tools.ietf.org/html/draft-irtf-cfrg-xmss-hash-based-signatures-12    The XMSS signature code is experimental and not compiled in by    default.   * sshd(8): Add a "rdomain" criteria for the sshd_config Match keyword    to allow conditional configuration that depends on which routing    domain a connection was received on (currently supported on OpenBSD    and Linux).   * sshd_config(5): Add an optional rdomain qualifier to the    ListenAddress directive to allow listening on different routing    domains. This is supported only on OpenBSD and Linux at present.   * sshd_config(5): Add RDomain directive to allow the authenticated    session to be placed in an explicit routing domain. This is only    supported on OpenBSD at present.   * sshd(8): Add "expiry-time" option for authorized_keys files to    allow for expiring keys.   * ssh(1): Add a BindInterface option to allow binding the outgoing    connection to an interface's address (basically a more usable    BindAddress)   * ssh(1): Expose device allocated for tun/tap forwarding via a new    %T expansion for LocalCommand. This allows LocalCommand to be used    to prepare the interface.   * sshd(8): Expose the device allocated for tun/tap forwarding via a    new SSH_TUNNEL environment variable. This allows automatic setup of    the interface and surrounding network configuration automatically on    the server.   * Add URI support to ssh, sftp and scp, e.g.    ssh://user@...t or sftp://user@...t/path.  Additional connection    parameters described in draft-ietf-secsh-scp-sftp-ssh-uri-04 are not    implemented since the ssh fingerprint format in the draft uses the    deprecated MD5 hash with no way to specify the any other algorithm.   * ssh-keygen(1): Allow certificate validity intervals that specify    only a start or stop time (instead of both or neither).   * sftp(1): Allow "cd" and "lcd" commands with no explicit path    argument. lcd will change to the local user's home directory as    usual. cd will change to the starting directory for session (because    the protocol offers no way to obtain the remote user's home    directory).   * sshd(8): When doing a config test with sshd -T, only require the    attributes that are actually used in Match criteria rather than (an    incomplete list of) all criteria.  Bugfixes --------   * ssh(1)/sshd(8): More strictly check signature types during key    exchange against what was negotiated. Prevents downgrade of RSA    signatures made with to SHA-1.   * sshd(8): Fix support for client that advertise a protocol version    of (indicating that they are prepared to accept both SSHv1 and    SSHv2). This was broken in OpenSSH 7.6 during the removal of SSHv1    support.   * ssh(1): Warn when the agent returns a ssh-rsa (SHA1) signature when    a signature was requested. This condition is possible    when an old or non-OpenSSH agent is in use.   * ssh-agent(1): Fix regression introduced in 7.6 that caused ssh-agent    to fatally exit if presented an invalid signature request message.   * sshd_config(5): Accept yes/no flag options case-insensitively, as    has been the case in ssh_config(5) for a long time.   * ssh(1): Improve error reporting for failures during connection.    Under some circumstances misleading errors were being shown.   * ssh-keyscan(1): Add -D option to allow printing of results directly    in SSHFP format.   * regress tests: fix PuTTY interop test broken in last release's SSHv1    removal.   * ssh(1): Compatibility fix for some servers that erroneously drop the    connection when the IUTF8 option is sent.   * scp(1): Disable RemoteCommand and RequestTTY in the ssh session    started by scp (sftp was already doing this.)   * ssh-keygen(1): Refuse to create a certificate with an unusable    number of principals.   * ssh-keygen(1): Fatally exit if ssh-keygen is unable to write all the    public key during key generation. Previously it would silently    ignore errors writing the comment and terminating newline.   * ssh(1): Do not modify hostname arguments that are addresses by    automatically forcing them to lower-case. Instead canonicalise them    to resolve ambiguities (e.g. => ::1) before they are matched    against known_hosts.   * ssh(1): Don't accept junk after "yes" or "no" responses to hostkey    prompts.   * sftp(1): Have sftp print a warning about shell cleanliness when    decoding the first packet fails, which is usually caused by shells    polluting stdout of non-interactive startups.   * ssh(1)/sshd(8): Switch timers in packet code from using wall-clock    time to monotonic time, allowing the packet layer to better function    over a clock step and avoiding possible integer overflows during    steps.   * Numerous manual page fixes and improvements.  Portability -----------   * sshd(8): Correctly detect MIPS ABI in use at configure time. Fixes    sandbox violations on some environments.   * sshd(8): Remove UNICOS support. The hardware and software are literal    museum pieces and support in sshd is too intrusive to justify    maintaining.   * All: Build and link with "retpoline" flags when available to mitigate    the "branch target injection" style (variant 2) of the Spectre    branch-prediction vulnerability.   * All: Add auto-generated dependency information to Makefile.   * Numerous fixed to the RPM spec files.  Checksums: ==========  - SHA1 (openssh-7.7.tar.gz) = - (openssh-7.7.tar.gz) =  - SHA1 = - =  Please note that the signatures are base64 encoded and not hexadecimal (which is the default for most checksum tools). The PGP key used to sign the releases is available as RELEASE_KEY.asc from the mirror sites.  Reporting Bugs: ===============  - Please read http://www.openssh.com/report.html   Security bugs should be reported directly to openssh@...nssh.com   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      