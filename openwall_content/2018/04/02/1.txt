  oss-security - Possible Execution of Arbitrary Code Within  Deserialization Endpoints of Apache Ignite            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Sun, 1 Apr From: Denis Magda <dmagda@...che.org> To: dev <dev@...ite.apache.org>, user@...ite.apache.org,  	Man Yue Mo <mmo@...mle.com>, security@...che.org, security@...ite.apache.org,  	oss-security@...ts.openwall.com Subject: Possible Execution of Arbitrary Code Within  Deserialization Endpoints of Apache Ignite  Possible Execution of Arbitrary Code Within Deserialization Endpoints of Apache Ignite  Severity: Important  Vendor: The Apache Software Foundation  Versions Affected: Apache Ignite 2.3 or earlier  Impact: An attacker can execute arbitrary code on Ignite nodes in the case when Ignite classpath contains arbitrary vulnerable classes.  Description: Apache Ignite serialization mechanism does not have a list of classes allowed for serialization/deserialization, which makes it possible to run arbitrary code when 3-rd party vulnerable classes are present in Ignite classpath. The vulnerability can be exploited if the one sends a specially prepared form of a serialized object to one of the deserialization endpoints of some Ignite components -   discovery SPI, Ignite persistence, Memcached endpoint, socket steamer.  Mitigation: â˘    All Ignite versions: make sure there are no vulnerable classes among your custom code used in Apache Ignite. â˘    Ignite 2.3 or earlier users: upgrade to Ignite 2.4 and use IGNITE_MARSHALLER_WHITELIST and/or IGNITE_MARSHALLER_BLACKLIST system properties to define classes allowed for deserialization  Credit: The vulnerability was discovered by Man Yue Mo of lgtm.com.  References: *   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      