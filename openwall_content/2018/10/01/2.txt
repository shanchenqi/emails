  oss-security - Re: Django security release issued:            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 1 Oct From: Solar Designer <solar@...nwall.com> To: Carlton Gibson <carlton.gibson@...il.com> Cc: oss-security@...ts.openwall.com Subject: Re: Django security release issued:  On Mon, Oct 01, at Carlton Gibson wrote: > Today the Django team issued as part of our security  > process. This release address a security issue, and we encourage all  > users to upgrade as soon as possible:  >  >  First of all, thank you for sharing this with oss-security.  Per oss-security list content guidelines, actual vulnerability detail must be included in postings (message body or text/plain attachment). The Subject could have easily been more descriptive for this list, too - e.g., Django: Password hash disclosure to "view only" admin users".  Carlton, I'd appreciate it if you include such detail in your oss-security postings (if any) on future occasions.  Including the links as well is great (such as for easy access to updated revisions while the links work); including only links is discouraged.  Here's the vulnerability detail from the above URL:  --- Password hash disclosure to "view only" admin users  If an admin user has the change permission to the user model, only part of the password hash is displayed in the change form. Admin users with the view (but not change) permission to the user model were displayed the entire hash. While it's typically infeasible to reverse a strong password hash, if your site uses weaker password hashing algorithms such as MD5 or SHA1, it could be a problem.  Thanks Phithon Gong for reporting this issue. ---  BTW, the feasibility of "reversing" a password hash depends not only on hash type, but also on how many guesses the attacker would need to make before likely hitting the right password.  Without target user specific information, that number depends on how common or not the password is.  Maybe the word "typically" allows for this exception for weak passwords. However, unnecessarily revealing the password hash is a problem on its own, not just "could be a problem" depending on hash type, although the restriction to "admin users" and password hashing do mitigate the issue to some extent.  Thanks,  Alexander  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      