  oss-security - Re: ghostscript: bypassing executeonly to escape  -dSAFER sandbox            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 10 Oct From: Doran Moppert <dmoppert@...hat.com> To: oss-security@...ts.openwall.com Cc: Bob Friesenhahn <bfriesen@...ple.dallas.tx.us> Subject: Re: ghostscript: bypassing executeonly to escape  -dSAFER sandbox  Given the number of eyes & hours on these issues my question has to be  naive, so I apologise, but couldn't seccomp provide a safe "safe mode"  relatively easily?  What syscalls does legit ghostscript need once the  input and output streams are open?  On Tue, Oct 09, at Alex Gaynor wrote: >Would they consider making a build-time "safe PS only" flag that ensured it >was compiled without things like shell-invocation? Then we could just try >to convince Linux distros to package it that way :-) > >Alex > >On Tue, Oct 9, at PM Tavis Ormandy <taviso@...gle.com> wrote: > >> On Tue, Oct 9, at PM Perry E. Metzger <perry@...rmont.com> >> wrote: >> >> > I keep wondering if there isn't a way to fully remove the dangerous >> > bits from a postscript interpreter so it can _only_ be used to view >> > the document and literally has no file system access compiled in at >> > all, so there's no way to touch the fs etc. regardless of what flags >> > the interpreter is invoked with. >> > >> > (I, too, find removing the ability to look at historical postscript >> > documents a bit more draconian than I like.) >> > >> > >> I've discussed it with upstream, it's a hard no because they feel it would >> make ghostscript non-conforming (i.e. non-conforming with the Adobe >> PostScript Language Reference Manual) >> >> We probably have similar thoughts on this, but that is the final word from >> upstream. >> >> Tavis.  --  Doran Moppert Red Hat Product Security  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      