  oss-security - Re: GCC Compiler Induced Vulnerability - affects  programs compiled with GCC 7 and 8 containing nested functions            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 23 Oct From: Ramon de C Valle <rcvalle@...e.com> To: Andrew Sandoval <ASandoval@...root.com>, "oss-security@...ts.openwall.com" 	<oss-security@...ts.openwall.com> Subject: Re: GCC Compiler Induced Vulnerability - affects  programs compiled with GCC 7 and 8 containing nested functions  > This is already public because oss-security is a public mailing list. >  > Most GNU/Linux distributions ensure that only very special binaries > (such as some versions of the Ada compiler) enable executable stacks. > In our experience, if the toolchain produces a binary that requests an > executable stack, it is more likely due to manually written assembler > files without the required stack executability markup section, and not > due to nested C functions whose address escapes.  Without scanning built > binaries for these discrepancies, such cases could easily be missed. >  > Please also note that an executable stack is not a vulnerability itself, > and it is not directly exploitable.  (The same applies to the lack of > Intel CET support in binaries.)  While I agree with that I still think that this extension (or its name) is misleading, see The PF_X flag set in the PT_GNU_STACK segment header or the absence of the PT_GNU_STACK segment header can result in an application unnoticeably having not only the stack, but also all readable virtual memory mappings also executable.  Ramon de C Valle Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      