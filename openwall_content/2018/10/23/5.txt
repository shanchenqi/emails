  oss-security - GLib GVariant, GDBus and GMarkup out of bounds reads,  DoS and unbounded recursion            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Tue, 23 Oct From: Philip Withnall <philip@...nocode.co.uk> To: oss-security@...ts.openwall.com Subject: GLib GVariant, GDBus and GMarkup out of bounds reads,  DoS and unbounded recursion  Hello,  Various fixes to GVariant, GDBus and GMarkup have just been pushed to GLib, to deal with several problems kindly found in them by the oss- fuzz project.  The fixes are here, with an explanation of each problem in the commit messages:   We are looking at doing backports to the and branches. They will be linked from the above merge request when available, but will differ due to not being able to introduce new APIs.  We do not plan to make new tarball releases purely to include these fixes. If you need to package the fixes, please pick them from the merge request above.  It’s likely that the GVariant and GDBus implementations shipped in all prior versions of GLib are affected. GVariant first shipped in GLib GDBus in GLib It’s also likely that the GMarkup code has always been vulnerable. We have not verified the minimum bound of the vulnerable versions, though.  In brief, the problems fixed are:  • Arithmetic underflow when calculating GVariant tuple element ends resulting from missing validation of the offset table. This can result in an out of bound read. Fixed by adding validation.  • Unbounded call recursion when handling highly recursive GVariant types. This can result in a call stack overflow. Fixed by limiting GVariant type recursion with static and dynamic types in untrusted GVariant instances.  • Infinite loop when getting a child from a serialised variable array, due to missing validation that the child offset does not point into the offset table itself. Fixed by adding validation.  • Similarly for serialised tuples.  • nul bytes could pass through UTF-8 validation for long GVariant strings due to a signed/unsigned mismatch. Fix: add a new validation function which operates on an unsigned string length.  • Critical warning when parsing a D-Bus message with the wrong type for its signature field in its message header. Fix: validate the type before unwrapping that field.  • Critical warning when parsing a D-Bus message with a header field containing a variant with an empty type signature, due to a mismatch between validation of D-Bus type signatures and validation of GVariant type strings. Fix: validate that the field is a valid type string too.  Philip Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      