  oss-security - arm64 Linux kernel: Privilege escalation by taking control of the  KVM hypervisor            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Tue, 2 Oct From: Will Deacon <will.deacon@....com> To: oss-security@...ts.openwall.com Cc: marc.zyngier@....com Subject: arm64 Linux kernel: Privilege escalation by taking control of the  KVM hypervisor  Hi all,  Whilst reviewing some proposed arm64 KVM changes, it became apparent that the sanity checking for the KVM_SET_ON_REG ioctl() on arm64 does not correctly handle a number of cases:  	- Unaligned register accesses and accesses that span multiple 	  registers can bypass PSTATE sanity checking  	- The PSTATE sanity checking fails to take into account the 	  capabilities of the physical CPU, or the configuration of 	  the virtual CPU  This allows an attacker with permission to create KVM-based virtual machines to both panic the hypervisor by triggering an illegal exception return (resulting in a DoS) and to redirect execution elsewhere within the hypervisor with full register control, instead of causing a return to the guest.  This has been fixed by upstream commits:  ("arm64: KVM: Tighten guest core register access from userspace") ("arm64: KVM: Sanitize PSTATE.M when being set from userspace")  which are being backported and applied to all active -stable kernels.  32-bit Arm is unaffected by this issue.  There has not yet been a CVE requested for this (mainly because I don't know how to do it).  Thanks,  Will  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      