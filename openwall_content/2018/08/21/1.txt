  oss-security - - linux kernel - double free in midi subsystem            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Tue, 21 Aug From: Wade Mealing <wmealing@...hat.com> To: oss-security@...ts.openwall.com Subject: - linux kernel - double free in midi subsystem  Gday,  The linux midi subsystem has a possible memory corruption flaw accessing midi devices.  This was fixes upstream in commit and newer not affected). Red hat has assigned for this issue.  The raw midi kernel driver does not protect against concurrent access which leads to a double-realloc (double free) in snd_rawmidi_input_params() and snd_rawmidi_output_status() which are part of snd_rawmidi_ioctl() handler in rawmidi.c file. Here is an excerpt of the concerned code:  ```     if (params->buffer_size != runtime->buffer_size) {         newbuf = krealloc(runtime->buffer, params->buffer_size,                   GFP_KERNEL);         if (!newbuf)             return -ENOMEM;         runtime->buffer = newbuf;         runtime->buffer_size = params->buffer_size;         runtime->avail = runtime->buffer_size;     } ```  If a midi device is plugged in or emulated (which is the case under a default VMware instance), then this device driver is reachable via /dev/snd/midiC0D* interfaces.  This can lead to memory corruption and all the fun that follows if abused correctly.  Thanks to ZDI has done the reporting to Red Hat,   --  Wade Mealing  Product Security - Kernel, RHCE  Red Hat  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      