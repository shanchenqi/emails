  oss-security - X.Org security advisory: August 21,            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Tue, 21 Aug From: Matthieu Herrb <matthieu@...rb.eu> To: oss-security@...ts.openwall.com Subject: X.Org security advisory: August 21,   X.Org security advisory: August 21,  Multiple issues in libX11 =========================  The functions XGetFontPath, XListExtensions and XListFonts from libX11 are vulnerable to three different issues:  Off-by-one writes -----------------------------------  The functions XGetFontPath, XListExtensions, and XListFonts are vulnerable to an off-by-one override on malicious server responses.  The server replies consist of chunks consisting of a length byte followed by actual string, which is not NUL-terminated.  While parsing the response, the length byte is overridden with '\0', thus the memory area can be used as storage of C strings later on. To be able to NUL-terminate the last string, the buffer is reserved with an additional byte of space.  For a boundary check, the variable chend (end of ch) was introduced, pointing at the end of the buffer which ch initially points to. Unfortunately there is a difference in handling "the end of ch".  While chend points at the first byte that must not be written to, the for-loop uses chend as the last byte that can be written to.  Therefore, an off-by-one can occur.   Out of boundary write ---------------------------------------  The length value is interpreted as signed char on many systems (depending on default signedness of char), which can lead to an out of boundary write up to bytes in front of the allocated storage, but limited to NUL byte(s).  Casting the length value to unsigned char fixes the problem and allows string values with up to characters.  Crash on invalid reply ----------------------------------------  If the server sends a reply in which even the first string would overflow the transmitted bytes, list[0] (or flist[0]) will be set to NULL and a count of 0 is returned.  If the resulting list is freed with XFreeExtensionList or XFreeFontPath later on, the first Xfree call:      Xfree (list[0]-1)  turns into     Xfree (NULL-1)  which will most likely trigger a segmentation fault.  Patches =======  Patches for these issues have been commited to the libX11 git repository. libX11 will be released shortly and will include those patches.  https://gitlab.freedesktop.org/xorg/lib/libx11      Thanks ======  X.Org thanks Tobias Stoeckmann for reporting these issues to our security team and assisting them in understanding them and evaluating our fixes.  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      