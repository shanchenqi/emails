  oss-security - X41 D-Sec GmbH Security Advisory Multiple  Vulnerabilities in pam_pkcs11            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Tue, 14 Aug From: X41 D-Sec GmbH Advisories <advisories@...-dsec.de> To: bugtraq@...urityfocus.com, oss-security@...ts.openwall.com,  fulldisclosure@...lists.org Subject: X41 D-Sec GmbH Security Advisory Multiple  Vulnerabilities in pam_pkcs11  -----BEGIN PGP SIGNED MESSAGE----- Hash:  X41 D-Sec GmbH Security Advisory:  Multiple Vulnerabilities in pam_pkcs11 ======================================   Overview - -------- Confirmed Affected Versions: Confirmed Patched Versions: - Vendor: Unmaintained Vendor URL: https://github.com/OpenSC/pampkcs11 Credit: X41 D-Sec GmbH, Eric Sesterhenn Status: Public Advisory-URL:   Summary and Impact - ------------------ It is possible to replay an authentication by using a specially prepared smartcard or token in case pam-pkcs11 is compiled with NSS support. Furthermore two minor implementation issues have been identified. X41 did not perform a full test or audit on the software.   Product Description - ------------------- This Linux-PAM login module allows a certificate based user login. The certificate and its dedicated private key are thereby accessed by means of an appropriate PKCS #11 module. For the verification of the users' certificates, locally stored CA certificates as well as either online or locally accessible CRLs are used.  Authentication Replay ===================== Severity Rating: High Vector: Login attempt at compromised machine CVE: - CWE: CVSS Score: 7.0 (High) CVSS Vector: CVSS:3.0/AV:P/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N   Summary and Impact - ------------------ A replay attack is possible due to a logic bug in file pampkcs11.c. In function `pamsmauthenticate()a nonce is generated and signed with the card to verify that the card holds the matching secret key, if a valid certifiate is found. This is done using the functiongetrandomvalue(), which in turn callsPK11GenerateRandom()`, which queries the smartcard for random data. This allows for a replay attack with a malicious smartcard. If a user plugins in his card into a compromised computer, the nonce and answer can be recorded by an attacker. The attacker then modifies a smartcard or a smartcard emulator to replay with the exact same nonce and signed data, which allows the attacker to login to another computer without having further access to the smartcard.   Workarounds - ----------- Switch to pam_p11.  Buffer Overflow =============== Severity Rating: Low Vector: Overly long user home directory CVE: - CWE: CVSS Score: - CVSS Vector: -   Summary and Impact - ------------------ In file opensshmapper.c a stack based buffer overflow is possible if a user has a home directory with a length of more than bytes. This allows to overwrite the passwd structure and possibly the return address in `opensshmappermatchuser()`;  {% highlight c %} opensshmapper.c static int const char *user, void *context) {         struct passwd *pw;         char         if return -1;         if (!user) return -1;         pw = getpwnam(user);         if (!pw || isemptystr(pw->pwdir) ) {             DBG1("User '%s' has no home directory",user);             return -1;         }         sprintf(filename,"%s/.ssh/authorizedkeys",pw->pwdir);         return } {% endhighlight %}   Workarounds - ----------- Switch to pam_p11.  Memory not cleaned properly before free() ========================================= Severity Rating: Low Vector: - CVE: - CWE: CVSS Score: - CVSS Vector: - _  Summary and Impact - ------------------ In several places memory is set to zero using memset() and passed on to free() afterwards. This is a pattern which modern compilers optimize away, which renders the call to memset() useless. This causes sensitive data such as passwords to remain in the memory, which defeats the original intention of the code.  {% highlight c %}    memset(password, 0, strlen(password));    free(password); {% endhighlight %}   Workarounds - ----------- Switch to pam_p11.  Timeline ======== Issues found Vendor contacted Vendor reply Technical details provided Private git branch created, issues fixed Patched version released at Advisory released - --  X41 D-SEC GmbH, Dennewartstr. Aachen T: +49 Fax: -9 Unternehmenssitz: Aachen, Amtsgericht Aachen: Geschäftsführer: Markus Vervier -----BEGIN PGP SIGNATURE-----  =IaN0 -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      