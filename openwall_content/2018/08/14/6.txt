  oss-security - X41 D-Sec GmbH Security Advisory Multiple  Vulnerabilities in Apple smartcardservices            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Tue, 14 Aug From: X41 D-Sec GmbH Advisories <advisories@...-dsec.de> To: bugtraq@...urityfocus.com, fulldisclosure@...lists.org,  oss-security@...ts.openwall.com Subject: X41 D-Sec GmbH Security Advisory Multiple  Vulnerabilities in Apple smartcardservices  -----BEGIN PGP SIGNED MESSAGE----- Hash:  X41 D-Sec GmbH Security Advisory:  Multiple Vulnerabilities in Apple smartcardservices ===================================================   Overview - -------- Confirmed Affected Versions: Confirmed Patched Versions: Vendor: Apple Vendor URL: https://smartcardservices.github.io/ Credit: X41 D-Sec GmbH, Eric Sesterhenn Status: Public Advisory-URL:   Summary and Impact - ------------------ Attackers with local access can exploit security issues in the smartcard driver. These result in memory corruptions, which might lead to code execution. Since smartcards can be used for authentication, the vulnerabilities may allow an attacker to login to the system without valid credentials as any user. X41 did not perform a full test or audit on the software.   Product Description - ------------------- The Smart Card Services project is comprised of several components which, when combined, provide the necessary abstraction layer and integration of smart cards into Apple’s CDSA implementation.  Stack based buffer overflow =========================== Severity Rating: Medium Vector: APDU Response CVE: CWE: CVSS Score: 7.1 (High) CVSS Vector: CVSS:3.0/AV:P/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:H   Summary and Impact - ------------------ In file Tokend/CAC/CACRecord.cpp the function CACCertificateRecord::getDataAttribute() might overwrite the value certificate and possibly other stack data, if a smartcard provides malicious data.  {% highlight c++ %}         unsigned char command[] = { };         unsigned char result[MAXBUFFERSIZE];         sizet resultLength = sizeof(result);         uint8 certificate[CACMAXSIZECERT];         uint8 uncompressed[CACMAXSIZECERT];         sizet certificateLength = 0;         try         {                 PCSC::Transaction (cacToken);                 cacToken.select(mApplication);                 uint32t cacreturn;                 do                 {                         cacreturn = cacToken.exchangeAPDU(command, sizeof(command), result,                                 resultLength);                         if ((cacreturn & !=                                 CACError::check(cacreturn);                         sizet requested = command[4];                         if (resultLength != requested + 2)                 PCSC::Error::throwMe(SCARDEPROTOMISMATCH);                         memcpy(certificate + certificateLength, result, resultLength - 2);                         certificateLength += resultLength - 2;                         // Number of bytes to fetch next time around is in the last byte                         // returned.                         command[4] = cacreturn & 0xFF;                 } while ((cacreturn & ==         }         catch (...)         {                 return NULL;         } {% endhighlight %}  As long as the smartcard returns a return code of more data is copied into the certificate buffer, causing a stack based overflow. A malicious smartcard is able to control all of the overflowed bytes.   Workarounds - ----------- None  Stack based buffer overflow with limited input ============================================== Severity Rating: Medium Vector: APDU Response CVE: CWE: CVSS Score: 7.1 (High) CVSS Vector: CVSS:3.0/AV:P/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:H   Summary and Impact - ------------------ In file Tokend/PKCS11/GemaltoKeyHandle.cpp the function GemaltoPrivateKeyRecord::computeDecrypt() might overwrite the value strData if the supplied dataLength is too big.  {% highlight c++ %} void GemaltoPrivateKeyRecord::computeDecrypt(GemaltoToken &gemaltoToken, CKULONG mech, const AccessCredentials *cred, unsigned char *data, sizet dataLength, unsigned char output, size_t &outputLength) {         GemaltoToken::log("\nGemaltoPrivateKeyRecord::computeDecrypt <BEGIN>\n");         GemaltoToken::log("GemaltoPrivateKeyRecord::computeDecrypt - mechanism <%lu>\n", mech);         GemaltoToken::log("GemaltoPrivateKeyRecord::computeDecrypt - cred <%p>\n", cred);         char         memset(strData, '\0', sizeof(strData));         char str = strData;         for (size_t i=0; i<dataLength; i++)         {                 str += sprintf(str, "%02x ", data[i]);         }         GemaltoToken::log("GemaltoPrivateKeyRecord::computeDecrypt - dataLength <%lu> - data <%s>\n", dataLength, strData);         GemaltoToken::log("GemaltoPrivateKeyRecord::computeDecrypt - output <%p>\n", output);         GemaltoToken::log("GemaltoPrivateKeyRecord::computeDecrypt - outputLength <%lu>\n", outputLength); {% endhighlight %}  The attacker might control the data which is to be decrypted, but exploitation is limited by the sprintf() format string.   Workarounds - ----------- None  Timeline ======== Issues found Vendor contacted Automated vendor reply Personal vendor reply Requesting technical feedback from the vendor Vendor states that the bugs are fixed in public git CVE IDs assigned https://smartcardservices.github.io/security/ updated Advisory released - --  X41 D-SEC GmbH, Dennewartstr. Aachen T: +49 Fax: -9 Unternehmenssitz: Aachen, Amtsgericht Aachen: Geschäftsführer: Markus Vervier -----BEGIN PGP SIGNATURE-----  =9tdn -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      