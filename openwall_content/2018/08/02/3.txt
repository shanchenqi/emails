  oss-security - Linux kernel: arbitrary-read vulnerability in the  timer subsystem            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Thu, 2 Aug From: Andrey Konovalov <andreyknvl@...il.com> To: oss-security@...ts.openwall.com Cc: Kostya Serebryany <kcc@...gle.com>, Dmitry Vyukov <dvyukov@...gle.com>,  	Alexander Potapenko <glider@...gle.com>, keescook@...gle.com Subject: Linux kernel: arbitrary-read vulnerability in the  timer subsystem  Hi!  Syzkaller/syzbot found a global-out-of-bounds bug in the timer subsystem of the Linux kernel [1], that is exploitable and can be used to gain an arbitrary-read primitive. This allows to access kernel memory and leak keys, credentials or other sensitive information that is stored there (so the bug has a similar impact to Meltdown). I'll share a PoC exploit in a week.  The bug was introduced in commit ("posix-timers: Show sigevent info in proc file") [2] in and fixed by commit ("posix-timer: Properly check sigevent->sigev_notify") [3] in The bug only affects kernels that have CONFIG_POSIX_TIMERS and CONFIG_CHECKPOINT_RESTORE enabled, which is done by a lot of modern distros.  This bug has been fixed in Ubuntu [7], but still affects at least CentOS 7 at this moment (at least that I've checked). I haven't checked the other distros.  I've contacted linux-distros@ today and was asked to post to oss-security@ right away, since the issue is already public (and has been for the last 8 months, see the timeline below).  ======  Description from MITRE [4]:  The timer_create syscall implementation in kernel/time/posix-timers.c in the Linux kernel before doesn't properly validate the sigevent->sigev_notify field, which leads to out-of-bounds access in the show_timer function (called when /proc/$PID/timers is read). This allows userspace applications to read arbitrary kernel memory (on a kernel built with CONFIG_POSIX_TIMERS and CONFIG_CHECKPOINT_RESTORE).  ======  I thought it would be quite interesting to see when some Linux distros fixed this bug, since there was no CVE requested and assigned until recently.  Initially I was only looking at Ubuntu here's the related timeline:  * Nov 30, - the bug reported by syzbot [5] * Dec 15, - the fix committed upstream [3] * Feb 17, - the fix backported to the 4.4 stable kernel branch [6] * Mar 15, - the fix added to the Ubuntu Xenial 4.4 kernel branch [7] * Jul 25, - CVE requested * Aug 2, - notified linux-distros@ * Aug 2, - announcement on oss-security@  In this particular case of a somewhat "scary" bug there was a window of 3.5 months between the bug being reported and the fixing commit reaching the Ubuntu Xenial 4.4 kernel branch. This gives some insight into how much time it usually takes for a fix to travel from upstream through stable into a distro kernel when there's no CVE. Compared to the 14 days, that distros are usually given to fix a security bug reported through linux-distros@, that seems rather long.  Then I decided to take a look at the CentOS kernel. I was quite surprised to find out that this bug hasn't been fixed there at all. I was under the impression that most Linux distros either follow stable kernel branches or monitor upstream commits for security related fixes themselves. It seems that this is not the case. Perhaps this fix was missed because CentOS 7 kernel is based on the kernel version, and the stable kernel release stopped being supported in November  This is just one bug though. Right now there are fixed bugs reported by syzbot [8] and more, which are still not fixed [9]. Almost none of them have CVEs (if anybody want to practice requesting CVEs, go for it). There are also fixes backported to 4.4 stable kernel. Some of them are security relevant and don't have CVEs. On top of that apparently there are fixes that are missing in the 4.4 stable kernel [10].  It seems that a CVE is required for a particular security related fix to end up in distro kernels, but there are no CVEs requested for most of the bugs that are being fixed. So there's this inconsistency between the Linux kernel community that just fixes the bugs without bothering about CVEs and the distros, which require CVEs to apply fixes to their kernels.  Just some thoughts :)  Thanks!  ======  [1]  [2]  [3]  [4]  [5] https://groups.google.com/d/msg/syzkaller-bugs/9mUyHIix2ys/bTLPoT-kAgAJ  [6]  [7]  [8] https://syzkaller.appspot.com/  [9] https://syzkaller.appspot.com/?fixed=upstream  [10]  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      