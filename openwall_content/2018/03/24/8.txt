  oss-security - Out of bound write in mod_authnz_ldap when using too small Accept-Language values            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Fri, 23 Mar From: Daniel Ruggeri <druggeri@...che.org> To: announce@...pd.apache.org, oss-security@...ts.openwall.com,     security@...pd.apache.org Subject: Out of bound write in mod_authnz_ldap when using too small Accept-Language values   Out of bound write in mod_authnz_ldap when using too small Accept-Language values.  Severity: Low  Vendor: The Apache Software Foundation  Versions Affected: httpd to httpd to httpd to  Description:  mod_authnz_ldap, if configured with AuthLDAPCharsetConfig, uses the Accept-Language header value to lookup the right charset encoding when verifying the user's credentials. If the header value is not present in the charset conversion table, a fallback mechanism is used to truncate it to a two characters value to allow a quick retry (for example, 'en-US' is truncated to 'en'). A header value of less than two characters forces an out of bound write of one NUL byte to a memory location that is not part of the string. In the worst case, quite unlikely, the process would crash which could be used as a Denial of Service attack. In the more likely case, this memory is already reserved for future use and the issue has no effect at all."  Mitigation: All httpd users should upgrade to or later.  Users of (the now end-of-life) httpd 2.2 who cannot upgrade at this time should apply which is available at      Credit: The Apache HTTP Server security team would like to thank Alex Nichols and Jakob Hirsch for reporting this issue.  References: https://httpd.apache.org/security/vulnerabilities_24.html  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      