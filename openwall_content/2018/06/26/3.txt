  oss-security - Re: Linux kernel to  infoleak due to incorrect handling of SG_IO ioctl            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 26 Jun From: Alexander Potapenko <glider@...gle.com> To: Vladis Dronov <vdronov@...hat.com> Cc: oss-security@...ts.openwall.com Subject: Re: Linux kernel to  infoleak due to incorrect handling of SG_IO ioctl  On Fri, Jun 22, at PM Vladis Dronov <vdronov@...hat.com> wrote: > > Hello, Alexander, Hi Vladis, > Could you please, explain, why do you think is a security > flaw? > > > The problem has limited scope, as users don't usually have permissions > > to access SCSI devices. On the other hand, e.g. the Nero user manual > > suggests doing `chmod o+r+w /dev/sg*` to make the devices accessible. > > There is a check in the kernel in sg_build_indirect() exactly for this > situation: > >         [drivers/scsi/sg.c] >         if (!capable(CAP_SYS_ADMIN) || !capable(CAP_SYS_RAWIO)) >                 gfp_mask |= __GFP_ZERO; Yes, you're right. It appears unlikely that a user has both CAP_SYS_ADMIN and CAP_SYS_RAWIO.  > This means non-root user will get zero-ed pages even if it has o+rw access > to /dev/sg*. Tests of your reproducer on systems available to me confirm > this, i.e. non-root user gets a zero-ed out buffer even if it is able to > access /dev/sg*. > > I may not got smth correctly, but for now I do not see > as a security flaw and I believe a reject request to MITRE should be > issued. How do I proceed with this? > > Best regards, > Vladis Dronov | Red Hat, Inc. | Product Security Engineer  Thank you,   --  Alexander Potapenko Software Engineer  Google Germany GmbH Erika-Mann-Straße, 33 München  Geschäftsführer: Paul Manicle, Halimah DeLaine Prado Registergericht und -nummer: Hamburg, HRB Sitz der Gesellschaft: Hamburg  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      