  oss-security - Re: Intel hyper-threading security issues            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 22 Jun From: Michael Ellerman <mpe@...erman.id.au> To: Solar Designer <solar@...nwall.com>, oss-security@...ts.openwall.com Subject: Re: Intel hyper-threading security issues  Solar Designer <solar@...nwall.com> writes: > On Thu, Jun 21, at Sven Schwedas wrote: >> On Lukas Odzioba wrote: >> > Or use cpu hotplug mechanism, which should be way more convenient: >> > >>  >> Hotplug doesn't seem differentiate between HT threads and physical >> cores, > > This isn't exactly the question to ask: first vs. second thread in a > core aren't any different, neither of them is "the physical core" unless > you choose not to use the other. > > And you can obtain the needed information from /proc/cpuinfo or > /sys/devices/system/cpu/cpu*/topology/* to choose which logical CPUs you > disable (so that you leave only one per physical core). > > On a related note, attached is a generic Linux /proc/cpuinfo parser I  I guess by "generic" you mean Intel & AMD? :)  It won't work on powerpc, or arm, or arm64 ...  You should be able to determine all of the info you need from the sysfs topology files, which work across arches.  See the script below for example, which shows CPUs grouped by core.  cheers   #!/usr/bin/python3  import os import glob  by_core = {}  for path in glob.iglob('/sys/devices/system/cpu/cpu*/topology/core_id'):     num = int(path.split('/')[5].replace('cpu', ''))     core_id = int(open(path).read(), 10)     by_core.setdefault(core_id, []).append(num)  for core in sorted(by_core.keys()):     print('%d: %s' % (core, ', '.join([str(s) for s in sorted(by_core[core])])))  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      