  oss-security - Re: Intel hyper-threading security issues            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 21 Jun From: Solar Designer <solar@...nwall.com> To: oss-security@...ts.openwall.com Subject: Re: Intel hyper-threading security issues  On Thu, Jun 21, at Sven Schwedas wrote: > On Lukas Odzioba wrote: > > Or use cpu hotplug mechanism, which should be way more convenient: > > >  > Hotplug doesn't seem differentiate between HT threads and physical > cores,  This isn't exactly the question to ask: first vs. second thread in a core aren't any different, neither of them is "the physical core" unless you choose not to use the other.  And you can obtain the needed information from /proc/cpuinfo or /sys/devices/system/cpu/cpu*/topology/* to choose which logical CPUs you disable (so that you leave only one per physical core).  On a related note, attached is a generic Linux /proc/cpuinfo parser I wrote a couple of years ago for SMT-aware thread affinity settings in a userspace program.  This can be used e.g. by a program not wanting to run trusted vs. untrusted threads on the same physical core, or on the same physical CPU chip if there's more than one.  It can also be used for performance optimization.  Please feel free to reuse.  > will setting maxcpus=2 on a 2 cores+HT machine reliably disable > HT, or can it disable one core and keep HT active on the other?  The latter.  It's not reliable, except maybe on a specific machine with a specific kernel version.  Alexander  View attachment "cpuinfo.h" of type "text/x-c" bytes)  View attachment "cpuinfo.c" of type "text/x-c" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      