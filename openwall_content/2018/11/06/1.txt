  oss-security - stack based buffer overflow -            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Tue, 6 Nov From: Dhiraj Mishra <mishra.dhiraj95@...il.com> To: oss-security@...ts.openwall.com Subject: stack based buffer overflow -  ## Summary  While fuzzing a stack based buffer overflow was found in (the open-source library for the IEC protocols) in prepareGooseBuffer in goose/goose_publisher.c  ## Steps to reproduce  $ ./goose_publisher_example crash_goosecr_stack_smash_overflow_aaaaaaaaa Using interface crash_goosecr_stack_smash_overflow_aaaaaaaaa *** stack smashing detected ***: <unknown> terminated Aborted $  ## Debugging  (gdb) run crash_goosecr_stack_smash_overflow_aaaaaaaaa Starting program: crash_goosecr_stack_smash_overflow_aaaaaaaaa [Thread debugging using libthread_db enabled] Using host libthread_db library Using interface crash_goosecr_stack_smash_overflow_aaaaaaaaa *** stack smashing detected ***: <unknown> terminated  Program received signal SIGABRT, Aborted. __GI_raise (sig=sig@...ry=6) at ../sysdeps/unix/sysv/linux/raise.c:51 51    ../sysdeps/unix/sysv/linux/raise.c: No such file or directory. (gdb) bt #0  __GI_raise (sig=sig@...ry=6) at ../sysdeps/unix/sysv/linux/raise.c:51 #1  in __GI_abort () at abort.c:79 #2  in __libc_message (action=action@...ry=do_abort, "*** %s ***: %s terminated\n")     at #3  in __GI___fortify_fail_abort (need_backtrace=need_backtrace@...ry=false,     "stack smashing detected") at fortify_fail.c:33 #4  in __stack_chk_fail () at stack_chk_fail.c:29 #5  in Ethernet_getInterfaceMACAddress (interfaceId=0x7fffffffdeee "crash_goosecr_stack_smash_overflow_aaaaaaaaa",     at #6  in prepareGooseBuffer     interfaceID=0x7fffffffdeee "crash_goosecr_stack_smash_overflow_aaaaaaaaa") at #7  in GoosePublisher_create     interfaceID=0x7fffffffdeee "crash_goosecr_stack_smash_overflow_aaaaaaaaa") at src/goose/goose_publisher.c:72 #8  in main (argc=2, at goose_publisher_example.c:52 (gdb) i r rax            0x0    0 rbx               rcx               rdx            0x0    0 rsi               rdi            0x2    2 rbp               rsp               r8             0x0    0 r9                r10            0x8    8 r11               r12               r13               r14            0x0    0 r15               48 rip               eflags            [ PF ZF IF ] cs                51 ss             0x2b    43 ds             0x0    0 es             0x0    0 fs             0x0    0 gs             0x0    0 (gdb)  ## src  Snip : src/goose/goose_publisher.c  {     GoosePublisher self = (GoosePublisher) GLOBAL_CALLOC(1, sizeof(struct sGoosePublisher));     prepareGooseBuffer(self, parameters, interfaceID);     self->timestamp = MmsValue_newUtcTimeByMsTime(Hal_getTimeInMs());     GoosePublisher_reset(self);     return self; }  Snip: src/goose/goose_publisher.c      if (interfaceID != NULL)         Ethernet_getInterfaceMACAddress(interfaceID, srcAddr);     else Ethernet_getInterfaceMACAddress(CONFIG_ETHERNET_INTERFACE_ID, srcAddr);  ## Reference    Thank you --  Regards  *Dhiraj Mishra.*GPG ID :    |  Finger Print : 1F6A FC7B 05AA CF29 8C1C  ED65   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      