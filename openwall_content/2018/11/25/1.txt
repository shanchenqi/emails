  oss-security - catdoc: out of bounds heap read and nullpointer / segfault            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Sun, 25 Nov From: Hanno Bรถck <hanno@...eck.de> To: oss-security@...ts.openwall.com Subject: catdoc: out of bounds heap read and nullpointer / segfault  I reported two memory safety bugs in the command line tool catdoc. However the mails to the developer bounced.  The first is an out of bounds heap read, to detect it catdoc needs to be compiled with address sanitizer (test it with -fsanitize=address in CFLAGS).  The second is a null pointer and will just crash catdoc.   ASAN crash traces:  AddressSanitizer: heap-buffer-overflow on address at pc bp sp READ of size 1 at thread T0     #0 in getlong     #1 in ole_init     #2 in analyze_format     #3 in main     #4 in __libc_start_main     #5 in _start  is located 0 bytes to the right of 1-byte region allocated by thread T0 here:     #0 in malloc     #1 in ole_init     #2 in analyze_format     #3 in main     #4 in __libc_start_main    And:  AddressSanitizer: SEGV on unknown address (pc bp sp T0) signal is caused by a READ memory access. address points to the zero page.     #0 in calcFileBlockOffset     #1 in ole_read     #2 in analyze_format     #3 in main     #4 in __libc_start_main     #5 in _start   --  Hanno Bรถck https://hboeck.de/  mail/jabber: hanno@...eck.de GPG:  Download attachment "catdoc-bug-samples.zip" of type "application/zip" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      