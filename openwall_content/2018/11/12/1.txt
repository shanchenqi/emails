  oss-security - Re: new side-channel vulnerability on  SMT/Hyper-Threading architectures            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 12 Nov From: Billy Brumley <bbrumley@...il.com> To: oss-security@...ts.openwall.com Subject: Re: new side-channel vulnerability on  SMT/Hyper-Threading architectures  > > If you are a package maintainer, and are putting together a patch set > > for this, please reach out to me. My team can help test. > > > <snip> > > Could you please confirm the following commits are sufficient to fix  Some more technical advice below. Hope it helps!  BBB  #  That is EOL. Try your luck with porting the solution.  Shameless self plug: read Section 2   for a related discussion about EOL issues and security in the context of OpenSSL.  #  Wait until this gets merged into :   # up to and including  So I went through the process to patch this myself:   Ofc I have no idea what version you started with, or what patches you're applying. So take this as more of a HOWTO build and test your own patchset.  ##  git checkout -b git cherry-pick git cherry-pick git cherry-pick git cherry-pick git cherry-pick git cherry-pick git cherry-pick git cherry-pick git cherry-pick git cherry-pick git checkout --theirs CHANGES git add CHANGES git cherry-pick --continue git checkout -- CHANGES git add CHANGES git commit -m "revert changelog diffs" git rebase -i  (I skipped because it is not related to See   For a lengthy discussion. I'm not familiar enough with the issue to give advice if you need to pick it up or not.)  All of them cherry pick cleanly except for the last one, but it's only a trivial conflict with the changelog.  I checked the scalar multiplication code paths in ecdsatest with gdb (break and indeed they are early exiting to the new function when signing.  A lot of new regression testing went into Some of it was backported   So I fetched these KATs:   To run those tests, you also need to pick up this bug fix for evp_test.c (this is for testing, not part of the fix) :  git cherry-pick  Then rebuilt, and ran  $ test/evp_test /path/to/evppkey_ecc.txt tests completed with 0 errors, 0 skipped  All of those (positive and negative) tests pass; they are for ECC keygen and ECDH. I checked the scalar multiplication code paths with gdb (break and indeed they all early exit to the new function.  ##  Apply this small fix on top:  git cherry-pick git cherry-pick git rebase -i HEAD~2  Then ofc rerun all the regression testing ("make test", as well as the custom EVP tests described above.)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      