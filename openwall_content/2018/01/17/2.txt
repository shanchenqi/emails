  oss-security - MySQL authentication plugin DoS issues            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Wed, 17 Jan From: Tomas Hoger <thoger@...hat.com> To: OSS Security <oss-security@...ts.openwall.com> Subject: MySQL authentication plugin DoS issues  Hi!  As Oracle does not share any information about the CVEs they assign, here's info about two CVEs fixed in MySQL and and listed in Oracle CPU Jan  Both flaws affect authentication plugin, which uses crypt algorithm to hash passwords, and was affected by the known algorithm issues.  MySQL did not set any explicit limit on the length of the password that can be provided during the authentication phase.  Long passwords trigger DoS - high CPU usage and even server crash (because of use of alloca()).  This was assigned and fixed by enforcing maximum password length limit:   crypt makes it possible to adjust the cost of computing password hash by changing the number of "rounds".  This is only a problem if user can directly specify their password hash and hence manipulate the rounds setting.  That is possible in MySQL 5.6 (via SET PASSWORD = 'hash_string';), but no longer possible in MySQL 5.7.  This isn't very exciting issue, as SQL access is a precondition.  Impact is that can be made to use excessive amount of CPU even if short password is provided.  This was assigned and fixed by limiting the maximum rounds value:   References:   Note that these issues were found while researching a related fix from Oct CPU:   I believe that's wonder if any Oracle subscribers on this list are going to speak up to confirm.  --  Tomas Hoger / Red Hat Product Security  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      