  oss-security - Unbound: NSEC processing vulnerability (DNSSEC)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Fri, 19 Jan From: Ralph Dolmans <ralph@...etlabs.nl> To: oss-security@...ts.openwall.com Subject: Unbound: NSEC processing vulnerability (DNSSEC)  Hi,  Below is a copy of Unbound's CVE description that can be found at  Regards, Ralph  ==  The CVE number for this vulnerability is  == Summary We discovered a vulnerability in the processing of wildcard synthesized NSEC records. While synthesis of NSEC records is allowed by these synthesized owner names should not be used in the NSEC processing. This does, however, happen in Unbound and earlier versions.  == Description NSEC records are used to prove the non-existence of records between its owner name and its next owner, and for the proof that the queried for type does not exist when the queried for name matches the owner of the NSEC. It is therefore important that the owner name of the NSEC record can not be changed, this is enforced using a DNSSEC signature (RRSIG).  Because wildcard synthesis on NSEC records is allowed, it is possible to have DNSSEC valid NSEC records for which the owner name must not be used for non-existence proofs. A validator can determine that it is a wildcard record using the label count in the NSEC signature and must in that case use the non-synthesized wildcard name as NSEC owner.  Unbound validates these NSEC records (using the label count), and then uses the owner of the NSEC it received for the non-existence proof.  Unbound is only vulnerable for zones that contain a wildcard record and use NSEC records for the non-existence proof. NSEC3 records do not work for this attack.  == Impact The wildcard NSEC record can be used to proof the non-existence (NXDOMAIN answer) of an existing wildcard record. This can be done by changing the owner of the wildcard NSEC into a label that will be sorted before the wildcard label.  The wildcard NSEC record can also be used to trick Unbound into accepting a NODATA proof. This can be done by changing the owner name of the NSEC wildcard record into the queried for name. This is only possible when the queried for type is not in the type bitmap of the NSEC wildcard record.  This vulnerability can not be used to trick Unbound into accepting an insecure delegation proof (proof of no DS). The NS bit must be set in the NSEC type bitmap when proving an insecure delegation, this is never the case for wildcard records.  == Solution Download patched version of Unbound, or apply the patch manually.  + Downloading patched version Unbound is released with the patch  + Applying the Patch manually For Unbound version the patch is:  Apply the patch on Unbound source directory with 'patch -p0 < filename' then run 'make install' to install Unbound.  == Acknowledgements Ralph Dolmans (NLnet Labs) Karst Koymans (University of Amsterdam)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      