  oss-security - Re: Linux kernel: dccp: a null pointer  dereference in net/dccp/output.c:dccp_write_xmit            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 25 May From: Evgenii Shatokhin <eshatokhin@...tuozzo.com> To: oss-security@...ts.openwall.com, Andrey Konovalov <andreyknvl@...il.com> Cc: Vladis Dronov <vdronov@...hat.com> Subject: Re: Linux kernel: dccp: a null pointer  dereference in net/dccp/output.c:dccp_write_xmit  On Andrey Konovalov wrote: > On Wed, May 23, at PM, Kurt Seifried <kseifried@...hat.com> wrote: >> On Wed, May 23, at AM, Andrey Konovalov <andreyknvl@...il.com> >> wrote: >> >>> On Thu, May 10, at PM, Vladis Dronov <vdronov@...hat.com> wrote: >>>> Hello, >>>> >>>> A null pointer dereference in dccp_write_xmit() function in >>> net/dccp/output.c >>>> in the Linux kernel before allows a local user to cause a >>> denial of >>>> service by a number of certain crafted system calls. >>> >> >> >> So the classic CVE statement for this is "does it cross/violate a trust >> boundary". Yeah I know, not super helpful. >> >> In general when I look at something and need to decide whether or not it >> deserves/needs a CVE the fundamentals are: >> >> 1) Can an attacker use this vulnerability to gain access, additional >> privileges, basically is there an impact to >> Confidentiality/Availability/Integrity? This is really two tests: is there >> an impact, and is there a way for the attacker to trigger or exploit it? >> That's a CVE. >> >> 2) Does the software/system make a specific security claim that they then >> fail to meet? E.g. "we include a firewall that blocks access to everything >> inbound except for port 22", if they were to then also allow port 80, >> that'd be a CVE. >> >> So for the syzbot stuff mostly what you need to determine is: >> >> a) is there a security related impact? >> AND >> b) can an attacker trigger it? >> >> If both are yes, then a CVE is warranted. >  > Hi Kurt, >  > Perhaps I should've been more clear. I wasn't asking "what qualifies > for a CVE?", but rather "There are a bugs that qualify for CVEs, > how do single out 10 of them to actually request CVEs for?". >  > In particular, the bugs that I'm referring to are the bugs > reported by syzbot (perhaps there's even more: > https://syzkaller.appspot.com/?fixed=upstream) and the 10 bugs (or so) > are the ones Vladis announced on oss-security over the last few > months. I'm just curious how did he choose those 10 bugs out of that >  If I understand it correctly, Syzkaller programs run as root. Therefore,  it is still needed to check which of the bugs it has found are security  flaws.  As for this particular bug in dccp_write_xmit() - I stumbled upon that  Syzbot's report and checked that the bug was exploitable by an  unprivileged user if dccp modules were loaded. Then I reported the  problem to RedHat, and they desided to request a CVE for that. The  problem is not critical for RHEL, by the way, but still.  I don't know, if the process was the same for other bugs found by  Syzkaller they requested CVEs for.  Regards, Evgenii  >  > Thanks! > . >    Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      