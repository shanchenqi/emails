  oss-security - [SECURITY AVISORY] curl: RTSP bad headers buffer over-read            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Wed, 16 May (CEST) From: Daniel Stenberg <daniel@...x.se> To: curl security announcements -- curl users <curl-users@...l.haxx.se>,         curl-announce@...l.haxx.se,         libcurl hacking <curl-library@...l.haxx.se>,         oss-security@...ts.openwall.com Subject: [SECURITY AVISORY] curl: RTSP bad headers buffer over-read  RTSP bad headers buffer over-read =================================  Project curl Security Advisory, May 16th -  VULNERABILITY -------------  curl can be tricked into reading data beyond the end of a heap based buffer used to store downloaded content.  When servers send RTSP responses back to curl, the data starts out with a set of headers. curl parses that data to separate it into a number of headers to deal with those appropriately and to find the end of the headers that signal the start of the "body" part.  The function that splits up the response into headers is called `Curl_http_readwrite_headers()` and in situations where it can't find a single header in the buffer, it might end up leaving a pointer pointing into the buffer instead of to the start of the buffer which then later on may lead to an out of buffer read when code assumes that pointer points to a full buffer size worth of memory to use.  This could potentially lead to information leakage but most likely a crash/denial of service for applications if a server triggers this flaw.  We are not aware of any exploit of this flaw.  INFO ----  This bug was originally introduced in May in [this but it didn't become a problem until we added RTSP in January in [this  We have only proven this to trigger with RTSP traffic even though this is code shared with HTTP. We believe this is not a problem for HTTP transfers.  The Common Vulnerabilities and Exposures (CVE) project has assigned the name to this issue.  Buffer Over-read  AFFECTED VERSIONS -----------------  - Affected versions: curl to and including curl - Not affected versions: curl < and curl >=  libcurl is used by many applications, but not always advertised as such.  THE SOLUTION ------------  In curl version curl makes sure to restore the pointer back to where its supposed to point.  A [patch for is available.  RECOMMENDATIONS ---------------  We suggest you take one of the following actions immediately, in order of preference:    A - Upgrade curl to version    B - Apply the patch to your version and rebuild  TIME LINE ---------  It was reported to the curl project on March 24,  We contacted distros@...nwall on May 7,  curl was released on May 16 coordinated with the publication of this advisory.  CREDITS -------  Detected by OSS-fuzz. Assisted by Max Dymond. Patch by Daniel Stenberg.  Thanks a lot!  --     / daniel.haxx.se  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      