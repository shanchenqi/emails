  oss-security - KVM incorrectly handles #DB exceptions while deferred  by MOV SS/POP SS            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Tue, 08 May From: Andy Lutomirski <luto@...nel.org> To: oss security list <oss-security@...ts.openwall.com> Subject: KVM incorrectly handles #DB exceptions while deferred  by MOV SS/POP SS  On x86, MOV SS and POP SS behave strangely if they encounter a data breakpoint.  If this occurs in a KVM guest, KVM incorrectly thinks that a #DB instruction was caused by the undocumented ICEBP instruction.  This results in #DB being delivered to the guest kernel with an incorrect RIP on the stack.  On most guest kernels, this will allow a guest user to DoS the guest kernel or even to escalate privilege to that of the guest kernel.  Fixed upstream by commit ("kvm/x86: fix icebp instruction handling").  If you are running a guest OS that runs untrusted userspace code and you are forced to run on an unpatched host, you may be able to mitigate this issue by inserting 15 consecutive NOP instructions in your SYSCALL64 and SYSCALL32 entry points as well as in your IDT vectors 3 and 4.  I am hesitant to submit such a patch for upstream Linux, since the bug is clearly a KVM bug and is now fixed.  Discovered by me.  A PoC can be found here:   Thank you to Paolo Bonzini and Linus Torvalds for handling most of the technical bits of this bug.  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      