  oss-security - Re: libpng non issue            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Sun, 18 Jan From: Nico Golde <oss-security+ml@...lde.de> To: oss-security@...ts.openwall.com Subject: Re: libpng non issue  Hi, * Josh Bressers <bressers@...hat.com> > I figured I'd put this out in the open before it gets picked up and causes > confusion. >  > The libpng main page (http://libpng.sourceforge.net/index.html) currently contains > this: >  > UPDATE 18 December The latest released versions are and > They fix a vulnerability to a possible double-free in > png_check_keyword() while writing various chunk types. >  > This isn't a double free, nor would I consider it a security bug.  Our libpng > maintainer Tom Lane helped out with this analysis. >  > As best as I can tell, this is the bug in question: >  Looking at the diff between and I also see no  fix for a double-free vulnerability. The only security  relevant change I can see is indeed the above issue.  > which results in writing a NULL byte to an arbitrary location in memory. >  > Here is what Tom Lane said about this: >  >     Some poking around shows that png_check_keyword is called in subroutines >     that *write* PNG chunks, not ones that read them. So the problem could >     only manifest in programs that were creating new PNG files and trying >     to put illegal-per-spec content in them. Also, in typical usage the >     keywords being checked would be constant strings in the app, thus even >     less likely to trigger the overlength error. (It seems likely that this >     code has actually never been executed anywhere, explaining why the bug >     went undetected.) >  > So unless someone sees a flaw in this analysis, Red Hat has no plans to consider this a security flaw.  As this function symbol is exported via the shared library  what about programs using this function?  Cheers Nico --  Nico Golde - http://www.ngolde.de - nion@...ber.ccc.de - GPG: For security reasons, all text in this mail is double-rot13 encrypted.  Content of type "application/pgp-signature" skipped  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      