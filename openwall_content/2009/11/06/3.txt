  oss-security - Re: for TLS renegotiation MITM attacks            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Sat, 7 Nov From: Eygene Ryabinkin <rea-sec@...elabs.ru> To: oss-security@...ts.openwall.com Cc: "Steven M. Christey" <coley@...us.mitre.org>, tls@...f.org Subject: Re: for TLS renegotiation MITM attacks  Sorry for jumping in, but I had missed the topic in the other lists, so I am trying to ask here.  Also CC'ing tls@...f.org -- sorry for such cross-posting.  Thu, Nov 05, at Mark J Cox wrote: > Marsh Ray of PhoneFactor has discovered a flaw in the TLS/SSL protocol > related to the handling of the session renegotiations.  In certain > circumstances this flaw could be used in MITM attacks, allowing an > attacker to inject attacker-chosen plain text prefix into a secure > session of the victim.  Had anyone considered the scenario when the server requires client certificate from the beginning, but MITM possesses some other credentials that will be good for authentication (but can be of no use for authorization)?  In this case MITM can use this certificate to start the splitting request, then initiate renegotiation and proxy client's request through the established channel.  I see that Apache asks for the certificate for the second renegotiation, as well as the OpenSSL's s_server.  Here is the trace for s_server: ----- $ openssl s_client -msg -key userkey.pem -cert usercert.pem -host somehost -port | grep -E '^(<<<|>>>)' Enter pass phrase for userkey.pem: >>> SSL 2.0 [length CLIENT-HELLO <<< TLS 1.0 Handshake [length ServerHello <<< TLS 1.0 Handshake [length Certificate depth=1 /C=RU/O=some/CN=CA verify error:num=19:self signed certificate in certificate chain verify return:0 <<< TLS 1.0 Handshake [length ServerKeyExchange <<< TLS 1.0 Handshake [length CertificateRequest <<< TLS 1.0 Handshake [length ServerHelloDone >>> TLS 1.0 Handshake [length Certificate >>> TLS 1.0 Handshake [length ClientKeyExchange >>> TLS 1.0 Handshake [length CertificateVerify >>> TLS 1.0 ChangeCipherSpec [length >>> TLS 1.0 Handshake [length Finished <<< TLS 1.0 ChangeCipherSpec [length <<< TLS 1.0 Handshake [length Finished R RENEGOTIATING >>> TLS 1.0 Handshake [length ClientHello <<< TLS 1.0 Handshake [length ServerHello <<< TLS 1.0 Handshake [length Certificate depth=1 /C=RU/O=some/CN=CA verify error:num=19:self signed certificate in certificate chain verify return:0 <<< TLS 1.0 Handshake [length ServerKeyExchange <<< TLS 1.0 Handshake [length CertificateRequest <<< TLS 1.0 Handshake [length ServerHelloDone >>> TLS 1.0 Handshake [length Certificate >>> TLS 1.0 Handshake [length ClientKeyExchange >>> TLS 1.0 Handshake [length CertificateVerify >>> TLS 1.0 ChangeCipherSpec [length >>> TLS 1.0 Handshake [length Finished <<< TLS 1.0 Handshake [length <<< TLS 1.0 ChangeCipherSpec [length <<< TLS 1.0 Handshake [length Finished ----- If the second certificate is used for the authorization and it is allowed to have distinct certificates during the first and second negotiations, then this could be the other way to trigger this attack against the servers that are requiring certificates from the beginning.  Any thoughts? --  Eygene  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      