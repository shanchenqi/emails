  oss-security - Re: Re: kernel: af_rose/x25: Sanity  check the maximum user frame size            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 23 Apr From: Eugene Teo <eugene@...hat.com> To: oss-security@...ts.openwall.com CC: Willy Tarreau <w@....eu> Subject: Re: Re: kernel: af_rose/x25: Sanity  check the maximum user frame size  Marcus Meissner wrote: > On Thu, Apr 23, at Eugene Teo wrote: >> Willy Tarreau wrote: >>> Hi Eugene, >>> >>> On Wed, Apr 08, at Eugene Teo wrote: >>>> {nr,rose,x25}_sendmsg() functions need to have sanity checks on the >>>> packet size, otherwise the sizes can wrap and end up sending garbage. >>>> >>>> >>>> >>>> >>>> >>>> This affects both 2.4.x and 2.6.x if CONFIG_{NETROM,ROSE,X25} are enabled. >>> I already have it in my queue, just did not have time to merge it yet. >>> Thanks for the reminder anyway, I really appreciate it ;-) >> You will need this too :) >> >> upstream commit: >> >> Patch "af_rose/x25: Sanity check the maximum user frame size" >> (commit from Alan Cox got >> locking wrong. If we bail out due to user frame size being too large, >> we must unlock the socket beforehand. >  > I do not see in mainline kernel git > yet, in which git does it live?  Interesting.   Eugene --  Eugene Teo / Red Hat Security Response Team  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      