  oss-security - Re: Re: Some fun with tcp_wrappers            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 16 Apr (EDT) From: wietse@...cupine.org (Wietse Venema) To: Tomas Hoger <thoger@...hat.com> CC: wietse@...cupine.org, oss-security@...ts.openwall.com Subject: Re: Re: Some fun with tcp_wrappers  Tomas Hoger: > On Wed, 15 Apr (EDT) wietse@...cupine.org (Wietse > Venema) wrote: >  > > Wietse Venema: > > > > "test-hostsctl servicename unknown IP unknown" is what some > > > > applications do expecting tcp_wrappers to resolve IP to hostname. > > >  > > > I think that it would be a mistake to change a documented API that > >  > > On the other hand, if you could add a new function under a new name > > that does have the expected behavior, then there would be no > > confusion, no risk of cross-platform applications breaking, and I > > would withdraw my objection. >  > That does not sound like a viable alternative and is likely to damage > portability lot more, let me explain: >  > - Application upstreams will not (should not) use any API that is >   vendor-specific extension and not included upstream.  Even if there >   is some new upstream version, it might take years to get into wide >   enough use to applications to use new API, and result in >   incompatibility with old systems. > > - Applications change would be required.  If that is done, there's >   little reason to change to new API instead of existing hosts_access.  Linux-specific modifications to a 20-year old API break cross-platform software. May I remind you that not all the world runs Linux.  On the other hand, no cross-platform software will break if one adds a Linux-specific extension to the API.  I haven't yet pointed out the problems with automatic hostname lookups from hosts_ctl(). One problem is that it breaks programs that must not do hostname lookups such as portmappers.  Programs like the portmapper should not do hostname lookups, because that would result in infinite recursion when host lookups involve SUNRPC services such as NIS.  Again, not all the world is Linux. Making platform-specific changes to a 20-year old API breaks cross-platform software in unexpected ways.  	Wietse  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      