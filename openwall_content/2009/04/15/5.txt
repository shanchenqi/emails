  oss-security - Re: Re: Some fun with tcp_wrappers            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 15 Apr From: Tomas Hoger <thoger@...hat.com> To: wietse@...cupine.org Cc: oss-security@...ts.openwall.com Subject: Re: Re: Some fun with tcp_wrappers  On Wed, 15 Apr (EDT) wietse@...cupine.org (Wietse Venema) wrote:  > > STRING_UNKNOWN is valid argument expected to be passed to hosts_ctl. > > That description does not seem to be too clear to indicate that when > > one uses hosts_ctl as: > >  > >   hosts_ctl(svcname, STRING_UNKNOWN, client_addr, STRING_UNKNOWN) > >  > > all hostname-based rules are ignored.  It seems those using > > hosts_ctl do not always realize that. >  > That behavior is not what I implemented. It must have been introduced > by someone else.  [ .. ]  > As you see, my own code does not ignore hostname rules when > the hostname is "unknown".  Your examples work as the hostname used in hosts.{allow,deny} is "unknown", but it should not work for any other hostname.  Can you try this:  $ getent hosts       localhost  $ cat hosts.allow hosts.deny foobar: localhost foobar: ALL: DENY cat: hosts.deny: No such file or directory  $ ./test-hostsctl -d foobar unknown unknown denied  (this is expected to be allowed)  $ cat hosts.allow hosts.deny foobar: localhost: DENY cat: hosts.deny: No such file or directory  $ ./test-hostsctl -d foobar unknown unknown allowed  (this is expected to be denied)  "test-hostsctl servicename unknown IP unknown" is what some applications do expecting tcp_wrappers to resolve IP to hostname.  --  Tomas Hoger / Red Hat Security Response Team  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      