  oss-security - CVE Request -- libtiff [was: Re: libtiff buffer  underflow in LZWDecodeCompat]            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 29 Jun From: Jan Lieskovsky <jlieskov@...hat.com> To: "Steven M. Christey" <coley@...us.mitre.org> Cc: oss-security@...ts.openwall.com Subject: CVE Request -- libtiff [was: Re: libtiff buffer  underflow in LZWDecodeCompat]  Hello Steve,    could you please allocate a new CVE id for this buffer underwrite flaw?   Thanks && regards, Jan. -- Jan iankko Lieskovsky / Red Hat Security Response Team  On Tue, at Vincent Danen wrote: > * Kees Cook wrote: >  > >A crafted TIFF can crash libtiff in LZWDecodeCompat via underflow (different > >from > > > >Based on discussions[1] and a quick analysis[2], I don't think this is > >exploitable, but it does lead to crashes in any application using libtiff. > >I've reported it upstream[3], with the attached patch. > > > >Has anyone else looked this over? > > > >-Kees > > > >[1] > >[2] > >[3] >  > You saw that a new comment was posted to [3] that points to an earlier > bug and a different patch, right?  Looks like it was just updated today, > to point to this bug report from january: >  > >  > Also, that report seems to agree with your quick analysis: >  > "However, the previous patch does appear to prevent a payload of more than one distinct byte, > making this effectively useless as a code injection vector. Nonetheless, it > still is effective at crashing applications that use LibTIFF." >  > In fact, I think the reporter of that bug was one of the writers in the > lan.st forum notes you're showing, particularly based on this comment > where he indicates it isn't exploitable and that he filed a bug: >  > >    Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      