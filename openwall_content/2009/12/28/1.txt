  oss-security - CVE requests - kernel security regressions for             Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Mon, 28 Dec From: Eugene Teo <eugene@...hat.com> To: oss-security@...ts.openwall.com CC: "Steven M. Christey" <coley@...us.mitre.org> Subject: CVE requests - kernel security regressions for    In Fabian's talk, he describes two kernel NIC driver issues:  Issue #1 Fabian claimed that has an incorrect fix:   Which fixes a DoS when the frame spans multiple buffers and the last  buffer contains less than four bytes. However, if that last fragment is  longer than 4 bytes, it will actually be taken into account while the  previous fragments will have been ignored.  Issue #2 The fix for regarding the driver introduces a  similar security problem as this:  is  a revert of this:   The accompanying comment for the original commit  The size of the incoming frame is not correctly checked.  The RxMaxSize register (0xDA) does not work as expected and incoming  frames whose size exceeds the MTU actually end spanning multiple  descriptors. The first Rx descriptor contains the size of the whole  frame (or some garbage in its place). The driver does not expect  something above the space allocated to the current skb and crashes  loudly when it issues a skb_put.  The fix contains two parts: - disable hardware Rx size filtering: so far it only proved to be able to trigger some new fancy errors; [...]  There are other issues he mentioned during his talk, regarding squid and  pidgin. You can read about it at this wonderful blog:   Thanks, Eugene --  Eugene Teo / Red Hat Security Response Team  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      