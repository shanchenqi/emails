  oss-security - Re: Fixing the XML signature HMAC truncation authentication bypass            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 15 Jul From: Robert Buchholz <rbu@...too.org> To: oss-security@...ts.openwall.com Cc: Florian Weimer <fw@...eb.enyo.de> Subject: Re: Fixing the XML signature HMAC truncation authentication bypass  On Tuesday 14 July Florian Weimer wrote: > Quoting from > | XML Signature Syntax and Processing (XMLDsig) is a W3C > | recommendation for providing integrity, message authentication, > | and/or signer authentication services for data. XMLDsig is commonly > | used by web services such as SOAP. The XMLDsig recommendation > | includes support for HMAC truncation, as specified in When > | HMAC truncation is under the control of an attacker, however, this > | can result in an effective authentication bypass. For example, by > | specifying an HMACOutputLength of 1, only one bit of the signature > | is verified. This can allow an attacker to forge an XML signature > | that will be accepted as valid. > > What shall we do about this?  Shall we just cap the value at 80 or 96 > bits in our implementations?  I believe this to be the best approach. RFC specifically states 80  or half of the digest length as the lower boundary for truncation, and  it would be compatible API-wise.  As far as Gentoo is concerned, the following upstreams have confirmed  the issue (to CERT): 1) Apache XML Security 2) aleksey.com xmlsec library 3) Mono 4) Sun JDK/JRE 1.6  1) Apache Bug: Patch:  It seems they disallow HMAC truncation completely. * In my personal opinion the best move (since we're dealing with XML,   who cares about an additional <16 bytes?)   2) xmlsec:  These are the patches that went into  The value of 40 seems like a really bad default.   3) Mono  Patches: (trunk) (2.4) (2.0) (1.9)  They impelement min = max(80, full length/2). Good!    Florian Streibelt's analysis of the GnuTLS code indicated that is also  vulnerable. On our list of unreviewed suspects is still: * gSOAP (SOAP C++ Web Services) * zsi (Zolera Soap Infrastructure) * OpenSAML   Robert  Download attachment "signature.asc " of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      