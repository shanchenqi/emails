  oss-security - CVE request: kernel: AF_UNIX: Fix deadlock on connecting to shutdown  socket            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Mon, 19 Oct From: Eugene Teo <eugeneteo@...nel.sg> To: oss-security@...ts.openwall.com CC: "Steven M. Christey" <coley@...us.mitre.org> Subject: CVE request: kernel: AF_UNIX: Fix deadlock on connecting to shutdown  socket  Quoting from the patch submitted: "...a deadlock bug in UNIX domain socket, which makes able to DoS attack against the local machine by non-root users.  ... Why this happens:   Error checks between unix_socket_connect() and unix_wait_for_peer() are   inconsistent. The former calls the latter to wait until the backlog is   processed. Despite the latter returns without doing anything when the   socket is shutdown, the former doesn't check the shutdown state and   just retries calling the latter forever."  How to reproduce:   1. Make a listening AF_UNIX/SOCK_STREAM socket with an abstruct      namespace(*), and shutdown(2) it.   2. Repeat connect(2)ing to the listening socket from the other sockets      until the connection backlog is full-filled.   3. connect(2) takes the CPU forever. If every core is taken, the      system hangs.  Reproducer:  You will need to add in the missing header files: #include <string.h> #include <stdio.h> #include <sys/un.h> #include <sys/types.h> #include <sys/socket.h>  Reference:  Thanks, Eugene  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      