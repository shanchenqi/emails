  oss-security - Re:  Re: CVE Request -- PHP 5 -            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 16 Oct From: Tomas Hoger <thoger@...hat.com> To: geissert@...ian.org Cc: oss-security@...ts.openwall.com Subject: Re:  Re: CVE Request -- PHP 5 -  On Thu, 15 Oct Raphael Geissert <geissert@...ian.org> wrote:  > > Name: > >  > > The php_openssl_apply_verification_policy function in PHP before > > does not properly perform certificate validation, which has > > unknown impact and attack vectors, probably related to an ability to > > spoof certificates. >  > Yes, seems to be related to an improper handling of \0 in the CN > field.  Agree.  This change, however, seems to have a minimal impact on today's  real world PHP applications.  Certificate verification is not enabled by default and there seem to be very few applications that actually enable it.  I have some notes in:   > > Name: > > > > Unspecified vulnerability in PHP before has unknown impact > > and attack vectors related to "missing sanity checks around exif > > processing." >  > It is related to missing sanity checks when determining the length of > sections of jpg headers and a missing limit on the nesting level of > TIFF files.  There are 3 changes in the upstream path: - missing header length check, with similar impact as in   the worst case - missing nesting level checks for TIFFs, crafted file can lead to deep   recursion exhausting stack memory resulting in rather harmless crash - missing EOF checks, possibly leading to NULL deref or PHP memory   limit exception   --  Tomas Hoger / Red Hat Security Response Team  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      