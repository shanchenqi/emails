  oss-security - Re: Handling cases of            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 28 Oct From: Marcus Meissner <meissner@...e.de> To: oss-security@...ts.openwall.com Subject: Re: Handling cases of  On Wed, Oct 28, at Tim Brown wrote: > All, >  > How are problems with XML bombs (the so called "billion laughs" attack) being  > handled?  Should I be filing such bugs against the applications that exposes  > the XML parser to user input or is it better to report the issue against the  > parser themselves.  For example, the test case I've prepared for one affected  > parser simply causes the CPU to spin but the system appears to stay  > responsive (so far ;)).  Is it even fair to call such a denial of service?  > (If the code was executed in a real application, no further processing would  > happen within the affected process as the parser is tied up in memmove()s).   > I'm just curious as I don't want to waste peoples time with the disclosure  > process if others are simply filing "standard" bugs against affected parsers  > and moving on to more interesting matters.  If an application can be made unresponsive this way it would still be a denial of service against this app, so Yes.  It always should however be checked if the application can get this data from a real life attacker or if a admin user needs to push it in. For the latter it is not DoS in my eyes.  Ciao, Marcus  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      