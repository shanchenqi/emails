  oss-security - Poppler, xpdf integer overflow during heap  	allocation            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Wed, 21 Oct From: Will Drewry <redpig@...rt.org> To: ocert-announce@...ts.ocert.org, bugtraq <bugtraq@...urityfocus.com>,  	oss-security@...ts.openwall.com Subject: Poppler, xpdf integer overflow during heap  	allocation  Poppler, Xpdf integer overflows during heap allocation  Description:  Poppler and Xpdf are two popular open source projects for processing PDF files.  Both projects are vulnerable to an integer overflow during heap memory allocation when processing a PDF file.  In general, this results in unexpected process termination.  If an application using this code is multi-threaded (or uses a crash signal handler), it may be possible to execute arbitrary code.  The vulnerability resides in the object stream handler.  In particular, a multiplicative overflow occurs when a large number of embedded objects are specified.  An overflow check was in place in the code, but it only protected related calls to gmalloc().  The C++ object array allocation code (new[]) is not guarded by the upper bound check and the call to new[] does not result in an exception with gcc.  This results in bytes being written after the valid heap allocation during object construction.  Both software packages have released fixed versions which limit the allowed object count to a domain specific value.  A detailed analysis by the reporter can be found in the References.   Affected version:  Poppler <  Xpdf <   Fixed version:  Poppler >=  Xpdf >=   Credit: vulnerability report and PoC received from         Chris Rohlf <chris.rohlf@...il.com>.   CVE:   Timeline:  vulnerability report received proof of concept received from reporter impact reviewed contacted poppler maintainer vendor-sec notified vendor-sec discussion expanded to include xpdf maintainer final fix agreed upon by both maintainers CVE assigned by Tomas Hoger of RedHat fixed Xpdf released fixed Poppler released advisory published   References: http://poppler.freedesktop.org/ http://www.foolabs.com/xpdf/CHANGES   Permalink:  -- Will Drewry <redpig@...rt.org> http://ocert.org  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      