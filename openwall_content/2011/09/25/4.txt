  oss-security - Re: CVE request: is_a() function may allow arbitrary code execution  in PHP            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Sun, 25 Sep From: Pierre Joye <pierre.php@...il.com> To: Stas Malyshev <smalyshev@...arcrm.com> Cc: Vincent Danen <vdanen@...hat.com>,  	"oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com>, "security@....net" <security@....net> Subject: Re: CVE request: is_a() function may allow arbitrary code execution  in PHP  hi Stas,  I tend to disagree here. One of the CVE goal is not about declaring one or the other guilty of bad practice(s) but about informing users about security issues in the software they use and how to act correctly to fix these issues.  The is_a change is typically one of these security issues. While being a minor one (recommended ini settings or good code practices would avoid it easily), it is still one. That's why I'd to go with assigning one and link it to the bug.  On Sun, Sep 25, at AM, Stas Malyshev <smalyshev@...arcrm.com> wrote:  > Yes, it is a behavior change, and it shouldn't have happened in 5.3, the > fact that it happened was a bad mistake, it is clear now. > However, the security flaw is squarely in the code that a) misuses is_a b) > doesn't have security checks and c) does not follow recommended best > practices about PHP settings. > As such, telling people that it was a flaw in PHP and that BC break reversal > "fixed" it only gives them wrong ideas that their code was just fine. But in > fact their code was broken and only by luck (and due to the haphazard way > things were done in PHP where nobody bothered correlating function > signatures with one another) in might have not been malfunctioning in this > specific scenario. They need to fix that code ASAP, as they can not rely on > luck anymore and they way is_a was changed is actually they way it should > have worked from the start and the way is_subclass_of works right now.   --  Pierre  @pierrejoye | http://blog.thepimp.net | http://www.libgd.org  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      