  oss-security - Re: CVE request: is_a() function may allow arbitrary code execution  in PHP            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Sun, 25 Sep From: Pierre Joye <pierre.php@...il.com> To: Stas Malyshev <smalyshev@...arcrm.com> Cc: Vincent Danen <vdanen@...hat.com>,  	"oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com>, "security@....net" <security@....net> Subject: Re: CVE request: is_a() function may allow arbitrary code execution  in PHP  On Sun, Sep 25, at AM, Stas Malyshev <smalyshev@...arcrm.com> wrote:  > I'm concerned that if we do it this way people would take it as "PHP has > security bug in is_a and it was fixed in this version, so as long as we run > updated version we're OK", not "my code has gaping security hole which by > pure luck wasn't exploitable but minor change made it exploitable". If we > don't make it crystal clear the latter and not the former is the case, we'd > have same problem with 5.4.  That's a valid concern however it is another matter.  My suggestion would be:  - get a CVE and assign it to the bug  - be sure to get the right information in the CVE   .  about why it is not a flaw in php itself per se but a behavior change that could introduce a flaw in existing php scripts      . these php scripts were not following our guidance or good practice guide  - Be sure we update the upgrade guide, the NEWS file, the documentation and the announce to clearly explain and define this problem and its consequences  Cheers, -- Pierre  @pierrejoye | http://blog.thepimp.net | http://www.libgd.org  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      