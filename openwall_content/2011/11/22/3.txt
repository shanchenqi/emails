  oss-security - Re: Fwd: Support Incident Tracker <= (translate.php)  Remote Code Execution Vulnerability            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Mon, 21 Nov From: Kurt Seifried <kseifried@...hat.com> To: oss-security@...ts.openwall.com CC: Henri Salo <henri@...v.fi>, Subject: Re: Fwd: Support Incident Tracker <= (translate.php)  Remote Code Execution Vulnerability  On AM, Henri Salo wrote: > Can we get CVE assigned for this issue? > > Best regards, > Henri Salo > > ----- Forwarded message from ----- > > Date: Sat, 19 Nov GMT > From: > To: bugtraq@...urityfocus.com > Subject: Support Incident Tracker <= (translate.php) Remote Code > 	Execution Vulnerability > X-Mailer: MIME-tools (Entity > > Support Incident Tracker <= (translate.php) Remote Code Execution Vulnerability > > > author...............: Egidio Romano aka EgiX > mail.................: > software link........: http://sitracker.org/ > affected versions....: from to > > > [-] vulnerable code in /translate.php > >        foreach (array_keys($_POST) as $key) >        { >            if (!empty($_POST[$key]) AND substr($key, 0, 3) == "str") >            { >                if ($lastchar!='' AND substr($key, 3, 1) != $lastchar) $i18nfile .= "\n"; >                $i18nfile .= "\${$key} = '".addslashes($_POST[$key])."';\n"; >                $lastchar = substr($key, 3, 1); >                $translatedcount++; >            } >        } > > Input passed via keys of $_POST array isn't properly sanitized before being stored into $i18nfile variable > at line that variable will be the contents of a language file stored into 'i18n' directory with a php > extension. This could allow authenticated users to inject and execute arbitrary PHP code. Furthermore, > access directly to /translate.php?mode=save will reveal the full installation path of the application. > > > [-] Disclosure timeline: > > - Vulnerability discovered > - Issue reported to > - Vendor replied that this issue is fixed in the current SVN trunk > - Public disclosure > > > [-] Proof of concept: > > > > ----- End forwarded message ----- Yes we can! Please use for this issue.  --   -Kurt Seifried / Red Hat Security Response Team   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      