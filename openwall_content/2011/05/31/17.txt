  oss-security - Re: CVE request for fetchmail STARTTLS hang (Denial  of Service)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 31 May From: Matthias Andree <matthias.andree@....de> To: oss-security@...ts.openwall.com Subject: Re: CVE request for fetchmail STARTTLS hang (Denial  of Service)  Am schrieb Josh Bressers: >  >  > ----- Original Message ----- >> Could I get a CVE name for the issue in >> >> >  > Please use  Thanks.  > I can't help but wonder what else could be vulnerable to a similar flaw. > Has anyone looked?  I seriously considered not asking for a CVE in the first place because it's rather close to a resource-hogging-through-slowdowns attack vector, if you send at a very slow pace just avoiding the timeout by a notch, you hog your peer's resources for extended amounts of time -- and I can't think of good heuristics to tell abuse from legit use by those on slow links apart, and it's pointless listing CVEs for the unfixable situations.   Anecdotal story from the fix: I've been particularly disappointed that Solaris 10 doesn't support setsockopt(n, SOL_SOCKET, SO_RCVTIMEO, &foo, sizeof foo); (returns -1 with errno == EAFNOSUPPORT), which would have been the thorough and easy way out.  I've had the code in place and released as candidate, but umm, no, didn't work. I do set SO_KEEPALIVE now, but that's not anywhere close of defending against malice.  Rewriting the whole socket stuff as non-blocking code with poll()/select() which is supposed to be the canonical portable way was too intrusive, hence, a no-go for a stable release update.  Best regards Matthias Andree  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      