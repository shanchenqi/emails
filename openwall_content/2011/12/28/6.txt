  oss-security - multiple implementations denial-of-service via  hash algorithm collision            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Wed, 28 Dec From: Andrea Barisani <lcars@...rt.org> To: oss-security@...ts.openwall.com, ocert-announce@...ts.ocert.org,         bugtraq@...urityfocus.com Subject: multiple implementations denial-of-service via  hash algorithm collision   multiple implementations denial-of-service via hash algorithm collision  Description:  A variety of programming languages suffer from a denial-of-service (DoS) condition against storage functions of key/value pairs in hash data structures, the condition can be leveraged by exploiting predictable collisions in the underlying hashing algorithms.  The issue finds particular exposure in web server applications and/or frameworks. In particular, the lack of sufficient limits for the number of parameters in POST requests in conjunction with the predictable collision properties in the hashing functions of the underlying languages can render web applications vulnerable to the DoS condition. The attacker, using specially crafted HTTP requests, can lead to a of CPU usage which can last up to several hours depending on the targeted application and server performance, the amplification effect is considerable and requires little bandwidth and time on the attacker side.  The condition for predictable collisions in the hashing functions has been reported for the following language implementations: Java, JRuby, PHP, Python, Rubinius, Ruby. In the case of the Ruby language, the 1.9.x branch is not affected by the predictable collision condition since this version includes a randomization of the hashing function.  The vulnerability outlined in this advisory is practically identical to the one reported in and described in the paper Denial of Service via Algorithmic Complexity Attacks which affected the Perl language.  The reporters own advisory can be found at  Affected version: Java, all versions JRuby <= PHP <= <= Python, all versions Rubinius, all versions Ruby <=  Apache Geronimo, all versions Apache Tomcat <= <= <= Oracle Glassfish <= Jetty, all versions Plone, all versions Rack, all versions V8 JavaScript Engine, all versions  Fixed version: Java, N/A JRuby >= PHP >= >= Python, N/A Rubinius, N/A Ruby >= 1.9.x  Apache Geronimo, N/A Apache Tomcat >= >= >= Oracle Glassfish, N/A (Oracle reports that the issue is fixed in the main codeline and scheduled for a future CPU) Jetty, N/A Plone, N/A Rack, N/A V8 JavaScript Engine, N/A  Credit: vulnerability report and PoC code received from Alexander Klink <alexander.klink AT nruns.com> and Julian Waelde <jwaelde AT cdc.informatik.tu-darmstadt.de>.  CVE: (Jetty), (JRuby), (PHP),      (Plone), (Ruby)  Timeline:  vulnerability report received, reporters set embargo date to December 27th contacted maintainers of Apache Tomcat, Apache Geronimo, Jetty, Java, Plone, Zope, V8 contacted maintainers of Ruby on Rails, Ruby, Python, PHP contacted affected distributions contacted JRuby maintainer contacted Ruby Installer maintainer assigned CVE for Ruby assigned CVE for JRuby contacted Rack maintainer assigned CVE for Apache Tomcat assigned CVE for PHP advisory release  References: (unstable, not final) (unstable, not final)  Permalink:  --  Andrea Barisani |                Founder & Project Coordinator           oCERT | OSS Computer Security Incident Response Team  <lcars@...rt.org>                         http://www.ocert.org  02CD CE7F AC3F DA47 9B9E         "Pluralitas non est ponenda sine necessitate"  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      