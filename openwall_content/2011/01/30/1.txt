  oss-security - MaraDNS and released            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Sat, 29 Jan From: Sam Trenholme <strenholme.usenet@...il.com> To: list@...adns.org Cc: geissert@...ian.org, atomo64@...il.com,  	bressers@...hat.com, coley@...re.org, oss-security@...ts.openwall.com Subject: MaraDNS and released  In when I rewrote the compression code for MaraDNS for the first time, I made a mistake in allocating an array of integers, allocating it in bytes instead of sizeof(int) units.  The resulted in a buffer being too small, allowing it to be overwritten.  The impact of this programming error is that MaraDNS can be crashed by sending MaraDNS a single "packet of death".  Since the data placed in the overwritten array can not be remotely controlled (it is a list of increasing integers), there is no way to increase privileges exploiting this bug.  The attached patch resolves this issue by allocating in sizeof(int) units instead of byte-sized units for an integer array.  In addition, it uses a smaller array because a DNS name can only have, at most, labels.  I would like to thank Mr. Witold Baryluk for pointing out this issue, taking the time to backtrace the bug, and for bringing it to my attention by posting to the MaraDNS mailing list.  However, I need to let him know that making this public by filing a public Debian bug without first trying to contact me is not the appropriate way to handle a security problem with MaraDNS.  The appropriate way to do so is via private email.  My email address is here:  http://samiam.org/mailme.php  (maradns@...il.com was an account created so I could make entries in an older MaraDNS blog, and is not presently actively looked at)  As it turns out, I only occasionally look at the Debian bug database and people with issues with MaraDNS would be better off joining the MaraDNS mailing list instead of filing a Debian bug (unless the issue is Debian-specific).  In response to this bug, I have released MaraDNS and  These releases are available here:  http://maradns.org/download.html  Since sourceforge.net has recently suffered a security breach, their file uploading feature is currently undergoing maintenance and new files currently can not be uploaded there.  I have not made a new release of MaraDNS 2.0 yet.  Yarin has contributed a number of patches, and I would like to integrate his patches before making a new MaraDNS 2.0 release; MaraDNS 2.0 users can use the supplied patch.  As an aside, I have become a better programmer since making this mistake back in  Deadwood, which is a complete rewrite of MaraDNS' recursive code, does not have this issue in its compression/decompression code.  Instead of using different data types in structures, Deadwood, by and large, uses special overflow-resistant strings to store most data.  Also, I would like to take the time to make a public service announcement for djbdns users: DjbDNS does have known security issues, and needs to be patched.  More details are here:   (I am making this announcement because I have seen people, as recently as last year, claiming is perfectly secure on public forums)  - Sam  ---       +++       @@ @@  #include "functions_dns.h"   /* Maximum allowed number of dlabel points */ -#define MAX_DLABEL_POINTS +#define MAX_DLABEL_POINTS   /* Maximum allowed length of compressed string; this is for TCP   * packets */ @@ @@          js_dealloc(new);          return 0;          } -    if((new->dlabel_points = js_alloc(MAX_DLABEL_POINTS + 3,1)) == 0) { +    if((new->dlabel_points = js_alloc(MAX_DLABEL_POINTS + 3,sizeof(int))) +               == 0) {          js_destroy(new->compressed);          js_dealloc(new);          return 0;  Download attachment of type "application/octet-stream" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      