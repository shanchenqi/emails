  oss-security - Re: CVE request: kernel: change in how tcp seq  numbers are generated            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Tue, 23 Aug From: Petr Matousek <pmatouse@...hat.com> To: oss-security@...ts.openwall.com Cc: "Steven M. Christey" <coley@...us.mitre.org> Subject: Re: CVE request: kernel: change in how tcp seq  numbers are generated  On Tue, Aug 23, at Eugene Teo wrote: > > Dan Kaminsky pointed out that using partial MD4 and using that to > generate a sequence number, of which only 24-bits are truly unguessable, > seriously undermine the goals of random sequence number generation. >  > In particular, with only 24-bits being truly unguessable, packet > injection into a session using even something like brute force is a real > potential possibility. >  > We only use 24-bits because we regenerate the random number every 5 > minutes "just in case."  But what does is trade a "we don't know" kind > of theoretical issue for a provably real one (brute force attack). >  > Therefore [Dave Miller] moving us more in line with (as well as > OpenBSD and Solaris), to use MD5 and a full 32-bit result in the > generated sequence number. >  > MD5 was selected as a compromise between performance loss and > theoretical ability to be compromised.  Willy Tarreau did extensive > testing and SHA1 was found to harm performance too much to be considered > seriously at this time. >  > We may later add a sysctl for various modes (ie. a "super secure" mode > that uses SHA1 if people want that, and an "insecure" mode that doesn't > use cryptographic hashing at all for people in protected environments > where that might be safe to do). >  > [Dave Miller] also moved the sequence number generators out of random.c > (they never really belonged there, and are only there due to historical > artifacts), and fixed a bug in DCCP sequence number generation (on ipv6 > the 43-bit sequence number was truncated to 32-bits). >  > Upstream commits: > crypto: Move md5_transform to lib/md5.c > > net: Compute protocol sequence numbers and fragment IDs using MD5 > >  > Thanks, Eugene  Please use  Thanks, --  Petr Matousek / Red Hat Security Response Team  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      