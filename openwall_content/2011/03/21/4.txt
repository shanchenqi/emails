  oss-security - Re: CVE request: kernel: netfilter & econet infoleaks            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Mon, 21 Mar From: Eugene Teo <eugene@...hat.com> To: oss-security@...ts.openwall.com CC: Vasiliy Kulikov <segoon@...nwall.com>,         "Steven M. Christey" <coley@...us.mitre.org> Subject: Re: CVE request: kernel: netfilter & econet infoleaks  On PM, Eugene Teo wrote: >> "Structures ipt_replace, compat_ipt_replace, and xt_get_revision are >> copied from userspace. Fields of these structs that are >> zero-terminated strings are not checked. When they are used as argument >> to a format string containing "%s" in request_module(), some sensitive >> information is leaked to userspace via argument of spawned modprobe >> process. >> >> The first bug was introduced before the git epoch; the second is >> introduced by the third is introduced by >> To trigger the bug one should have >> CAP_NET_ADMIN." >> > > [PATCH] ipv4: netfilter: arp_tables: fix infoleak to userspace >   >> "Structures ipt_replace, compat_ipt_replace, and xt_get_revision are >> copied from userspace. Fields of these structs that are >> zero-terminated strings are not checked. When they are used as argument >> to a format string containing "%s" in request_module(), some sensitive >> information is leaked to userspace via argument of spawned modprobe >> process. >> >> The first and the third bugs were introduced before the git epoch; the >> second was introduced in To trigger the bug >> one should have CAP_NET_ADMIN." >> > > [PATCH] ipv4: netfilter: ip_tables: fix infoleak to userspace >   >> "'buffer' string is copied from userspace. It is not checked whether >> it is >> zero terminated. This may lead to overflow inside of simple_strtoul(). >> Changli Gao suggested to copy not more than user supplied 'size' bytes. >> >> It was introduced before the git epoch. Files "ipt_CLUSTERIP/*" are >> root writable only by default, however, on some setups permissions >> might be >> relaxed to e.g. network admin user." >> >> > > I'm reluctant to assign a CVE name for this one. The default perms for > this is S_IWUSR|S_IRUSR. I will let Steve decide for this one.   >> "Structures ip6t_replace, compat_ip6t_replace, and xt_get_revision are >> copied from userspace. Fields of these structs that are >> zero-terminated strings are not checked. When they are used as argument >> to a format string containing "%s" in request_module(), some sensitive >> information is leaked to userspace via argument of spawned modprobe >> process. >> >> The first bug was introduced before the git epoch; the second was >> introduced in the third is introduced by >> To trigger the bug one should have >> CAP_NET_ADMIN." >> > > [PATCH] ipv6: netfilter: ip6_tables: fix infoleak to userspace >   >> "struct aunhdr has 4 padding bytes between 'pad' and 'handle' fields on >> These bytes are not initialized in the variable 'ah' before >> sending 'ah' to the network. This leads to 4 bytes kernel stack >> infoleak. >> >> This bug was introduced before the git epoch." >> > > [PATCH] econet: 4 byte infoleak to the network >   Thanks, Eugene --  main(i) { >> (i-1) * && main(++i); }  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      