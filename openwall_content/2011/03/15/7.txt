  oss-security - Re: 2 acpid flaws            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 15 Mar From: Ludwig Nussel <ludwig.nussel@...e.de> To: oss-security@...ts.openwall.com Subject: Re: 2 acpid flaws  Hi,  Looks like this implicit CVE request got lost:  The first issue deserves a CVE I guess as unprivileged users could block acpid.  cu Ludwig  Vasiliy Kulikov wrote: > I. Blocking write. >  > I.1. Description. >  > acpid informs unprivileged processes about acpi events via UNIX socket. > This socket is in blocking mode.  If unprivileged process stops reading > data from the socket then, in some time, the socket queue fills up > leading to hanging privileged acpid daemon.  The daemon hangs until the > socket peer process reads some portion of the queued data or the peer > process exits/is killed. > [...] > II. Incorrect accept(2) error handling. >  > II.1. Description. >  > acpid doesn't gracefully handle client disconnection before the call to > accept(2).  If client calls close(2) between acpid calls poll(2) and > accept(2), acpid would hang in accept(2) until new client connects to > /var/run/acpid.socket. >  > This is only theoretical flaw as with current Linux kernel > implementation accept(2) would return new socket handler even if the > peer is closed.  However this behavior is implementation specific and > may be changed in future versions of kernels (or custom versions).  --   (o_   Ludwig Nussel  //\  V_/_  http://www.suse.de/ SUSE LINUX Products GmbH, GF: Markus Rex, HRB (AG Nuernberg)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      