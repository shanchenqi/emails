  oss-security - Re: CVE Request -- Erlang/OTP R14, Erlang/OTP Erlang/OTP  -- multiple security fixes            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 30 Mar (EDT) From: "Steven M. Christey" <coley@...-smtp.mitre.org> To: oss-security <oss-security@...ts.openwall.com> cc: "Steven M. Christey" <coley@...-smtp.mitre.org>,         Rickard Green <rickard@...ang.org>,         Bjorn-Egil Dahlberg <psyeugenic@...il.com>,         Sverker Eriksson <sverker@...ang.org>, Patrik Nyblom <pan@...ang.org>,         Raimo Niskanen <raimo@...ang.org>, Bjorn Gustavsson <bjorn@...ang.org>,         Niclas Axelsson <burbas@...ang.org>, Hans Bolinder <hasse@...ang.org> Subject: Re: CVE Request -- Erlang/OTP R14, Erlang/OTP Erlang/OTP  -- multiple security fixes   Some informal guidance on vulnerabilities in language  interpreters/compilers: if there's a reasonable chance that an API  function's correctness is affected, and that API function could be used by  an application to process untrusted data (and/or affect the application's  control flow), then it is generally treated as a security concern.  When  API correctness is *not* affected - but applications could just use it in  an insecure way - then the applications are "blamed" for the issue (the  classic example is C's strcpy() function, which has a significant design  limitation that many application programmers don't take into account,  leading to buffer overflows.)  So for issues like "inexact comparisons" (whatever those are ;-) there is  the consideration of whether such functionality is likely to be used when  implementing security-related functionality.  For issues like incorrectly  reporting error status from an API function, that may be a candidate for a  CVE if the incorrect status report could have downstream effects on an  application's correctness.  - Steve  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      