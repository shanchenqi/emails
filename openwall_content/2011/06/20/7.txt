  oss-security - Re: CVE request: crypt_blowfish 8-bit character  mishandling            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 20 Jun From: The Fungi <fungi@...goth.org> To: oss-security@...ts.openwall.com Subject: Re: CVE request: crypt_blowfish 8-bit character  mishandling  On Mon, Jun 20, at Solar Designer wrote: [...] > Does anyone need this? Or do we just assume that passwords with > non-ASCII characters are uncommon enough that we can bite the > bullet (of fixing the bug) without providing any backwards > compatibility workaround? [...]  Would it make sense to include transitional compatability calls which preserve the original behavior? Then applications using the library can be adjusted to fall back on the buggy version if the supplied data has 8-bit characters and the corrected calls don't result in a match. This would allow tools to regenerate and replace non-conforming hashes if they were the result of this bug, and might make it easier to audit existing lists for them as well. --  { IRL(Jeremy_Stanley); WWW(http://fungi.yuggoth.org/); WHOIS(STANL3-ARIN); SMTP(fungi@...goth.org); FINGER(fungi@...goth.org); IRC(fungi@....yuggoth.org#ccl); YAHOO(crawlingchaoslabs); AIM(dreadazathoth); }  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      