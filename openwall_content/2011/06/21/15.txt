  oss-security - Re: taskstats authorized_keys presence infoleak PoC            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 21 Jun From: Vasiliy Kulikov <segoon@...nwall.com> To: oss-security@...ts.openwall.com Subject: Re: taskstats authorized_keys presence infoleak PoC  Hi Josh,  On Tue, Jun 21, at Josh Bressers wrote: > ----- Original Message ----- > > /* > > * This program tries to learn whether ~user/.ssh/authorized_keys exists > > * and is nonempty for any user on local machine. It uses world-readable > > * taskstats' nature to get somewhat private io statistics information.  If > > * implant taskstats or /proc//io polling into ssh client, it would be > > * possible to learn precise authorized_keys' size (and estimate private > > * key's(s') size). >  > Are you considering this a flaw, or just an interesting security exercise?  The PoC itself is the latter, but i *suppose* procfs and taskstats may be used to get much more private information (hey, this is just a PoC!) and to carry out something like timing attack against specific programs, but using this statistic information instead of time deltas.  However, I'm not familiar with timing attack carrying and cannot realize whether it is generic or highly conditional flaw.  So, I'd not request CVE or anything for it.   Thanks,  --  Vasiliy  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      