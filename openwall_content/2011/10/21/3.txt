  oss-security - Re: PR attack against XML Encryption            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Fri, 21 Oct From: Florian Weimer <fw@...eb.enyo.de> To: oss-security@...ts.openwall.com Subject: Re: PR attack against XML Encryption  * Yves-Alexis Perez:  > On jeu., at Florian Weimer wrote: >> A German university has released a press release, alleging a >> vulnerability in the W3C XML Encryption standard.  Apparently, error >> reporting from existing implementations can be used as an oracle to >> recover information from messages encrypted in CBC mode. >>  >> Details have not been published, as far as I know.  Does anybody know >> more?   > but afaict the paper is not (yet?) available freely.  I took a brief look at the paper, and it's basically rehashing older work on decryption error oracles.  Full message recovery is apparently possible, but leaves traces in the server log.  It's the standard which is at fault: encryption without authentication is just not safe in general.  IBM has already changed error reporting in response to this issue:   Of course, without an application-independent way to check the integrity of the decrypted message (which would be provided by a combiend encryption/authentication mode), this is only a partial solution.  The authors also mention a second issue, where implementations confuse signed and encrypted parts of a SOAP message, allowing attackers to inject unsigned data which is presented as signed to the application. This probably needs a separate fix.  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      