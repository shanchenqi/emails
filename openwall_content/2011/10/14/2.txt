  oss-security - Re: radvd released with security fixes            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 14 Oct From: Huzaifa Sidhpurwala <huzaifas@...hat.com> To: oss-security@...ts.openwall.com Subject: Re: radvd released with security fixes  On AM, Solar Designer wrote: > I am an outside observer here (I haven't reviewed the code myself), but > doesn't the above amount to admin-configured privilege separation not > actually being enabled?  If so, this sounds like a security issue to me. >  I dont think so. From the code i have read so far, here is what seems to  happen.  - radvd starts as root - reads the configs - if a username is specified (user=radvd in most cases): 	- if "--singleprocess" is not specified: 		- run privsep_init(): This forks another process which 		  runs as root. So after this point we have two 		  processes both running as root 		- If privsep_init() fails, we have just one process 		  running as root 	- run drop_root_privileges(): 		If this succedes, we have two processes one running as 		root and another as radvd user, or if privsep_init() 		failed earlier, we have one process running as radvd 		user. 		If this fails, application quits - If username was not specified radvd continues to run as a single  process as root.   So failure in privsep_init() results in just one process running as  radvd user. If it did not fail it would result in one process running as  root and another as radvd user.  I dont think this would be a security issue in my opinion.     --  Huzaifa Sidhpurwala / Red Hat Security Response Team  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      