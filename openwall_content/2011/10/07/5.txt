  oss-security - Re: radvd released with security fixes            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 7 Oct From: Robert Święcki <robert@...ecki.net> To: oss-security@...ts.openwall.com Subject: Re: radvd released with security fixes  On Fri, Oct 7, at PM, Huzaifa Sidhpurwala <huzaifas@...hat.com> wrote: > On AM, Solar Designer wrote: >> >> 2) An arbitrary file overwrite flaw was found in radvd's >> set_interface_var() function, where it did not check the interface name >> (generated by the unprivileged user) and blindly overwrites a filename >> with a decimal value by the root process.  If a local attacker could >> create symlinks pointing to arbitrary files on the system, they could >> overwrite the target file contents.  If only radvd is compromised (e.g. >> no local access), the attacker may only overwrite files with specific >> names only (PROC_SYS_IP6_* from radvd's pathnames.h). > > I am looking at the patch for this particular issue and it seems wrong to > me. > > Patch: > > > Shouldnt this be: > >        /* No path traversal */ >        if (strstr(iface, "..") || strchr(iface, '/')) >                return -1;  FWIW, this will reject too much;  /path/to/sth..jpg  --  Robert Święcki  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      