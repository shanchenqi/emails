  oss-security - Re: hardlink(1) has buffer overflows, is unsafe on changing trees            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 20 Oct (EDT) From: Josh Bressers <bressers@...hat.com> To: oss-security@...ts.openwall.com Subject: Re: hardlink(1) has buffer overflows, is unsafe on changing trees    ----- Original Message ----- > Hi, >  > The hardlink(1) program from Fedora is susceptible to buffer overflows of > fixed-size nambuf1 and nambuf2 buffers when run on a tree with deeply > nested directories and/or with long directory or file names.  I was able > to reproduce the problem (got a segfault) by running the program on a > directory containing 20 nested directories with names. >  > Another problem is that the program uses full pathnames.  It neither > changes the current directory, nor uses openat(2).  Thus, if a pathname > component is replaced with a symlink while the program is running, this > may result in processing of directories/files outside of the intended > directory tree. >  > I fixed the buffer overflows (by (re)allocating the buffers dynamically) > in the copy that I committed into Owl today: >  > http://cvsweb.openwall.com/cgi/cvsweb.cgi/Owl/packages/hardlink/ >   Based on the above commits, I'm giving this three IDs.  hardlink buffer overflows  hardlink integer overflows  hardlink symlink attacks  The Red Hat bugs have more details and links.  Thanks.  --      JB  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      