  oss-security - Re: vsftpd download backdoored            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 5 Jul From: Solar Designer <solar@...nwall.com> To: HD Moore <hdm@...italoffense.net> Cc: oss-security@...ts.openwall.com, scarybeasts@...il.com Subject: Re: vsftpd download backdoored  On Mon, Jul 04, at HD Moore wrote: > This copy is backdoored and has mtime Chris didn't reply > when I asked him for a copy from his master >  >  This is very helpful, thank you!  How did you find it?  So, I failed to get this server to give me ctime (looked at HTTP headers and also tried several FTP commands), and the mtime is Feb 15.  We could ask the server admins for the ctime.  However, inside the archive we see UTC on the top-level directory, and on the .o files.  This suggests that the backdoored tarball was put in place no earlier than UTC, although that's using the intruder's system time, which might not be accurate. ;-)  > ... I am saying that for this to become as widespread as the mtime in > the mirror above indicates, it would be incredible for distros like > Debian to not notice it, as they verify the hash of the tarball. This > indicates that the mtime in the mirror above was forged (since the hash > is indeed wrong), but the real question is how this mirror obtained the > copy. >  > Was the mirror compromised? Was a rsync job used against the real > server, in which case the mtime was preserved? I couldn't find any > public copies with the backdoored checksum, but one of the metasploit > contributors pointed me to the link above.  My guess is that the mirror is automatically updated, perhaps nightly, and not necessarily via rsync.  It is possible to transfer/preserve the mtime via ftp and http as well - typical mirror programs do that.  > I would like to believe the exposure was limited to 1-3 days, but the > mirror above casts doubt on this.  Looks like it was 3 days, actually.  Thanks,  Alexander  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      