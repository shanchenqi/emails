  oss-security - Re: vsftpd download backdoored            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 04 Jul From: HD Moore <hdm@...italoffense.net> To: Solar Designer <solar@...nwall.com> CC: oss-security@...ts.openwall.com, scarybeasts@...il.com Subject: Re: vsftpd download backdoored  On PM, Solar Designer wrote: > What mirror?  As far as I'm aware, from the announcement by Chris, only > the official distribution site for vsftpd was compromised. [ snip ] > Maybe.  Do you have a copy of the backdoored tarball?  I don't, and no > one on forums where I saw this discussed appears to have it (which > confirms that it existed for a very short period of time only).  This copy is backdoored and has mtime Chris didn't reply when I asked him for a copy from his master   > Are you trying to say that Debian got the backdoored copy?  This is news > to me.  No, I am saying that for this to become as widespread as the mtime in the mirror above indicates, it would be incredible for distros like Debian to not notice it, as they verify the hash of the tarball. This indicates that the mtime in the mirror above was forged (since the hash is indeed wrong), but the real question is how this mirror obtained the copy.  Was the mirror compromised? Was a rsync job used against the real server, in which case the mtime was preserved? I couldn't find any public copies with the backdoored checksum, but one of the metasploit contributors pointed me to the link above.  I would like to believe the exposure was limited to 1-3 days, but the mirror above casts doubt on this.  -HD  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      