  oss-security - CVE Request -- foomatic (foomatic-filters): foomatic-rip (debug mode)  insecure temporary file use in renderer command line by processing PostScript  data            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Thu, 28 Jul From: Jan Lieskovsky <jlieskov@...hat.com> To: "Steven M. Christey" <coley@...us.mitre.org>,         Tim Waugh <twaugh@...hat.com> CC: oss-security@...ts.openwall.com Subject: CVE Request -- foomatic (foomatic-filters): foomatic-rip (debug mode)  insecure temporary file use in renderer command line by processing PostScript  data  Hello Josh, Steve, vendors,     by further investigation of hplip issue:    [2]  Tim Waugh noticed the similar issue being present also in foomatic-rip universal print filter, when debug mode is enabled. Further details:  It was found that foomatic-rip filter used insecurely created temporary file for storage of PostScript data by rendering the data, intended to  be sent to the PostScript filter, when the debug mode was enabled. A  local attacker could use this flaw to conduct symlink attacks (overwrite  arbitrary file accessible with the privileges of the user running the  foomatic-rip universal print filter).  Relevant source code part (Perl script part / foomatic-rip.in): ===============================================================     my $logfile = "/tmp/foomatic-rip";    ..     # In debug mode save the data supposed to be fed            into the     # renderer also into a file     if ($debug) {       $commandline = "tee -a ${logfile}.ps | ( $commandline )";     }  Note: The $logfile variable declaration (line is not an insecure        temporary file use issue itself, since this danger (and its proper        usage) is documented in /etc/foomatic/filters.conf file.  Relevant source code part (C script part / renderer.c): ========================================================      /* Save the data supposed to be fed into the renderer            also int        o a file*/      dstrprepend(commandline, "tee -a " LOG_FILE ".ps | ( ");      dstrcat(commandline, ")");      }  Note: The LOG_FILE variable declaration by itself is not an insecure        temporary file use, since this danger (and its proper usage)        is documented in /etc/foomatic/filters.conf file.  References: [1]  Credit: Issue discovered by Tim Waugh  Could you allocate a CVE id for this?  Thank you && Regards, Jan. -- Jan iankko Lieskovsky / Red Hat Security Response Team   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      