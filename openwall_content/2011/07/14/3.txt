  oss-security - Re: CVE Request -- libsndfile -- Integer overflow by processing  certain PAF files            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 14 Jul From: Erik de Castro Lopo <erikd@...a-nerd.com> To: oss-security@...ts.openwall.com Cc: Jan Lieskovsky <jlieskov@...hat.com>, "Steven M. Christey"  <coley@...us.mitre.org>, Secunia Research <vuln@...unia.com> Subject: Re: CVE Request -- libsndfile -- Integer overflow by processing  certain PAF files  Jan Lieskovsky wrote:  >    an integer overflow, leading to heap-based buffer overflow flaw was > found in the way libsndfile, library for reading and writing of sound > files, processed certain PARIS Audio Format (PAF) audio files with > crafted count of channels in the PAF file header. A remote attacker > could provided a specially-crafted PAF audio file, which once opened by > a local, unsuspecting user in an application, linked against libsndfile, > could lead to that particular application crash (denial of service),  I agree with everything up to here.  > or, potentially arbitrary code execution with the privileges of the > user running the application.  but this is rubbish. The heap gets overwritten with zeros which would certainly lead to the application segfaulting. However, there is no way for arbitrary code to be executed on amy sane OS with proper memory protection.  Furthermore, Secunia when they contacted me about this said they would release information about this vulernability on the 18th and then ended up releasing it on the 12th instead which means I had to rush out the release I was working on (and would have easily had ready for the 18th). That is not the way to win friends and influence people.  Regards, Erik --  ---------------------------------------------------------------------- Erik de Castro Lopo http://www.mega-nerd.com/  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      