  oss-security - Re: CVE request -- kernel: proc: signedness issue  in next_pidmap()            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Wed, 20 Apr From: Eugene Teo <eugene@...hat.com> To: oss-security@...ts.openwall.com CC: Petr Matousek <pmatouse@...hat.com>, coley@...us.mitre.org,         robert@...ecki.net Subject: Re: CVE request -- kernel: proc: signedness issue  in next_pidmap()  On PM, Petr Matousek wrote: > "A signedness issue has been found in next_pidmap() function when the "last" > parameter is negative as next_pidmap() just quietly accepted whatever > "last" pid that was passed in, which is not all that safe when one of the > users is /proc. > > Setting f_pos to negative value when accessing /proc via readdir()/getdents() > resulted in sign extension of this value when map pointer was being > constructed. > > This later lead to #GP because the final pointer was not canonical > > References: > > > > Upstream commit: > >  Use  Eugene --  main(i) { >> (i-1) * && main(++i); }  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      