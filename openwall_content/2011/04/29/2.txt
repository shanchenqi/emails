  oss-security - CVE request: kernel (ARM): heap corruption in OABI semtimedop            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Fri, 29 Apr From: Dan Rosenberg <dan.j.rosenberg@...il.com> To: oss-security@...ts.openwall.com Subject: CVE request: kernel (ARM): heap corruption in OABI semtimedop  The OABI wrapper for semtimedop does not bound the nsops argument.  A sufficiently large value will cause an integer overflow in allocation size, followed by copying too much data into the allocated buffer. This only affects ARM systems with CONFIG_OABI_COMPAT set.  This is exploitable for local privilege escalation, but successful exploitation requires winning a race.  Because user-to-kernel copy functions on ARM zero the destination buffer even on failure to access the provided user pointer, the copy loop in the vulnerable function that causes the overflow will zero out large amounts of kernel heap if not interrupted, crashing the system.  This should be possible to work around though.  -Dan  [1]  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      