  oss-security - Re: CVE request: kernel:  /sys/kernel/debug/acpi/custom_method can bypass module restrictions            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Fri, 25 Feb From: Kees Cook <kees@...ntu.com> To: oss-security@...ts.openwall.com Subject: Re: CVE request: kernel:  /sys/kernel/debug/acpi/custom_method can bypass module restrictions  On Fri, Feb 25, at Vasiliy Kulikov wrote: > UID 0 without capabilities has not been made really unprivileged yet. > It makes sense only within namespace container without any virtual > filesystem which handles permissions with uid/gid checks (not CAP_*). > But this is rather strange.  True, but I was just trying to show some examples. The case I'm most concerned about is the case where modules_disable has been set. It is possible to use acpi/custom_method to unset this and then load kernel rootkit modules, etc.  I know it's a special case, but it still provides arbitrary kernel memory writes which is not an intended ability for any user to have, even root.  -Kees  --  Kees Cook Ubuntu Security Team  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      