  oss-security - Re: CVE request: libcgroup: Failure to verify  netlink messages            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 25 Feb From: Nelson Elhage <nelhage@...lice.com> To: Steve Grubb <sgrubb@...hat.com> Cc: oss-security@...ts.openwall.com, Eugene Teo <eugene@...hat.com> Subject: Re: CVE request: libcgroup: Failure to verify  netlink messages  On Fri, Feb 25, at Steve Grubb wrote: > On Friday, February 25, am Eugene Teo wrote: > > On PM, Nelson Elhage wrote: > > > The cgrulesengd program from libcgroup failed to properly verify the > > > sender of netlink messages, allowing arbitrary users to spoof events > > > to the daemon, causing it to place processes into incorrect cgroups. > > >  > > > Note that the default configuration of cgrulesengd does not contain > > > any any rules, so this is probably only usefully exploitable if an > > > admin have specifically configured cgrulesengd to enforce some policy. > > >  > > > References: > > > > >  > > Please use >  > That's a shame. I reported this same problem in November last year: >  > >  > The current patch does not check if (from_nla_len != sizeof(from_nla)) before > making decisions based on the header. I contacted upstream about this.  >From my reading of the netlink code, recvmsg() / recvfrom() on a netlink socket will never return a from_nla_len != sizeof(struct sockaddaddr_nl). Am I missing something, did this change at some point, or are you just suggesting general paranoid good practice? It's probably good advice in any case, I'm just curious whether you're aware of cases where this can actually be a problem.  - Nelson  >  > -Steve  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      