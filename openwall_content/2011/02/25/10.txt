  oss-security - Re: CVE request: kernel:  /sys/kernel/debug/acpi/custom_method can bypass module restrictions            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 25 Feb From: Vasiliy Kulikov <segoon@...nwall.com> To: oss-security@...ts.openwall.com Subject: Re: CVE request: kernel:  /sys/kernel/debug/acpi/custom_method can bypass module restrictions  Kees,  On Thu, Feb 24, at Kees Cook wrote: > Having a system with acpi and debugfs built into the kernel allows > a uid=0 user (without capabilities, e.g. in containers)  Does it fit into any current security model?  I mean that containers of vanilla kernel are not fully restricted, neither sysfs or procfs differ much in different namespaces.  If one may locate one sysfs file it may locate all of them (chrooting into /sys is rather pointless :-D); with sysfs one may change many hardware setting, they are driver-dependend, but still very sensitive.  With /proc/sys/ one (inside of namespace constainer) may change sysctl settings.  I suppose that it is not hard to gain full root in such situation even without any bugs in sysfs file read/write implementations (I didn't tried it, though).  UID 0 without capabilities has not been made really unprivileged yet. It makes sense only within namespace container without any virtual filesystem which handles permissions with uid/gid checks (not CAP_*). But this is rather strange.   Thanks,  --  Vasiliy  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      