  oss-security - Re: Physical access vulnerabilities and auto-mounting            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 23 Feb From: Sebastian Krahmer <krahmer@...e.de> To: oss-security@...ts.openwall.com Subject: Re: Physical access vulnerabilities and auto-mounting  Hi,  Unfortunally I think nobody would care. As nobody cared that you actually do not need physical access. Via udisks DBUS service you can load any LKM via  dbus-send --system --print-reply --dest=org.freedesktop.UDisks          \                    /org/freedesktop/UDisks/devices/sr0                  \                    org.freedesktop.UDisks.Device.FilesystemMount        \                    string:'LKM' array:string:''  I reported that several months ago to upstream but it was frozen to more or less a non-issue. Indeed nobody agreed that this is an issue to fix.  Sebastian  On Tue, Feb 22, at Dan Rosenberg wrote: > I originally started writing this as a response to the recent CVE > requests for issues in partition handling, but thought it might be a > useful discussion on its own.  I was wondering if there are any > clear-cut policies on issues involving physical access, since these > can be very difficult in terms of assigning blame. >  > For example, many Linux distributions will auto-mount filesystems on > removable storage, often going so far as to load corresponding kernel > modules for filesystems that aren't compiled in or don't already have > an LKM loaded.  Sometimes, this will happen even if the screen is > locked. >  > Incidentally, many Linux filesystem implementations don't have > especially robust error handling for failures during attempts to mount > corrupt filesystems.  As an example, I have a deliberately corrupted > btrfs filesystem that triggers a BUG() if you attempt to mount it.  I > formatted a USB stick with this filesystem, so now I have a USB stick > that will panic the kernels of distributions that support > auto-mounting, in some cases even when the screen is locked. >  > Should this be considered a vulnerability?  Probably.  But what should > be fixed?  Should auto-mounting be disabled entirely?  Is it no longer > a vulnerability if auto-mounting is disabled only when the screen is > locked?  Should all filesystems have graceful error handling for every > possible edge case that can occur when dealing with corruption? >  > I'd be interested to hear opinions on this.  And depending on how the > discussion goes, I'd be happy to provide more details on specific > cases, such as the btrfs example. >  > -Dan  --  ~ ~ perl self.pl ~ ~ krahmer@...e.de - SuSE Security Team ~ SUSE LINUX Products GmbH, GF: Markus Rex, HRB (AG Nuernberg)   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      