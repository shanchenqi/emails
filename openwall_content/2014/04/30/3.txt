  oss-security - CVE request: possible miniupnpc buffer overflow            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Wed, 30 Apr From: Murray McAllister <mmcallis@...hat.com> To: oss-security@...ts.openwall.com Subject: CVE request: possible miniupnpc buffer overflow  Good morning,  It was pointed out in that miniupnpc version 1.9 fixes a possible buffer overflow:   I am not familiar with the code but it may be just a crash, with an invalid read here (on line                          /* parse header lines */                         for(i = 0; i < endofheaders - 1; i++) {                                 if(colon <= linestart && header_buf[i]==':')  Can a CVE be assigned if one has not been already?  On a related note, I'm not sure if there are other issues close by. For example, in version 1.9, miniwget.c:                          /* copy the remaining of the received data back to buf */                         n = header_buf_used - endofheaders;                         memcpy(buf, header_buf + endofheaders, n);  n and endofheaders are signed ints, and header_buf_used is unsigned. Mixing the types together (and the signed int in the memcpy) may warrant further investigation.  Cheers,  -- Murray McAllister / Red Hat Security Response Team  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      