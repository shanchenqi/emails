  oss-security - Remote Command Injection in Ruby Gem sfpagent            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Tue, 15 Apr From: "Larry W. Cashdollar" <larry0@...com> To: Open Source Security <oss-security@...ts.openwall.com> Subject: Remote Command Injection in Ruby Gem sfpagent  Title: Remote Command Injection in Ruby Gem sfpagent  Date:  Author: Larry W. Cashdollar, @_larry0  CVE: Please assign one at your leisure.   Download: http://rubygems.org/gems/sfpagent  Vulnerability The list variable generated from the user supplied JSON[body] input is passed directly to the system() shell on line If a user supplies a module name with shell metacharacters like ; they might be able to execute shell commands on the remote system as the sfpagent running user id. I think to fix this youĂ˘âŹTMd need to sanitize all input from the user with shellwords.escape.                          code, body = get_data(address, port, '/modules')                         raise Exception, "Unable to get modules list from {name}" if code.to_i !=                          modules = JSON[body]                         list = ''                         schemata.each { |m|                                 list += "{m} " if File.exist?("{modules_dir}/{m}") and                                                    (not modules.has_key?(m) or modules[m] != get_local_module_hash(m, modules_dir).to_s)                         }                          return true if list == ''                          if system("cd #{modules_dir}; #{install_module} #{address} #{port} #{list} 1>/dev/null 2>/tmp/install_module.error")                                 Sfp::Agent.logger.info "Push modules #{list}to #{name} [OK]"                         else                                 Sfp::Agent.logger.warn "Push modules #{list}to #{name} [Failed]"                         end                          return true  Vendor: Notified Version fixes this issue.  Advisory: http://www.vapid.dhs.org/advisories/spfagent-remotecmd.html Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      