  oss-security - Re: Use-after-free race condition,in OpenSSL's read buffer            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Sun, 13 Apr From: Solar Designer <solar@...nwall.com> To: oss-security@...ts.openwall.com Subject: Re: Use-after-free race condition,in OpenSSL's read buffer  On Sat, Apr 12, at Scotty Bauer wrote: > Patch is available at: >  Some context to this:  http://www.tedunangst.com/flak/post/analysis-of-openssl-freelist-reuse  This specific patch is found in Benson Kwok's bug report:   Benson writes:  "The issue is when the buffer is released by ssl3_release_read_buffer(), there may still be data left in the buffer (s->s3->rbuf.left != 0). With single threading, when another read occurs, the same buffer is reused during a call to ssl3_setup_read_buffer() so the data is still there and can be read and processed so it works fine. When running with multiple threads, the buffer is shared in a pool and another thread may have gotten that buffer already. If the call to ssl3_setup_read_buffer() returns a new buffer, it assume the data is still there but will run into parsing error with the record."  (Of course, "parsing error" isn't necessarily the worst outcome.)  Alexander  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      