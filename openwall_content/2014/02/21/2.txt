  oss-security - Re: Possible CVE Requests: several issues fixed in Jenkins (Advisory            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Thu, 20 Feb (EST) From: cve-assign@...re.org To: carnil@...ian.org Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: Possible CVE Requests: several issues fixed in Jenkins (Advisory  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  > > | In some places, Jenkins XML API uses XStream to deserialize arbitrary > | content, which is affected by reported against XStream. > | This allows malicious users of Jenkins with a limited set of permissions > | to execute arbitrary code inside Jenkins master. > >  MITRE may be making a CVE assignment for but it won't be immediate because we need to discuss that one internally within our team more. This is related to:     not existing yet.   > where for SECURITY-76 and SECURITY-88 was assigned  > SECURITY-76 & SECURITY-88 / > | Restrictions of HTML tags for user-editable contents are too lax. This > | allows malicious users of Jenkins to trick other unsuspecting users into > | providing sensitive information. >  > >  The vendor says "SECURITY-76 & SECURITY-88 / on that "Jenkins Security Advisory page, but the originally intended scope of is only the issue involving FORM elements (aka SECURITY-88), not the issue involving IFRAME elements (aka SECURITY-76). This may be just a parsing difference. We believe it's:     SECURITY-76 & ( SECURITY-88 / )  not:     ( SECURITY-76 & SECURITY-88 ) /  The commit that you didn't list is:     The IFRAME issue wasn't part of the original disclosures such as so we normally can't change the scope of to include it later. https://issues.jenkins-ci.org/browse/SECURITY-76 and https://issues.jenkins-ci.org/browse/SECURITY-88 apparently are not public, and could possibly have clarifying information (e.g., if there were a later finding that only FORM is exploitable, and IFRAME isn't actually exploitable). Unless that information becomes available and suggests a different course of action, we will proceed to assign a new ID for SECURITY-76 soon.   > SECURITY-55 >  Use   > > | Plugging a hole in the earlier fix to SECURITY-55. Under some > | circumstances, a malicious user of Jenkins can configure job X to > | trigger another job Y that the user has no access to. >  >  Use   > > | CLI job creation had a directory traversal vulnerability. This allows a > | malicious user of Jenkins with a limited set of permissions to overwrite > | files in the Jenkins master and escalate privileges. >  >  Use   > > | The embedded Winstone servlet container is susceptible to session > | hijacking attack. >  > > (issue in jenkins-winstone?)  Use   > SECURITY-93 > | The password input control in the password parameter definition in the > | Jenkins UI was serving the actual value of the password in HTML, not an > | encrypted one. If a sensitive value is set as the default value of such > | a parameter definition, it can be exposed to unintended audience. >  >  Use   > SECURITY-89 > | Deleting the user was not invalidating the API token, allowing users to > | access Jenkins when they shouldn't be allowed to do so. >  >  Use   > SECURITY-80 > | Jenkins UI was vulnerable to click jacking attacks. >  >  Use   > SECURITY-79 > | "Jenkins' own user database" was revealing the presence/absence of users > | when login attempts fail. >  >  Use   > SECURITY-77 > | Jenkins had a cross-site scripting vulnerability in one of its cookies. > | If Jenkins is deployed in an environment that allows an attacker to > | override Jenkins cookies in victim's browser, this vulnerability can be > | exploited. >  >  Use This is an input-validation issue but perhaps shouldn't be categorized as a standard XSS issue because of the unusual threat model.   > SECURITY-75 > | Jenkins was vulnerable to session fixation attack. If Jenkins is > | deployed in an environment that allows an attacker to override Jenkins > | cookies in victim's browser, this vulnerability can be exploited. >  >  Use Again, the unusual threat model might limit the practical relevance of this.   > SECURITY-74 > | Stored XSS vulnerability. A malicious user of Jenkins with a certain set > | of permissions can cause Jenkins to store arbitrary HTML fragment. >  >  Use   > SECURITY-73 > | Some of the system diagnostic functionalities were checking a lesser > | permission than it should have. In a very limited circumstances, this > | can cause an attacker to gain information that he shouldn't have > | access to. >  >  Use  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  =aoN1 -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      