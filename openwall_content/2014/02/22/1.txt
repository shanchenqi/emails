  oss-security - Fwd: temporary file creation vulnerability in Redis            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Sat, 22 Feb From: Matthew Hall <mhall@...omputing.net> To: oss-security@...ts.openwall.com Subject: Fwd: temporary file creation vulnerability in Redis  Hello,  Could someone please assign me a CVE for the below Redis vulnerability?  Thanks, Matthew Hall  ----- Forwarded message from Matthew Hall <mhall@...omputing.net> -----  Date: Fri, 21 Feb From: Matthew Hall <mhall@...omputing.net> To: full-disclosure@...ts.grok.org.uk Subject: temporary file creation vulnerability in Redis User-Agent:  See also: .  I have been trying to reach the Redis maintainers since regarding  this report, but I could not find a good security contact for Redis, and the  lead maintainer, Salvatore Sanfilippo <antirez@...il.com> is not replying to  my private report to him about the issue and his opinion of it. I also  contacted US-CERT for help and they could not reach anyone by  Therefore I would like to encourage the Redis team to be more  security-friendly and establish some contact procedures on their website.  Given how many places this software is now being used these days, I think it  is very critical to make these changes before someone finds something more  serious than the one I could spot.  I think I might have discovered a security vulnerability in Redis This  code is from the function int rdbSave(char *filename) in rdb.c:      int rdbSave(char *filename) {         dictIterator *di =3D NULL;         dictEntry *de;         char         char magic[10];         int j;         long long now =3D mstime();         FILE *fp;         rio rdb;         uint64_t cksum;            (int) getpid());         fp =3D fopen(tmpfile,"w");         if (!fp) {             redisLog(REDIS_WARNING, "Failed opening .rdb for saving: %s",                 strerror(errno));             return REDIS_ERR;         } ...         /* Make sure data will not remain on the OS's output buffers */         fflush(fp);         fsync(fileno(fp));         fclose(fp);            /* Use RENAME to make sure the DB file is changed atomically only          * if the generate DB file is ok. */         if (rename(tmpfile,filename) =3D=3D -1) {             redisLog(REDIS_WARNING,"Error moving temp DB file on the final destination: %s", strerror(errno));             unlink(tmpfile);             return REDIS_ERR;         }  In line the function does not use a security temporary file creation  routine such as mkstemp. This is vulnerable to a wide range of attacks which  could result in overwriting (in line and unlinking (in line any  file / hard link / symlink placed in temp-PID.rdb by an attacker.  https://www.owasp.org/index.php/Improper_temp_file_opening https://www.owasp.org/index.php/Insecure_Temporary_File  The code should be creating the temporary file using some kind of safe  function like mkstemp, O_EXCL open, etc. instead of just using a PID value  which does not have enough entropy and protection from race conditions. It  should also be sure it has set the CWD of itself to a known-safe location that  should have permissions which are only open to the redis daemon / redis user  and not to other users or processes.  Thanks, Matthew Hall  ----- End forwarded message -----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      