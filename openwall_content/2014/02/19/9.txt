  oss-security - Re: CVE request New-djbdns: dnscache: possible DoS            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 19 Feb (EST) From: cve-assign@...re.org To: ppandit@...hat.com Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: CVE request New-djbdns: dnscache: possible DoS  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  > dnscache(8) resolver reads messages over a TCP connection one byte at a time. > For long messages, it'll trigger as many read(2) calls as the length of a > message. Thus consuming extra CPU cycles. A malicious remote user could use > this to cause a DoS.  >  Changing the TCP read approach can be considered a performance improvement (and, somewhat marginally, a security improvement), with no CVE assignment. The commit mentions "making slight gain in performance" and "could also lead to potential denial of service." The original implementation might have chosen its approach for design-for-auditability reasons, i.e., it may not have been a "mistake" at all. It seems impractical to assign CVE IDs to all opportunities to speed up the processing of untrusted input in all products. The situation would be different if it were clearly a logic error in the code, e.g., processing the first byte once, the second byte four times, the third byte nine times, etc.  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  =6Jj8 -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      