  oss-security - Re: Fwd: temporary file creation vulnerability in Redis            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Sun, 23 Feb (EST) From: cve-assign@...re.org To: mhall@...omputing.net Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: Fwd: temporary file creation vulnerability in Redis  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  > Could someone please assign me a CVE for the below Redis vulnerability?  >  Our understanding so far is that this doesn't cross privilege boundaries within the context of the product's documented security model, so no CVE assignment is pending.  Admittedly, the documentation doesn't specifically address the "Is it always completely safe to put 'dir /tmp/' in redis.conf?" question.  Note that the value is "dir ./" in the default redis.conf file.  http://redis.io/topics/security says "Redis is designed to be accessed by trusted clients inside trusted environments ... in general, untrusted access to Redis should always be mediated by a layer implementing ACLs." It also says "the ability to control the server configuration using the CONFIG command makes the client able to change the working dir of the program and the name of the dump file. This allows clients to write RDB Redis files at random paths, that is a security issue that may easily lead to the ability to run untrusted code as the same user as Redis is running."  Yes, the documentation is primarily talking about access over the network, not access within a multi-user system that has potentially untrusted local user accounts. However, apparently in the default configuration, a local user can simply connect to send "CONFIG SET dir" and "CONFIG SET dbfilename" commands, and then send a BGSAVE command to overwrite an arbitrary file with the privileges of the Redis process.  The vendor considers this intended behavior because of the "trusted clients inside trusted environments" statement in the security model. Because of this, it seems most likely that the trusted-environment constraint also means that direct filesystem write access to the product's data directory is also outside the scope of the security model. So, we are not planning to assign a CVE ID unless the vendor decides to announce the temp-%d.rdb issue as a vulnerability.  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  =jzUP -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      