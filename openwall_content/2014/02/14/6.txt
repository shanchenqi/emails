  oss-security - XSS Vulnerability With {{link-to}} Helper in  Non-block Form            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Fri, 14 Feb From: Tom Dale <tom@...dale.net> To: oss-security@...ts.openwall.com Subject: XSS Vulnerability With {{link-to}} Helper in  Non-block Form  XSS Vulnerability With {{link-to}} Helper in Non-block Form  There is a vulnerability in the {{link-to}} helper in Ember.js. This vulnerability has been assigned  Versions Affected: Not affected: Versions prior to 1.2 Fixed Versions:  Impact -------  In general, Ember.js escapes or strips any user-supplied content before inserting it in strings that will be sent to innerHTML.  However, a change made to the implementation of the {{link-to}} helper means that any user-supplied data bound to the {{link-to}} helper's title attribute will not be escaped correctly.  In applications that use the {{link-to}} helper in non-block form and bind the title attribute to user-supplied content, a specially-crafted payload could execute arbitrary JavaScript in the context of the current domain ("XSS").  All users running an affected release and binding user-supplied data to the {{link-to}} helper's title attribute should either upgrade or use one of the workarounds immediately.  Releases --------  Releases are available on emberjs.com/builds/#/tagged  Workarounds -----------  Ensure that you escape any user-supplied value that you bind to the {{link-to}} helper's title attribute. For example, if you bind a value named userTitle:   {{link-to "user" title=userTitle}}  Ensure that you escape the value of userTitle using Ember.Handlebars.Utils.escapeExpression:   var userTitle = this.get('userTitle');  var safeUserTitle = Ember.Handlebars.Utils.escapeExpression(userTitle);  this.set('userTitle', safeUserTitle);  Patches -------  Patches are available as an attachment to the announcement on the emberjs-security list:   Credits -------  This vulnerability was reported to us by Hyder Ali of Zoho. Many thanks for working with us on the patches and advisory.   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      