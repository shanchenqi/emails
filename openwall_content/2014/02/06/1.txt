  oss-security - Dokeos Multiple Stored XSS Vulnerabilities            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Thu, 6 Feb From: Gunther <deviant.beta@...il.com> To: oss-security@...ts.openwall.com Subject: Dokeos Multiple Stored XSS Vulnerabilities  Hi,  I have discovered several Stored XSS vulnerabilities in Dokeos, which you can grab them  *Tested Versions* Dokeos <http://sourceforge.net/projects/dokeos/> Version  *Details*  *Severity:* Stored XSS *Confidence:* Certain *Host:* http://localhost/ *Path:*  *Issue detail:* The problem is script does not sanitise the following parameters, *“Phone”* , *“Street”*,*“Address line”*, *“Zip code”*, *“City”* before storing them in the database. If i were to enter the following XSS vector as a value to either of these parameters, whomever is going to browse the profile of this user will be subjected to a Stored XSS.  1 <![CDATA["><iframe/onload=alert(document.domain)>]]>  As you can see here that i’ve used the above-mentioned XSS vector on the “Zip Code” field as shown below.   [image:  After you have validated the entered values, simply login as another user or view as current user the profile of this user. In my test case, the url will be like this   The profile.php script does not sanitise the parameters before using them after getting them from the database. This makes it possible for an anonymous attacker to manipulate the values passed to these parameters to create Stored XSS. Upon visiting the above-mentioned URL, the visitor will be subjected to the Stored XSS as shown below:  [image:  The 2nd issue which is also a Stored XSS.  *Severity:* Stored XSS *Confidence:* Certain *Host:* http://localhost/ *Path:*  *Issue detail:* The problem is that if attacker were to enter the following XSS vector as the “Subject Topic”.  1 "><video><source onerror=alert(domain)>  [image:  Whomever clicks “Reply” to that “Topic” will be subjected “Stored XSS” as shown below.  [image:  The 3rd issue which is also a Stored XSS.  *Severity:* Stored XSS *Confidence:* Certain *Host:* http://localhost/ *Path:*  *Issue detail:* The problem is similar to issue #2 if attacker were to enter the following XSS vector in the Message itself.  1 "><video><source onerror=alert(domain)>  [image:  Whomever clicks “Reply” to that “Message” will be subjected “Stored XSS” as shown below.  [image:  *POC / Test Code* All the examples here were provided to the vendor.  *Disclosure Timeline* – Vulnerability Discovered. – Initial Vendor Notification (no reply). – Vulnerability Details Sent to Vendor. – Second Vendor Notification (no reply). – Third Vendor Notification (no reply). – Public Release. Please see the full report at for more details if the images won't show  BR, [ Gunther ]   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      