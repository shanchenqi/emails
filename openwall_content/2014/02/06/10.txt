  oss-security - CVE Request: Capture::Tiny: insecure use of /tmp            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Thu, 6 Feb From: Salvatore Bonaccorso <carnil@...ian.org> To: oss-security@...ts.openwall.com Cc: Jakub Wilk <jwilk@...ian.org>, Subject: CVE Request: Capture::Tiny: insecure use of /tmp  Hi  Jakub Wilk reported the following insecure use of /tmp on the Debian BTS at [1].   [1]   On Thu, Feb 06, at Jakub Wilk wrote: > $ strace -f -o '| grep -E open.*/tmp' perl test.pl > open("/tmp/8NDe_c4S_N", O_RDWR|O_CREAT|O_EXCL|O_LARGEFILE|O_NOFOLLOW, = 5 > open("/tmp/5KKGPDNyy0", O_WRONLY|O_CREAT|O_TRUNC|O_LARGEFILE, = 3 >  > The first temporary file is created securely, but the second open(2) > call lacks the O_EXCL flag. The vulnerable code appears to be: >  >   # flag file is used to signal the child is ready >   $stash->{flag_files}{$which} = scalar tmpnam(); >  > The File::temp::tmpnam documentation reads: âWhen called in scalar > context, returns the full name (including path) of a temporary file > (uses mktemp()). The only check is that the file does not already > exist, but there is no guarantee that that condition will continue > to apply.â  There is no upstream commit to fix this issue yet.  Could a CVE be assigned for this insecure use of /tmp for the Capture::Tiny module?  Regards, Salvatore  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      