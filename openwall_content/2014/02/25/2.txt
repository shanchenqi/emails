  oss-security - Re: CVE request for catfish program            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 25 Feb (EST) From: cve-assign@...re.org To: vdanen@...hat.com Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: CVE request for catfish program  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  > >  > This script intentionally looks to load catfish.py in the current > working directory.  "intentionally" tends to be a complicating factor for a CVE assignment; one could possibly instead express this as: the author didn't consider that catfish would sometimes be executed with cwd outside of the user's home directory. The nature of the program suggests that it could be started interactively by any user at any time, and there's no documentation indicating that the cwd could or should be constrained.  We couldn't immediately figure out where your quoted source code came from.  has a catfish.in that looks for $APPNAME.pyc before $APPNAME.py. The quoted code has duplicate checks for $APPNAME.py. This affects the number of CVEs. Apparently, "a crafted catfish.py file in the current working directory" is an attack vector with a certain set of affected versions, and "a crafted catfish.pyc file in the current working directory" is an attack vector with a different set of affected versions. Also, the Debian bug report specifically names a much later package that might be considered an independent codebase, and at least has different attack vectors. The ChangeLog says Complete rewrite from the ground-up." The problematic code is distributed in bin/catfish.in.in and has attack vectors of "a crafted bin/catfish.pyc or bin/catfish.py file under the current working directory."  The primary Red Hat bug report refers to which is for "Product: Fedora ... Component: catfish ... Version: 20" but is essentially the same as the code is found in bin/catfish.in.in in the distribution, and bin/catfish.pyc and bin/catfish.py are the attack vectors. So, apparently your quoted code isn't the Fedora 20 code.  Finally, we didn't find any evidence of a case where only bin/catfish.py is checked within the post-complete-rewrite codebase.  catfish.py in the current working directory - Use  catfish.pyc in the current working directory - Use  bin/catfish.pyc and bin/catfish.py file under the current working directory - Use  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  =97F+ -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      