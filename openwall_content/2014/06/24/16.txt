  oss-security - OpenVZ simfs container filesystem breakout            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Tue, 24 Jun From: Michał Grzędzicki <lazy@...pl> To: "oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com> Subject: OpenVZ simfs container filesystem breakout  An attacker is able to access files outside of his container.  Function open_by_handle_at() enables process to access files on a mounted filesystem using file_handle structure. This structure is using inode numbers to differentiate files. Calling this function requires CAP_DAC_READ_SEARCH capability and superuser inside a container by default has this capability.  This enables an attacker to bypass simfs restrictions and access all files on an underlying filesystem including other VE’s residing on the same filesystem.  This is the same issue as the one affecting docker which was discovered recently by by Sebastian Krahmer. He wrote about it on this list .  This vulnerability is identified by .  For further technical information please refer to Sebastian Krahmers post and POC (http://stealth.openwall.net/xSports/shocker.c).  His POC code works with openvz with cosmetic modifications so we have to consider that public exploit is readily available.  Affected versions: all RHEL6 based openvz kernels older then released today and using simfs (VE_LAYOUT=simfs).  Unaffected versions: RHEL5 based openvz lack open_by_handle_at(2) function RHEL6 based openvz using exclusivelly ploop or parallels commercial vzfs  Newest vzctl packages defaults to unaffected ploop layout. Parallels comercial vzfs is also unaffected.  Disabling CAP_DAC_READ_SEARCH inside the containers can be used as an mitigation technique if kernel upgrade is not possible.  # vzctl vied --save --capability DAC_READ_SEARCH:off --setmode restart (It will immediately restart the VE)  I think it won’t break any typical software running inside the CT but Your milage may vary.   References:  --  Michał Grzędzicki e-mail: mg@...pl IQ PL Sp. z o.o.   Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      