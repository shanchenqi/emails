  oss-security - Re: Security release for mod_wsgi (version 3.5)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 18 Jun From: Solar Designer <solar@...nwall.com> To: oss-security@...ts.openwall.com Cc: Graham Dumpleton <graham.dumpleton@...il.com> Subject: Re: Security release for mod_wsgi (version 3.5)  On Wed, Jun 18, at Matthew Daley wrote: > I may be wrong as I haven't been following this discussion entirely, but...  I think Graham is not on oss-security.  CC added.  Graham, please comment on the potential off-by-one bug reported by Matthew below:  > On Wed, Jun 18, at AM, Graham Dumpleton > <graham.dumpleton@...il.com> wrote: > > This feature was added for one specific user and wouldn't be a well known feature unless people were reading change notes diligently as don't believe it is even covered in the documentation. > > > > Given that this code also only executes as root, the only error which could technically arise in this code for setgroups() is if the number of groups exceeded NGROUPS_MAX. > > > > This should not occur though as the number of groups was previously validated when the configuration was read: > > > >     if (groups_list) { > >         const char *group_name = NULL; > >         long groups_maximum = NGROUPS_MAX; > >         const char *items = NULL; > > > > #ifdef _SC_NGROUPS_MAX > >         groups_maximum = sysconf(_SC_NGROUPS_MAX); > >         if (groups_maximum < 0) > >             groups_maximum = NGROUPS_MAX; > > #endif > >         groups = (gid_t *)apr_pcalloc(cmd->pool, > >                                       groups_maximum*sizeof(groups[0])); > > > >         groups[groups_count++] = gid; > > > >         items = groups_list; > >         group_name = ap_getword(cmd->pool, &items, ','); > > > >         while (group_name && *group_name) { > >             if (groups_count > groups_maximum) >  > This is an off-by-one error, isn't it? As in, it should be testing for > groups_count >= groups_maximum and not the current test. >  > >                 return "Too many supplementary groups WSGI daemon process"; > > > >             groups[groups_count++] = ap_gname2id(group_name); > >             group_name = ap_getword(cmd->pool, &items, ','); > >         } > >     } > > > > Thus was pre-validated input. >  > - Matthew Daley  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      