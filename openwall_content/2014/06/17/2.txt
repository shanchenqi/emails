  oss-security - Re: Security release for mod_wsgi (version 3.5)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 17 Jun From: Tomas Hoger <thoger@...hat.com> To: oss-security@...ts.openwall.com,         Graham Dumpleton  <graham.dumpleton@...il.com> Subject: Re: Security release for mod_wsgi (version 3.5)  On Wed, 21 May Kurt Seifried wrote:  > So CVEs were assigned, this is now public, very well written an > detailed write up is at: >  >  ...  > Issue: Possibility of local privilege escalation when using daemon > mode. >  > The issue is believed to affect Linux systems running kernel versions > > = and < >  > The issue affects all versions of mod_wsgi up to and including version > 3.4. >  > The source of the issue derives from mod_wsgi not correctly handling > Linux specific error codes from setuid(), which differ to what would > be expected to be returned by UNIX systems conforming to the Open > Group UNIX specification for setuid().  Looking at the patch, mod_wsgi was previously expecting that setuid may return error, it only failed to respond to the failure correctly.  It only logged information about the failure, and continued to run with unexpected privileges.  Few lines above the patched code, the same pattern is used for setgid and setgroups / initgroups calls.  Is there a reason to not patch those in the same way?  While there may be no such easy way to trigger failure for those, their failure would also lead to user code running with unexpected privileges.  --  Tomas Hoger / Red Hat Security Response Team  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      