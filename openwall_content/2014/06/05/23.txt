  oss-security - Re: Linux kernel futex local privilege escalation            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 5 Jun From: Solar Designer <solar@...nwall.com> To: Greg KH <greg@...ah.com>, Thomas Gleixner <tglx@...utronix.de> Cc: oss-security@...ts.openwall.com Subject: Re: Linux kernel futex local privilege escalation  Greg, Thomas -  On Thu, Jun 05, at Solar Designer wrote: > This was handled via linux-distros, hence the mandatory oss-security > posting.  The issue was made public earlier today, and is included in > this Debian advisory: >  > >  > --- > >  >     Pinkie Pie discovered an issue in the futex subsystem that allows a >     local user to gain ring 0 control via the futex syscall. An >     unprivileged user could use this flaw to crash the kernel (resulting >     in denial of service) or for privilege escalation. > --- >  > I've attached patches by Thomas Gleixner (four e-mails, in mbox format),  Can you comment on how the four patches:  Subject: [patch 1/4] futex-prevent-requeue-pi-on-same-futex.patch Subject: [patch 2/4] futex: Validate atomic acquisition in Subject: [patch 3/4] futex: Always cleanup owner tid in unlock_pi Subject: [patch 4/4] futex: Make lookup_pi_state more robust  relate to these two on LKML:  Subject: [PATCH futex: Add another early deadlock detection check Subject: [PATCH futex: Prevent attaching to kernel threads    3.4:  It appears that "futex: Add another early deadlock detection check" is assumed to have been applied, and is being revised further by "futex: Make lookup_pi_state more robust", but "futex: Prevent attaching to kernel threads" is a patch on its own, not touched by the four patches. Correct?  Should distros be applying "futex: Prevent attaching to kernel threads" as well (back-porting it as necessary)?  Does it have security impact (it appears so)?  Thanks, and sorry for my confusion.  Alexander  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      