  oss-security - Re: cups-browsed remote exploit            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Thu, 19 Jun (EDT) From: cve-assign@...re.org To: jamie@...onical.com, thoger@...hat.com Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: cups-browsed remote exploit  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  The vulnerability that remains in cups-filters (in the generate_local_queue function, the input sanitization also needs to be used for the host variable, but wasn't used for that) is assigned This is fixed in cups-filters This is the vulnerability that exists because of an incomplete fix for  The second vulnerability addressed in cups-filters (OOB accesses in the process_browse_data function when reading the packet variable, leading to a crash after a remote attack) is assigned  For the third vulnerability addressed in cups-filters  > - cups-browsed: SECURITY FIX: Fix on usage of the >   "BrowseAllow" directive in cups-browsed.conf. Before, if the >   argument of a "BrowseAllow" directive is not understood it >   is treated as the directive not having been there, allowing >   any host if this was the only "BrowseAllow" directive. Now >   we treat this as a directive which no host can fulfill, not >   allowing any host if it was the only one.  the vendor is announcing it as a security fix, so it is assigned It also seems likely that the previous behavior was actually an implementation error. (Apparently, this only allows attacks against systems for which the administrator created a malformed configuration file. A vendor could instead choose to have an explicit security policy that the product's behavior is undefined in the case of a malformed configuration file.)  Two additional notes:  > This issue was reported as fixed in >  The code fix itself seems to be     instead. Also, mentions but the attachment in is apparently only the and patch, not the patch. However, isn't directly trying to define what means, so this can be considered a minor anomaly.  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  =1ezq -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      