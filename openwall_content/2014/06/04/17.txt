  oss-security - Re: CVE request: PulseAudio crash due to empty UDP packet            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Wed, 04 Jun From: "Alexander E. Patrakov" <patrakov@...il.com> To: oss-security@...ts.openwall.com Subject: Re: CVE request: PulseAudio crash due to empty UDP packet  cve-assign@...re.org wrote: > -----BEGIN PGP SIGNED MESSAGE----- > Hash: SHA1 > >> If one has module-rtp-recv loaded into PulseAudio, then a remote >> attacker can crash this instance of PulseAudio by sending an empty UDP >> packet > >> memblock.c: Assertion 'b' failed > > Use  Thanks!  >> PulseAudio usually gets respawned anyway. > > Apparently there are realistic circumstances in which respawning > doesn't happen (possibly a zero value of conf->daemonize or the > "User-configured server at %s, refusing to start/autospawn." case in > http://cgit.freedesktop.org/pulseaudio/pulseaudio/tree/src/daemon/main.c).  Yes, there is a parameter in the daemon.conf configuration file that  allows the user to turn the autospawn off.  >> > >> expecting to find an infinite loop (as it would be common for such >> FIONREAD misuse), but found an assertion failure instead. So there may >> be two bugs. > > The scope of does not include any infinite loop that > might be discovered later.  I have tested the patch, and it survives the empty packet without the  infinite loop. Besides, after the patch, there is no code path in which  recvmsg() is not called after a successful FIONREAD ioctl (even if it  returns a zero size). So, any FIONREAD-related infinite loop that  possibly remains on the RTP reception path after the patch is to be  found on the path where the ioctl itself fails.  --  Alexander E. Patrakov  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      