  oss-security - chkrootkit vulnerability            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Wed, 04 Jun From: Giuseppe Iuculano <iuculano@...ian.org> To: oss-security@...ts.openwall.com Subject: chkrootkit vulnerability   Hi,  Thomas Stangner reported the following chkrootkit vulnerability.  We assigned  Cheers, Giuseppe  -------- Original Message -------- Subject: Serious chkrootkit vulnerability Date: Sun, 25 May From: Thomas Stangner <thomas.stangner@...zner.de> Organization: Hetzner Online AG To: team@...urity.debian.org  Hi,  we just found a serious vulnerability in the chkrootkit package, which may allow local attackers to gain root access to a box in certain configurations (/tmp not mounted noexec).  The vulnerability is located in the function slapper() in the shellscript chkrootkit:  # # SLAPPER.{A,B,C,D} and the multi-platform variant # slapper (){    SLAPPER_FILES="${ROOTDIR}tmp/.bugtraq ${ROOTDIR}tmp/.bugtraq.c"    SLAPPER_FILES="$SLAPPER_FILES ${ROOTDIR}tmp/.unlock ${ROOTDIR}tmp/httpd \    ${ROOTDIR}tmp/update ${ROOTDIR}tmp/.cinik ${ROOTDIR}tmp/.b"a    "    OPT=-an    STATUS=0    file_port=     if ${netstat} "${OPT}"|${egrep} "^tcp"|${egrep} "${SLAPPER_PORT}"> /dev/null 2>&1       then       STATUS=1       [ "$SYSTEM" = "Linux" ] && file_port=`netstat -p ${OPT} | \          $egrep ^tcp|$egrep "${SLAPPER_PORT}" | ${awk} '{ print  $7 }' | tr -d :`    fi    for i in ${SLAPPER_FILES}; do       if [ -f ${i} ]; then          file_port=$file_port $i          STATUS=1       fi    done    if [ ${STATUS} -eq 1 ] ;then       echo "Warning: Possible Slapper Worm installed ($file_port)"    else       if [ "${QUIET}" != "t" ]; then echo "not infected"; fi          return ${NOT_INFECTED}    fi }   The line 'file_port=$file_port $i' will execute all files specified in $SLAPPER_FILES as the user chkrootkit is running (usually root), if $file_port is empty, because of missing quotation marks around the variable assignment.  Steps to reproduce:  - Put an executable file named 'update' with non-root owner in /tmp (not mounted noexec, obviously) - Run chkrootkit (as uid 0)  Result: The file /tmp/update will be executed as root, thus effectively rooting your box, if malicious content is placed inside the file.  If an attacker knows you are periodically running chkrootkit (like in cron.daily) and has write access to /tmp (not mounted noexec), he may easily take advantage of this.   Suggested fix: Put quotation marks around the assignment.  file_port="$file_port $i"   I will also try to contact upstream, although the latest version of chkrootkit dates back to - will have to see, if I reach a dev there.   Keep up the good work,  Cheers, Thomas     Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      