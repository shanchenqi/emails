  oss-security - Re: more info on "radiotap: bitmap-end-finding buffer  overrun"            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Sun, 19 Jan From: Henri Salo <henri@...v.fi> To: oss-security@...ts.openwall.com Subject: Re: more info on "radiotap: bitmap-end-finding buffer  overrun"  On Fri, Jan 17, at Raphael Geissert wrote: > Hi, >  > I was wondering if anyone has more info on the following commit: > >  > AFAICS it is a different issue than >  > A web search points to the following Secunia advisory, but not much else: > >  > (not asking for a CVE at this time) >  > Cheers, > --  > Raphael Geissert - Debian Developer > www.debian.org - get.debian.net  Johannes Berg replied:  """ It's not important at all in the current code base, let me explain why I think so.  The only (current) user of this code is the injection code, so you already need permission to create raw sockets, which I believe is usually equivalent to root permissions.  With that aside, let's assume you build and manage to send a packet specifically to hit this particular issue. By nature of the issue, this packet must consist solely of a radiotap header, with header extension bitmap and at most 3 bytes of data. The latter is crucial as otherwise the bitmap would just overlap the data and you can't cause the invalid read. Now this means that your packet is really just the size of the fixed radiotap header, plus 3 bytes at most, so at most 11 bytes.  Let's also say that the length field in your radiotap header is 8 (the minimum), which doesn't matter for the parser but does for the surrounding code. As a result, the checking code in will see that there are at least 2 more bytes after the radiotap header, and treat them as the frame control field. Regardless of the contents of those two bytes, will return at least 10.  Since 10 + 8 (the radiotap length we put into the packet) is far bigger than 11, I believe you can't even trigger the invalid read, since the packet will be dropped as invalid before the real radiotap parser is even initialized (i.e. the previously buggy code invoked.) """  --- Henri Salo  Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      