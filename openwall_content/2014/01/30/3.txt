  oss-security - Re: CVE request: temporary file issue in Passenger rubygem            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 30 Jan (EST) From: cve-assign@...re.org To: vdanen@...hat.com Cc: cve-assign@...re.org, oss-security@...ts.openwall.com, geissert@...ian.org,         support@...sion.nl, jwilk@...ian.org, Subject: Re: CVE request: temporary file issue in Passenger rubygem  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  > If a local attacker can predict this filename, and precreates a > symlink with the same filename that points to an arbitrary directory > with mode owner root and group root, then the attacker will > succeed in making Phusion Passenger write files and create > subdirectories inside that target directory. >  > It is fixed in upstream version >  >  > One thing to notice, however, is that there's a race condition between > the stat check introduced in > The following sequence still triggers the bogus behaviour: >  > <user> mkdir $dir > <phusion> lstat() (getFileTypeNoFollowSymlinks) > <user> rmdir $dir > <user> ln -s /target $dir > <phusion> stat() (from verifyDirectoryPermissions)  > Upstream has now fixed this with the following commit (basically using > the structure from lstat() for the two checks): >  Use for the vulnerability with the "before affected versions.  Use for the vulnerability with the and earlier" affected versions.  This is an unusual situation because it depends on a decision about whether the fix in version solves part of the problem or addresses one of the threat models. It also depends on whether two CVEs should be used to cover a set of reports that are only relevant to symlink attacks, but arguably have different flaw types.  requires the ability to create a symlink but apparently does not require the ability to conduct the described race-condition attack. The attacker could lack direct shell access, but have some type of slow or limited access to the system. This could potentially involve the ability to upload and run scripts that can create symlinks but can't execute arbitrary commands or code. Alternatively, the attacker could have access to a file manager with the same constraints.  Also, in some cases, multiple CVEs are used in the case of a single original report of a symlink-handling problem, e.g., and  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  =5HHG -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      