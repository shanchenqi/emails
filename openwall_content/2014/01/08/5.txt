  oss-security - Re: Re: CVE Request: graphviz: stack-based buffer 	overflow in yyerror()            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 8 Jan From: Sebastian Krahmer <krahmer@...e.de> To: oss-security@...ts.openwall.com Cc: ratulg@...hat.com, erg@...m.mit.edu Subject: Re: Re: CVE Request: graphviz: stack-based buffer 	overflow in yyerror()  Hi  Funny enough that tools like graphviz qualify for CVE assignments :)  Do not get me wrong, I really like graphviz, its a great tool and I use it myself; but probably like 2 scientists or 1 anti-terror fed plotting his graphs in the whole world would be targeted attacked using dot files sent via mail I guess.  Seems like the initial fix:   also contains a sprintf() which is also later removed by commit  just for safety reasons.  And finally there also is:   /* chkNum:  * The regexp for NUMBER allows a terminating letter.  * This way we can catch a number immediately followed by a name  * and report this to the user.  */ static int chkNum(void) {   unsigned char c = (unsigned char)yytext[yyleng-1];   /* last character */   if (!isdigit(c) && (c != '.')) {  /* c is letter */         char    buf[BUFSIZ];         sprintf(buf,"syntax error - badly formed number '%s' in line %d of %s\n",yytext,line_num, InputFile);     strcat (buf, "splits into two name tokens\n");         agerr(AGWARN,buf);     return 1;   }   else return 0; }   which also looks like a buffer overflow from user input; yet unfixed. (the regex seems to accept arbitrary long digit list)  So for the 3 potential victims, we need to fix that too :)  Sebastian   On Tue, Jan 07, at cve-assign@...re.org wrote: > -----BEGIN PGP SIGNED MESSAGE----- > Hash: SHA1 >  > >an error within the "yyerror()" > >function (lib/cgraph/scan.l) and can be exploited to cause a stack-based > >buffer overflow via a specially crafted file. >  > Use >  > - --  > CVE assignment team, MITRE CVE Numbering Authority > M/S > Burlington Road, Bedford, MA USA > [ PGP key available through http://cve.mitre.org/cve/request_id.html ] > -----BEGIN PGP SIGNATURE----- > Version: GnuPG (SunOS) >  > iQEcBAEBAgAGBQJSzH0dAAoJEKllVAevmvmsdcAIALBfNun5cNjVGVEVmWYQIncL > > > > > > =F0p9 > -----END PGP SIGNATURE-----  --   ~ perl self.pl ~ ~ krahmer@...e.de - SuSE Security Team   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      