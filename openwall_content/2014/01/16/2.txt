  oss-security - CVE Request: drupal: multiple vulnerabilities corrected in and             Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Thu, 16 Jan From: Ratul Gupta <ratulg@...hat.com> To: oss-security@...ts.openwall.com Subject: CVE Request: drupal: multiple vulnerabilities corrected in and   Hello,  Multiple vulnerabilities were fixed in the supported Drupal core  versions 6 and 7.  1) Impersonation (OpenID module - Drupal 6 and 7 - Highly critical)  A vulnerability was found in the OpenID module that allows a malicious  user to log in as other users on the site, including administrators, and  hijack their accounts. This vulnerability is mitigated by the fact that the malicious user must  have an account on the site (or be able to create one), and the victim  must have an account with one or more associated OpenID identities.  2) Access bypass (Taxonomy module - Drupal 7 - Moderately critical)  The Taxonomy module provides various listing pages which display content  tagged with a particular taxonomy term. Custom or contributed modules  may also provide similar lists. Under certain circumstances, unpublished  content can appear on these pages and will be visible to users who  should not have permission to see it. This vulnerability is mitigated by the fact that it only occurs on  Drupal 7 sites which upgraded from Drupal 6 or earlier.  3) Security hardening (Form API - Drupal 7 - Not critical)  The form API provides a method for developers to submit forms  programmatically using the function drupal_form_submit(). During  programmatic form submissions, all access checks are deliberately  bypassed, and any form element may be submitted regardless of the  current user's access level. This is normal and expected behavior for most uses of programmatic form  submissions; however, there are cases where custom or contributed code  may need to send data provided by the current (untrusted) user to  drupal_form_submit() and therefore need to respect access control on the  form. To facilitate this, a new, optional  $form_state['programmed_bypass_access_check'] element has been added to  the Drupal 7 form API. If this is provided and set to FALSE,  drupal_form_submit() will perform the normal form access checks against  the current user while submitting the form, rather than bypassing them. This change does not fix a security issue in Drupal core itself, but  rather provides a method for custom or contributed code to fix security  issues that would be difficult or impossible to fix otherwise.  Upstream advisory:  Could CVE's please be assigned to these issues?  --  Regards,  Ratul Gupta / Red Hat Security Response Team   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      