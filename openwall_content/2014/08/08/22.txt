  oss-security - Re: BadUSB discussion            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 8 Aug From: gremlin@...mlin.ru To: oss-security@...ts.openwall.com Subject: Re: BadUSB discussion  On Greg KH wrote:   >>> Oh, and if you want, you can disable all USB devices on your  >>> Linux system by default, and only "authorize" them explicitly  >>> if you programatically think they should be enabled. We have  >>> had support in the kernel for that for years now, but very few  >>> people actually use it.  >> I've faced that only once, and my solution was straightforward:  >> those two servers were running a kernel built with only basic  >> USB HID support (keyboard+mouse, IIRC) and without module load  >> support. That appeared to be quite enough.  > That doesn't prevent any other USB HID device from being plugged  > in and instantly working. Which again, you can prevent if you  > want to, but no one seems to do that...  Hmmm... To avoid possible confusion: that was CONFIG_USB_KBD -  "USB HIDBP Keyboard (simple Boot) support", and CONFIG_USB_HID was turned off.   >>> So the tools to do this are already there, why aren't you using  >>> them? :)  >> You could guess: sometimes I'm developing USB devices and have  >> to test them. That formed a good habit of connecting my devices  >> to a hub instead of directly to BB :-)  > A USB hub doesn't do anything special except slow things down and  > add complexity to the overall USB system, and does nothing for  > "security" at all.  Sometimes they may hang when plugged device misbehaviors. Pulling out the cable and then plugging it back resumes normal operation.  With direct connection, I sometimes ended up with all USB devices being inaccessible. Now, I keep a mouse plugged into the hub to detect these situations.  Look here, I had some experiments recently:  Bus Device ID Genesys Logic, Inc. USB 2.0 Hub Bus Device ID Linux Foundation 1.1 root hub Bus Device ID Logitech, Inc. Optical Wheel Mouse  Device IDs tell us the hub was reset several times :-)   --  Alexey V. Vissarionov aka Gremlin from Kremlin <gremlin ПРИ gremlin ТЧК ru> GPG: @ hkp://keys.gnupg.net  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      