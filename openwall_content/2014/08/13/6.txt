  oss-security - Re: CVE Request: ro bind mount bypass using user namespaces            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 13 Aug From: Kenton Varda <kenton@...dstorm.io> To: cve-assign@...re.org Cc: oss-security@...ts.openwall.com Subject: Re: CVE Request: ro bind mount bypass using user namespaces  I'm happy with however you want to assign credit here, but for clarification:  I actually observed that all these bits could be modified. My first observation was with nosuid. But, I thought they were just the same issue applied to different bits in the same bitfield. I specifically used the RO bit in my PoC. Looking back, it looks like I didn't explicitly point out which other bits were affected, but Eric quickly re-discovered them, and also discovered from reviewing the code that the other bits had even fewer guards against modification compared to the RO bit.  Andrew Lutomirski has further discovered that this problem can be used to escalate a regular user to root privileges on typical Linux configurations, independent of any sandboxing effort.  Thanks, -Kenton  On Tue, Aug 12, at PM, <cve-assign@...re.org> wrote:  > -----BEGIN PGP SIGNED MESSAGE----- > Hash: SHA1 > > We are assigning two CVE IDs because the available information is that > there were two discoverers. Even if the discoverer information is > later clarified, there will still be these two CVE IDs. > > > > > > > > Kenton Varda <kenton@...dstorm.io> discovered that by remounting a > > read-only bind mount read-only in a user namespace the > > MNT_LOCK_READONLY bit would be cleared, allowing an unprivileged user > > to the remount a read-only mount read-write. > > Use > > > > > > > > > While investigating the issue where in "mount --bind -oremount,ro ..." > > would result in later "mount --bind -oremount,rw" succeeding even if > > the mount started off locked I realized that there are several > > additional mount flags that should be locked and are not. > > Use > > - -- > CVE assignment team, MITRE CVE Numbering Authority > M/S > Burlington Road, Bedford, MA USA > [ PGP key available through http://cve.mitre.org/cve/request_id.html ] > -----BEGIN PGP SIGNATURE----- > Version: GnuPG (SunOS) > > > > > > > > =Qzne > -----END PGP SIGNATURE----- >   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      