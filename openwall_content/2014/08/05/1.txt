  oss-security - Re: Re: Possible CVE request: subversion MD5 collision  authentication leak            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 04 Aug From: Ben Reser <ben@...er.org> To: Tomas Hoger <thoger@...hat.com> CC: Marcus Meissner <meissner@...e.de>,   OSS Security List <oss-security@...ts.openwall.com> Subject: Re: Re: Possible CVE request: subversion MD5 collision  authentication leak  On PM, Tomas Hoger wrote: > I believe the attack here is supposed to create a collision against MD5 > sums used as names of files under ~/.subversion/auth/svn.simple/. > However, as attacker does not control realm strings for any of the > trusted repositories, that would require preimage attack.  The lack of > (publicly) known efficient preimage attacks against MD5 should imply > such attack is still only theoretical.  I think your understanding of the current state of MD5 collision attacks is out of date.  Chosen prefix attacks are possible.  See: http://www.win.tue.nl/hashclash/ChosenPrefixCollisions/  The MD5 hash is created off the data in the following format: <$URL> $REALM  An attacker trying to take advantage of this only needs the $URL portion to match their server.  The $REALM can then be whatever data is required to make the MD5 hash match the system they are trying to attack.  I know of nobody that has taken the time to generate a MD5 collision to take advantage of this.  But I'm pretty sure that it could be done.  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      