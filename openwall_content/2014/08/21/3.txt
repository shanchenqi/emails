  oss-security - Lua CVE request [was Re: CVE request: possible overflow in vararg  functions]            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 21 Aug From: Murray McAllister <mmcallis@...hat.com> To: oss-security@...ts.openwall.com Subject: Lua CVE request [was Re: CVE request: possible overflow in vararg  functions]  Last spam, changing the subject so it is obvious where the issue is.  On PM, Murray McAllister wrote: > Additionally, Fedora has but it does not have the fix, so even if > shipping it may be worth checking... > > On PM, Murray McAllister wrote: >> Good morning, >> >> An overflow was reported to have been fixed in Lua A reproducer >> and patch are available from: >> >> >> >> The reproducer affects older versions too (such as One way an >> attacker could trigger this issue is if they can control parameters to a >> loadstring call (an eval in Lua, http://en.wikipedia.org/wiki/Eval#Lua). >> >> Could a CVE please be assigned if one has not been already? >> >> Some notes: >> >> valgrind shows this crashes with invalid writes, but I am not sure if >> this is really a stack or heap overflow but something else. In >> luaD_precall(): >> >>       for (; n < p->numparams; n++) >>         setnilvalue(L->top++);  /* complete missing arguments */ >> >> This goes through 49 times with the reproducer (?possibly lifting what >> Lua thinks is the stack into the heap area?). >> >> After that finishes: >> >>       ci = next_ci(L); >> >> Results in a call to luaE_extendCI(), where the issue is triggered while >> attempting to call luaM_new() (I did not get further than this yet). >> >> Thanks, >> >> -- >> Murray McAllister / Red Hat Product Security >> >> >   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      