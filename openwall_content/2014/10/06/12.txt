  oss-security - Re: vulnerability in rsyslog            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 06 Oct From: Simon McVittie <smcv@...ian.org> To: oss-security@...ts.openwall.com, rgerhards@...adiscon.com Subject: Re: vulnerability in rsyslog  On Rainer Gerhards wrote: > Sorry, it looks like I don't understand your question.  I think the clarification Sven is asking for is a statement like this (I'm deliberately using imaginary version numbers which do not resemble rsyslog's actual 7.x versions, to make it clear that I'm not making a statement about this particular rsyslog vuln):  """ Releases 1.2.x < 1.3.x < and 1.4.x < are vulnerable unless the vendor-supplied patch is applied. Releases < 1.2, >= >= and >= are not vulnerable. """  In most projects' version numbering practices:  * a version (release) is a fixed point that can never change (so if   is vulnerable to it will always be vulnerable   to  * a stable release series or stable branch can have later versions that   are intended to supersede an earlier version completely, while having   minimal changes to fix serious bugs (so the upstream project can   address by releasing or  * alternatively, the upstream project can release recommended patches   to be applied by sysadmins or vendors, which might be labelled   patch 1" or something if the project is particularly formal,   or might just be identified by git/svn/etc. commit ID  * even if is vulnerable and always will be, a downstream vendor   like Debian or Red Hat might release a derived version like   which incorporates the recommended patch from the   upstream project, or a patch from the vendor or a third party, and so   is not vulnerable  Regards,     S   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      