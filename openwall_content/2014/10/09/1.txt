  oss-security - Re: Thoughts on Shellshock and beyond            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 08 Oct (EDT) From: "David A. Wheeler" <dwheeler@...eeler.com> To: "oss-security" <oss-security@...ts.openwall.com> Subject: Re: Thoughts on Shellshock and beyond  On Wed, 8 Oct Tracy Reed <treed@...raviolet.org> wrote: > While it is too late for our hardware etc. perhaps strong type systems such as > found in Haskell can help here?  No.  At least not in the sense of totally separating data and code. It's trivial to implement a language (say Lisp) inside Haskell, and then hand data to that implementation to be executed.  That does not make Haskell *bad*; you can implement an interpreter in any Turing-complete language.  And it's absurd to say "NEVER mix data and code" - it's sometimes the right approach to use. But mixing code with data is probably an *overused* approach, given the risks that come with it.  We need to help developers know what is safe, and what is less safe. Then they can avoid easily-avoided problems, and know when they have extra work to do.  --- David A. Wheeler  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      