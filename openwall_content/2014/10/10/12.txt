  oss-security - Re: 0xdeadbeef comes of age: making keysteak with GnuPG            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 10 Oct From: Kristian Fiskerstrand <kristian.fiskerstrand@...ptuouscapital.com> To: David Leon Gil <coruus@...il.com>,   Daniel Kahn Gillmor <dkg@...thhorseman.net> CC: oss-security@...ts.openwall.com,   "gnupg-devel@...pg.org" <gnupg-devel@...pg.org>,  Werner Koch <wk@...pg.org>, thijs@...ian.org Subject: Re: 0xdeadbeef comes of age: making keysteak with GnuPG  -----BEGIN PGP SIGNED MESSAGE----- Hash:  On PM, David Leon Gil wrote: > On Fri, Oct 10, at AM, Daniel Kahn Gillmor  > <dkg@...thhorseman.net> wrote: >> If we're going to advocate for accessing keyservers via https >> (which i think is a lovely idea, even if it doesn't mitigate all >> possible attacks), it's worth advocating for the well-curated  >> hkps.pool.sks-keyservers.net [0], rather than encouraging >> everyone to flood either https://keybase.io or >> https://pgp.mit.edu with traffic. >  > My problem with the HKPS pool is that I don't know Kristian.[1] And > I don't have any reason to believe that he'd suffer serious > financial damage if the private key for the "sks-keyservers.net CA" > got used maliciously.[2]  You are quite correct that I probably wouldn't, and my primary income is from another industry, but at the same time that does bring a protection as I wouldn't be discouraged to fight any oppression. Of course, you can't know my motives and integrity, which is a very fair argument.  >  > (While I know that if a root CA were caught intentionally issuing > an MitM cert for keybase.io or pgp.mit.edu would face likely  > delisting/bankruptcy.)  The cases we've seen where this happens (turktrust, diginotar) doesn't really speak to a large financial hit either. Although for the root CAs the major problem is simply the amount of CAs accepted by standard implementations, several of which are run by various governments. In the end it comes down to what the threat model is and whom you're protecting yourself from.  Currently the only criteria for whether someone gets a certificate for a server in the pool is based on technical merits and that they are in control of the server in question. If no such agency were to run a perfectly valid keyserver under a pseudonym it would not be part of the current model to exclude this keyserver. However the goal is primarily to avoid information leakage on transport, in particular during a refresh of the keyring.  I certainly wouldn't mind coming to the point to have verified each keyserver operator's identity before issuing a certificate, but we're not there yet. This might change over time as things mature, but that is the status today.  >  > I'd be really happy if Kristian published a GPG-signed log of > every valid certificate for servers in the HKPS pool; then it would > be possible for the distrustful -- or targeted -- to, say, query > multiple HKPS keyservers. This is even better than trusting Root > CAs + Kristian.[3])  This is certainly something I can consider if there is a wish for it in the community. But mainly you will see the servers included with a HKPS flag in the status page of the pool[0] as I wouldn't sign a server not included here. You'll run into a catch-22 here as well, as you'd (i) need to have a valid OpenPGP trust path (ii) trust that the information I provide in that log is accurate. As I use sequential serial-numbers, the latter should be possible, but in theory I could generate an out-of-scope certificate and choose not to include it in that log. So the question boils down to trust in the first place. For better or for worse.  >  > [1] Most hkps.pool.sks-keyservers.net don't have an alternative > trust path to a standard root CA.  Is this really something we wish to have, given the lack of credibility of the global PKIX model? It is also one of the purposes of the more user-controlled web of trust possibilities (both due to everyone being their own CA, or through explicitly granting others this trust) of OpenPGP that we're tryign to operate in. So personally I'm more focused on the possibility to verify operators and indeed the CA through this protocol. That said I'm making an effort to create better trust paths to my own OpenPGP key that signs the CA key in the first place.  >  > [2] This is different from saying that I think he *would  > intentionally* sign a malicious cert, which I don't. I just have > no idea how secure the private key for that CA is. And I know that > a fully isolated, physically secure facility, and a good HSM are > really expensive. (But maybe he is doing this?)  Sorry, but no, I don't keep it in a physical facility, it is on an older laptop used for such operations.  Hardware modules I don't necessarily believe to be any better for security as verifying the firmware brings its own set of problems, but that is a discussion out of scope for this thread.  >  > [3] If this is already available somewhere, apologies; I haven't  > managed to find anything like it. >    References: [0] https://sks-keyservers.net/status/  - --  - ---------------------------- Kristian Fiskerstrand Blog: http://blog.sumptuouscapital.com Twitter: @krifisk - ---------------------------- Public OpenPGP key at hkp://pool.sks-keyservers.net fpr:94CB AFDD 35AA 0B7F E3ED FAE3 - ---------------------------- "Expect the best. Prepare for the worst. Capitalize on what comes." (Zig Ziglar) -----BEGIN PGP SIGNATURE-----  =vy6k -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      