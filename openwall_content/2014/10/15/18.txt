  oss-security - Re: Truly scary SSL 3.0 vuln to be revealed soon:            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 15 Oct From: "Ben Lincoln - OSS)" To: oss-security@...ts.openwall.com Subject: Re: Truly scary SSL 3.0 vuln to be revealed soon:  On Pierre Schweitzer wrote: > I've a naive question regarding the vulnerability, actually. > > It says you can recover plain text of ciphered text, using a specific > method. > But, in the end it means you'll have plain text + ciphered text of the > same text. Does that mean you can easily bruteforce the key that was > used? So that you can actually, if you logged the complete session, > decipher the whole session of the user? And not only the cookie? > Or breaking the key would be too complex yet?  Hi Pierre.  For modern block ciphers (e.g. AES, or even 3DES), known-plaintext  attacks still generally require the entire keyspace to be brute-forced,  which is not practical using the technology available today.  Think about the Adobe credential breach. There are many thousands of  known plaintext + ciphertext pairs there (the same 3DES key was used to  encrypt all of the passwords, and the passwords for many users were able  to be recovered based on a combination of ECB-mode encryption +  plaintext password hints), but the actual key was never recovered even  with all of that data to work with.  - Ben  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      