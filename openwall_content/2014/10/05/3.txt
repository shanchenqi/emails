  oss-security - RE: Shellshocker - Repository of "Shellshock" Proof  of Concept Code            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Sun, 5 Oct From: Sona Sarmadi <sona.sarmadi@...a.com> To: "oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com> Subject: RE: Shellshocker - Repository of "Shellshock" Proof  of Concept Code    > > < https://github.com/mubix/shellshocker-pocs > >  > I mentioned this earlier on another thread, but I would really warn people > about relying on this unless they really understand what's going on. >  > /mz  Thanks Michal,   I agree that everyone using bash needs to understand what is going on,  but I think what most (non-expert) people need is an explanation for each CVE, a set of test case from some reliable source (preferably a script that runs all test cases and shows vulnerable/not-vulnerable status) and a set of patches. So that they can apply the patches, run the tests and assert that their systems are not vulnerable to shellshock anymore.  Maybe we should update your summary like this:      - original RCE found by Stephane. Fixed by and corresponding Sep 24 entries for other versions.     - file creation / token consumption bug found by Tavis. Fixed by & co (Sep 26)     - a probably no-sec-risk 10+ here-doc crash found by Florian and Todd. Fixed by & co (Oct 1).     - a non-crashing, probably no-sec-risk off-by-one found by Florian. Fixed by & co (Oct 1).     - uninitialized memory issue, almost certainly RCE found by me. Fixed by & co (Oct 2).     - command injection RCE found by me. (No specific patch yet, maybe ??).   Some questions:  1)   patch  exported function namespace change,  Florian's mitigation patch that shields the parser from untrusted inputs". This does not solve any specific CVE, but mitigates all CVEs, is this correct?  2) Do we need to apply *all* of these individual bash patches (i.e. through Even  which is not solving any specific CVE?  Or should we apply 27 or all the others?  3) Do you have a script or summary of all tests in one place like  or https://raw.githubusercontent.com/hannob/bashcheck/master/bashcheck ? Or maybe these are good enough & reliable?   Thanks /Sona  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      