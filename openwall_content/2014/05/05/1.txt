  oss-security - Re: XSS in NextCellent Gallery WordPress plugin            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Sun, 4 May (EDT) From: cve-assign@...re.org To: larry0@...com Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: XSS in NextCellent Gallery WordPress plugin  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  > XSS in NextCellent Gallery WordPress plugin >  > Vulnerability Fixed: in Nextcellent Gallery >  > http://wordpress.org/plugins/nextcellent-gallery-nextgen-legacy/changelog/ >  >  Comparing the post to the post, the former says "If a user with permission to add media or edit media uploads a file with "<script>alert(1)</script>" as the title they can XSS the site admin user."  The latter does not describe how the attack crosses privilege boundaries.  add_image seems to be protected by:    // Check if you have the correct capability for upload   if ( !current_user_can('NextGEN Upload images') ) {           logIO('O', '(NGG) User does not have upload_files capability');           $this->error = new __('You are not allowed to upload files to this site.'));           return $this->error;   update_image seems to be protected by:    if ( !current_user_can( 'NextGEN Manage gallery' ) && !nggAdmin::can_manage_this_gallery($image->author) )       return new IXR_Error( __( 'Sorry, you must be able to edit this image' ) );   These functions make use of the $alttext and $description values.  So, apparently any user with the "NextGEN Upload images" or "NextGEN Manage gallery" or "NextGEN Manage others gallery" capability can conduct an XSS attack against a user with the Administrator role, in order to gain privileges.  Use  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  =Fspe -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      