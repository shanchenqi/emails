  oss-security - Re: local privilege escalation due to capng_lock as used in seunshare            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 1 May From: Solar Designer <solar@...nwall.com> To: Steve Grubb <sgrubb@...hat.com> Cc: oss-security@...ts.openwall.com, Andy Lutomirski <luto@...capital.net> Subject: Re: local privilege escalation due to capng_lock as used in seunshare  On Thu, May 01, at Solar Designer wrote: > On Wed, Apr 30, at Steve Grubb wrote: > > And switching to NO_NEW_PRIVS broke the sandbox: > > > >  > > So, perhaps fixing SECURE_NOROOT is the safest bet? Are there any other  > > opinions on this? >  > If SECURE_NOROOT is meant to be usable to run entire Linux distros > (whether "on host" or/and "in containers"),  Actually, I think it won't work well for that unless the distro in question doesn't use any SUID root programs that need capabilities, because SECURE_NOROOT breaks the raising of capabilities for SUID root exec (on purpose).  So generic implementations of containers capable of running arbitrary Linux distro userlands are probably not making use of SECURE_NOROOT.  > then it must not have an > effect of excluding UID 0 from "appropriate privileges" for setuid(2). >  > Do we know reliably that in this case excluding UID 0 from "appropriate > privileges" for setuid(2) was an effect specifically of SECURE_NOROOT?  Per my quick greps, this does not appear to be the case.  The only checks for SECURE_NOROOT that I could find are in cap_bprm_set_creds(), so SECURE_NOROOT should affect execve(2), but not setuid(2).  Why are we talking about it in this context, then?  Alexander  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      