  oss-security - Defeating memory comparison timing oracles            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Fri, 9 May From: Solar Designer <solar@...nwall.com> To: oss-security@...ts.openwall.com Subject: Defeating memory comparison timing oracles  Hi,  Florian made this nice Red Hat security blog post a couple of days ago:   The idea is to harden glibc's memcmp(3) to be partially timing-safe, maybe only in the -D_FORTIFY_SOURCE=2 mode.  While I don't mind having memcmp(3) sometimes hardened, I think we primarily need to have an explicit timing-safe memory comparison function in glibc and elsewhere, and I think it'd be natural to adopt OpenBSD's timingsafe_bcmp() prototype and semantics:  http://www.openbsd.org/cgi-bin/man.cgi?query=timingsafe_bcmp  People will need this very function e.g. when making LibReSSL portable:   Some good reading on the problem and possible solutions:    Alexander  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      