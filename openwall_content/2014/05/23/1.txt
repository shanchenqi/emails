  oss-security - Re: CVE request: Pyplate multiple vulnerabilities            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Fri, 23 May (EDT) From: cve-assign@...re.org To: henri@...v.fi Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: CVE request: Pyplate multiple vulnerabilities  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  >   > Installation instruction tells user to execute following commands without > checking any checksums or similar: >  >> wget http://pyplate.com/pyplate_install.sh >> chmod +x ./pyplate_install.sh >> sudo ./pyplate_install.sh  This type of issue is probably outside the scope of CVE. A set of installation commands only implies that an installation can be done that way, not that an installation should be done that way. There's no commonly recognized requirement for a vendor to try to document the types of pre-installation audits that might be important at customer sites. Of course, the issue is worth pointing out because the vendor may want to add functionality for download verification, etc.   > File /usr/lib/cgi-bin/create_passwd_file.py creates passwd.db for admin user > password with world readable permissions. > -rw-r--r-- 1 www-data www-data 99 May 13 /usr/share/pyplate/passwd.db  Use   > Application is not using HttpOnly ... flag in cookie "id".  Use   > Application is not using ... Secure ... flag in cookie "id".  Use   > CSRF + XSS with cookie stealing PoC: > action="http://example.com/admin/addScript.py" method="POST" > name="title" value="[XSS]"  Use for this CSRF vulnerability. The XSS could be independently relevant (with a separate CVE ID) if it can be used for privilege escalation by someone posting JavaScript intentionally using admin/addScript.py. We didn't immediately notice anything at http://www.pyplate.com/how-to/ suggesting that there would be multiple user accounts, with different privilege levels, who have legitimate access to admin/addScript.py.   > payload = {'filename': '../../../../etc/passwd'} > r = requests.post('http://example.org/cgi-bin/download.py', > data=payload)  Use  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  =eX44 -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      