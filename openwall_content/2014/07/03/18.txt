  oss-security - Re: Varnish - no CVE == bug regression            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 3 Jul From: Marek Kroemeke <kroemeke@...il.com> To: oss-security@...ts.openwall.com Subject: Re: Varnish - no CVE == bug regression  I doubt that CDNs like Akamai, Fastly(varnish?), Cloudflare(nginx?) etc.. would agree that the fact that a core part of their infrastructure could be DoSed by one of their users is not a security vulnerability, but I'm happy to be in minority regarding this view.  To be clear - I think that asserts in varnish are great, they decrease the severity of the problem from something potentially very dangerous to "just a DoS", but don't we usually try to track these as well with CVEs ?  regards, Marek   On Thu, Jul 3, at PM, Kurt Seifried <kseifried@...hat.com> wrote:  > -----BEGIN PGP SIGNED MESSAGE----- > Hash: SHA1 > > > > On AM, Stefan BĂźhler wrote: > > On Thu, 3 Jul Sven Kieske > > <S.Kieske@...twald.de> wrote: > > > >> -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1 > >> > >> I'd agree with this. And I don't get the argument from > >> poul-henning kamp, what I understand is: "hey, we trust our > >> backend server" well, but your backend server can make you crash, > >> so you probably shouldn't trust it in the first place? > >> > >> you _never_ can trust input, so you have to validate it, either > >> way, at least enough to not crash or perform malicious actions. > >> > >> Am schrieb Kurt Seifried: > >>> So as I understand this: Varnish front end for web servers, the > >>> web servers can trigger varnish to restart. Are the back end > >>> servers supposed to be able to cause varnish to restart? > >>> > >>> I'm guessing not. Scenario: hosting env, or a website with a > >>> vuln, whatever, you can now cause the varnish front ends to > >>> restart constantly, effectively causing a permanent denial of > >>> service. > >>> > >>> That sounds CVE worthy. Or am I missing something? > > > > you should never trust *untrusted* input. your root shell usually > > trusts the input it gets... > > > > so the valgrind developers decided that they consider the backend > > webservers trusted, at least regarding the capability to cause a > > DoS. > > > > for the record - so does lighttpd (a backend can trigger OOM as > > lighty reads (nearly) as fast as possible from a backend, as > > backends often only handle one request at a time); we usually tell > > people to use X-sendfile instead of sending ISOs through php. > > That also sounds like it needs a CVE then. You should not be able to > trivially DoS stuff, especially OOM, things should protect themselves > from OOM'ing especially if they accept user controlled input from the > network. > > > just because you disagree with such decisions doesn't make it CVE > > worthy (missing or wrong documentation could). > > So to be clear your argument is that the http backends serviced by > Varnish are supposed to be able to shut down Varnish, not by using an > administrative channel/command but by executing a denial of service > against Varnish? And that this is intended behaviour and thus not a > security vulnerability? > > > in case you actually want to assign a CVE here, maybe we can get > > one for the bad openssl default cipherstring too? because for that > > it is really obvious that it is f*** wrong, but i think that none > > was assigned because upstream didn't agree with it. > > > > regards, Stefan > > > > - -- > Kurt Seifried -- Red Hat -- Product Security -- Cloud > PGP A90B 66BF > -----BEGIN PGP SIGNATURE----- > Version: GnuPG v1 > Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/ > > iQIcBAEBAgAGBQJTtbIDAAoJEBYNRVNeJnmT/mkQAMmXrwXn4+Y/hGUGMfp3anFo > > > > > > > > > > > > =7hmC > -----END PGP SIGNATURE----- >   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      