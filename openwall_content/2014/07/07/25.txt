  oss-security - Re: python-lz4            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Mon, 7 Jul From: "Don A. Bailey" <donb@...uritymouse.com> To: oss-security@...ts.openwall.com, distros@...openwall.org Subject: Re: python-lz4  For more information / PoC, please visit:  Thanks, Don A. Bailey Founder / CEO Lab Mouse Security @InfoSecMouse https://www.securitymouse.com/    On Mon, Jul 7, at AM, Don A. Bailey <donb@...uritymouse.com> wrote:  > -----BEGIN PGP SIGNED MESSAGE----- > Hash: SHA1 > > Hello All, > > Please find the bug report for python-lz4 attached below. > > Steeve Morin (@steeve), the maintainer of the python-lz4 package, has been > great to work with. He worked quickly to get the package up to date by this > morning. > > Thanks, > Don A. Bailey > Founder / CEO > Lab Mouse Security > @InfoSecMousehttps://www.securitymouse.com/ > > ############################################################################# > # > # Lab Mouse Security Report > # > # > > Report ID: > Report Code Name: LAZARUS.7 > > Researcher Name: Don A. Bailey > Researcher Organization: Lab Mouse Security > Researcher Email: donb@...uritymouse.com > Researcher Website: www.securitymouse.com > > Vulnerability Status: Reported > Vulnerability Embargo: None > > Vulnerability Class: Integer Overflow > Vulnerability Effect: Memory Corruption > Vulnerability Impact: DoS, OOW, RCE > Vulnerability DoS Practicality: Practical > Vulnerability OOW Practicality: Practical > Vulnerability RCE Practicality: Practical > Vulnerability Criticality: Critical > > Vulnerability Scope: > All versions of the python-lz4 package prior to > 32bit variants of the package are critically affected. > 64bit variants are deemed infeasible to exploit at this time. > > Lab Mouse Security has engineered reliable RCE payloads for any application > that uses python-lz4, regardless of where or how the app uses the module in > its code base. > > python2.7 was used in exploit development. python3 exploits have not been > written, but preliminary analysis shows it is likely at risk to reliable > RCE. > > Criticality Reasoning > - --------------------- > Due to the way Python manages objects in memory, there are multiple ways to > craft a reliable exploit against python2.7 that will allow for RCE. It is > notable that Don A. Bailey designed his exploit to meet the following > conditions: >  - bypasses ASLR >  - bypasses NX >  - portable to any target architecture (tested on 32bit: ARM, x86) >  - no corresponding information disclosure is required to succeed, making >    this a one-shot RCE for any python-lz4 use case > > Vulnerability Description > - ------------------------- > An integer overflow can occur when processing any variant of a "literal run" > in the affected function. When certain payloads are processed, a pointer to > an output buffer can be set to an address outside of the output buffer. Since > the attacker can specify exact offsets in memory, it is very easy to create > a reliable RCE exploit. > > The design of internal Python memory objects facilitates exploitation by > allowing the attacker to manipulate how and when an object in memory will be > scrubbed. The garbage collector can be triggered later, or the cleanup of > an object can be performed at the attacker's will. This allows for an attack > to occur at any time once the payload has corrupted memory, making it more > difficult to identify whether an attack has already occurred. > > Vulnerability Resolution > - ------------------------ > Resolved. > > References > - > > # > ############################################################################# > -----BEGIN PGP SIGNATURE----- > Version: GnuPG > > > > > > > > > > > > > DRKkrldSf5S5HIPQo/xA > =HWn4 > -----END PGP SIGNATURE----- > >   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      