  oss-security - Ruby on Rails: Two Active Record SQL  Injection Vulnerabilities Affecting PostgreSQL            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Wed, 2 Jul From: Rafael Mendonรงa Franรงa <rafaelmfranca@...il.com> To: oss-security@...ts.openwall.com Subject: Ruby on Rails: Two Active Record SQL  Injection Vulnerabilities Affecting PostgreSQL  There are two distinct but related vulnerabilities in PostgreSQL adapter for Active Record. These vulnerabilities have been assigned the CVE identifiers and  Versions Affected:  All Versions > 2.0 Not affected:       Databases other than PostgreSQL Fixed Versions:     &  Impact ------ PostgreSQL supports a number of unique data types which are not present in other supported databases.  A bug in the SQL quoting code in ActiveRecord can allow an attacker to inject arbitrary SQL using carefully crafted values.  Only applications which query against either bitstring or range types are vulnerable. The particular data types affected depend on the version of Rails you're using, but the vulnerable code will look the same.  Vulnerable code will take either take the form of:    Model.where(bitstring: params[:some_value])   Model.where(range: params[:from]..params[:to])  The specific versions affected is included below, however all users running an affected release should upgrade immediately.  SQL Injection Vulnerability in 'bitstring' quoting ================================================== Versions Affected: Not Affected: 4.0 and Later Identifier:  SQL Injection Vulnerability in 'range' quoting ============================================== Versions Affected: Not Affected: All versions prior to Identifier:  Releases -------- The & releases are available at the normal locations.  Workarounds ----------- The only feasible workaround for this issue is to not allow user controlled values to be used in queries with the affected data types. Given the difficulty of ensuring this, upgrading is strongly advised.  Patches ------- To aid users who aren't able to upgrade immediately we have provided patches for the two supported release series and the last major release series.  They are in git-am format and consist of a single changeset.  * 4-1-postgres-sqli.patch - Patch for 4.1 series * 4-0-postgres-sqli.patch - Patch for 4.0 series * 3-2-postgres-sqli.patch - Patch for 3.2 series  Please note that only the 4.0.x and 4.1.x series receive regular security updates at present.  Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for earlier releases.  Credits -------  Thanks to Sean Griffin of thoughtbot for reporting the vulnerability to us, and to Jeff Jarmoc of Matasano and Charlie Somerville of GitHub for working with us to review the patches and advisories.  Rafael Mendonรงa Franรงa http://twitter.com/rafaelfranca https://github.com/rafaelfranca   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      