  oss-security - Re: Re: glibc directory traversal in  LC_* locale handling            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 11 Jul From: Rich Felker <dalias@...c.org> To: oss-security@...ts.openwall.com Subject: Re: Re: glibc directory traversal in  LC_* locale handling  On Thu, Jul 10, at Tavis Ormandy wrote: > Rich Felker <dalias@...c.org> wrote: >  > > On Thu, Jul 10, at Florian Weimer wrote: > > > Stephane Chazelas discovered that directory traversal issue in locale > > > handling in glibc.  glibc accepts relative paths with ".." components in > > > the LC_* and LANG variables.  Together with typical OpenSSH > > > configurations (with suitable AcceptEnv settings in sshd_config), this > > > could conceivably be used to bypass ForceCommand restrictions (or > > > restricted shells), assuming the attacker has sufficient level of access > > > to a file system location on the host to create crafted locale > > > definitions there. > >  > > Am I correct in assuming this affects most typical git setups (e.g. > > gitolite) using ssh authorized_keys files with forced commands, where the > > malicious file could simply be created as part of the git repository? Or > > are these usually setup to filter the environment? > >  >  > I knew about this behaviour (I imagine lots of people were), but hadn't > considered it a vulnerability - it's more restricted across setuid, so had > assumed it was intentionally permitted. Locale files are not executable > code, so even if you imagine a ForceCommand+AcceptEnv configuration *and* > have the ability to create a message catalog, don't you still need another > bug to exploit this?  Replacing any format string with something containing %n in the translation?  Rich  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      