  oss-security - Vulnerabilities in Ruby Gem            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Thu, 10 Jul (GMT) From: "Larry W. Cashdollar" <larry0@...com> To: Open Source Security <oss-security@...ts.openwall.com> Subject: Vulnerabilities in Ruby Gem  Title: Vulnerabilities in Ruby Gem Date: Advisory Author: Larry W. Cashdollar, @_larry0 Gem Author: Tung Nguyen tongueroo[at]gmail.com OSVDB: CVEID: N/A  Download:Â http://rubygems.org/gems/brbackup Vulnerability: The following code exposes the database password to the command line, if this gem is used in the context of a rails application command injection can be achived by placing shell metacharacters like ; in the user supplied input for variable dbuser. I suspect the other variables are injectable by playing with " and '. Also line is vulnerable to SQL injection via the '#{name}' variable. From:     def db_has_myisam?(name)      query = "SELECT 1 FROM information_schema.tables WHERE table_schema='#{name}' AND engine='MyISAM' LIMIT 1;"      %x{mysql -u #{dbuser} {password_option} -N -e"{query}"}.strip == '1'    end    def restore_database(name, io) Where password_option will expose the password to the process table if the password is not nil or empty.  def password_option     dbpass.nil? || dbpass.empty? ? "" : "-p'#{dbpass}'" Gem Author Contacted: WONTFIX.  Content of type "text/html" skipped  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      