  oss-security - Re: glibc directory traversal in LC_* locale handling            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 10 Jul From: Florian Weimer <fw@...eb.enyo.de> To: oss-security@...ts.openwall.com Subject: Re: glibc directory traversal in LC_* locale handling  * Solar Designer:  > The default sshd_config found in does not list > AcceptEnv, so presumably by default OpenSSH portable does not accept any > environment variables.  I expected it to accept TERM, which is sort of unavoidable.  > However, apparently some distros override this safe default:  Yes, indeed.  There is clear user demand for this, especially from organizations like Debian which have users in many different locales.  > Is there a supported way for distros to configure OpenSSH such that > a number of environment variables would be accepted by default, but > only as long as no command is forced?  This could be an acceptable > tradeoff.  It is already possible to emulate this behavior with Match directives, so this is probably not sufficient reason for OpenSSH changes.  However, on systems which follow POSIX strictly and do not share the historic glibc bug, the glibc fix is does not apply, so some OpenSSH changes to better support them might be necessary.  On the other hand, as long as you use a general-purpose, shell-backed SSH implementation such as OpenSSH, it is difficult to completely rule out code execution by proper configuration.  But the library-based SSH implementations are likely less mature protocol-wise than OpenSSH, unfortunately.  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      