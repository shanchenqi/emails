  oss-security - Re: Fwd: [ruby-trunk - Bug  [Open] segmentation fault/buffer overrun in pack.c (encodes)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 10 Jul From: Murray McAllister <mmcallis@...hat.com> To: oss-security@...ts.openwall.com CC: rdecvalle@...are.com Subject: Re: Fwd: [ruby-trunk - Bug  [Open] segmentation fault/buffer overrun in pack.c (encodes)  On AM, Ramon de C Valle wrote: > I believe this should have a CVE assigned. > > Begin forwarded message: > >> From: <wkwood@...il.com> >> Subject: [ruby-trunk - Bug [Open] segmentation fault/buffer overrun in pack.c (encodes) >> Date: July 9, at AM GMT-3 >> To: <ruby-core@...y-lang.org> >> Reply-To: Ruby developers <ruby-core@...y-lang.org> >> >> Issue has been reported by Will Wood. >> >> ---------------------------------------- >> Bug segmentation fault/buffer overrun in pack.c (encodes) >> >> >> * Author: Will Wood >> * Status: Open >> * Priority: Normal >> * Assignee: >> * Category: core >> * Target version: >> * ruby -v: ruby revision >> * Backport: UNKNOWN, 2.1: UNKNOWN >> ---------------------------------------- >> While working with an AWS sample I hit a segmentation fault.  The same sample works under  It appeared to be coming from pack.c function encodes.  After looking at the source there's a 4K buffer allocated on the stack.  I made a minor change to base the buffer length off of the incoming buffer length with a pad and allocate it off the heap.  Anyway, after fixing this my code sample runs fine.  I'm including a patch file and the sample code. >> >> ---Files-------------------------------- >> pack.patch KB) >> BucketTest.rb Bytes) >> >> >> -- >> >  Hello Ramon,  Thanks for the notification! Have you reviewed the patch in   I am not sure about this part:    static void   encodes(VALUE str, const char *s, long len, int type, int tail_lf)   { -    char +	long bufLen = len +  // enough room +	char* buff = (char*)malloc(bufLen);       long i = 0;  Is len specified as part of the incoming data, or is it just the string  length? Is it not possible to send a string of around in length?  Anyways, from the bug comment it sounded like this is not the final patch.  Cheers,  -- Murray McAllister / Red Hat Product Security  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      