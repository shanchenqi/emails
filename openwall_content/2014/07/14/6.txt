  oss-security - Re: glibc directory traversal in LC_*  locale handling            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 14 Jul From: Rich Felker <dalias@...c.org> To: oss-security@...ts.openwall.com Subject: Re: glibc directory traversal in LC_*  locale handling  On Mon, Jul 14, at Florian Weimer wrote: > On PM, Rich Felker wrote: > >>Bug report: > > > >On further review, I question whether this is actually a valid > >vulnerability. The ability to use absolute pathnames as locale strings > >is a documented feature in both POSIX and glibc, and even after the > >patch, absolute pathnames are still accepted for locales in > >non-suid[-like] programs, meaning that bypass of ForceCommand is still > >possible as long as AcceptEnv is accepting LC_*. >  > This is not correct, glibc never accepted absolute pathnames in the > sense that they were resolved as absolute path names.  They were > always resolved relative to LOCPATH, with or without a leading > slash. >  > When the lack of conformance was reported as a glibc bug a couple of > years ago, the bug report was labeled as invalid: >  >   >  > We didn't want to break backwards compatibility here, so we > documented the existing behavior and just prohibited ".." pathname > components. This allowed us to treat this as a glibc vulnerability, > with a fairly simple and isolated fix (although the gettext part is > still pending).  Thanks for the explanation. This makes sense, and contrary to the claims in the bug report, I believe it's possible to claim this behavior is conforming, but only if you don't advertise localedef support.  I tend to agree that it's the most reasonable choice from a security standpoint, and necessary if you want to support configurations where the choice of locale is coming from a different privilege domain.  Rich  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      