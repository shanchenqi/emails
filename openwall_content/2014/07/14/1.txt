  oss-security - glibc locale issues            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Sun, 13 Jul From: Tavis Ormandy <taviso@...xchg8b.com> To: oss-security@...ts.openwall.com Subject: glibc locale issues  I just remembered another charset issues I had looked into but abandoned.  First of all, I think the need_so logic in gconv_trans is broken, but even if it worked there is an off by one error in __gconv_translit_find() (it does + 3 instead of + 3 + 1 in the allocation.   Proof:  $ CHARSET=//ABCDE pkexec  *** Error in `pkexec': malloc(): memory corruption: *** *** Error in `pkexec': malloc(): memory corruption: *** $ cp $(which pkexec) . $ CHARSET=//ABCDE valgrind --quiet ./pkexec  Invalid write of size 4    at __gconv_translit_find    by __gconv_open    by iconv_open (iconv_open.c:71)    by try_conversion    by g_iconv_open    by open_converter    by g_convert    by g_convert_with_fallback    by strdup_convert    by g_printerr    by main  Address is bytes inside a block of size alloc'd    at malloc (in    by __gconv_translit_find    by __gconv_open    by iconv_open (iconv_open.c:71)    by try_conversion    by g_iconv_open    by open_converter    by g_convert    by g_convert_with_fallback    by strdup_convert    by g_printerr    by main   I think this //foo syntax is supposed to allow you to open converters in /usr/lib/gconv, but because the need_so logic is broken it doesn't work. If it did, there would be another bug but I can't reach it right now.  Unrelated to glibc, but because pkexec links to glib, the built-in iconv/gconv conversion stuff is used by default. This allows you to setup aliases, which are of the form "charset <arbitrary alias>", for example:   $ echo "UTF-7 ThisIsAnAlias" > charset.alias $ CHARSET=ThisIsAnAlias CHARSETALIASDIR=$(pwd) pkexec  pkexec --version +AHw        --help +AHw        --disable-internal-agent +AHw        +AFs---user username+AF0 PROGRAM +AFs-ARGUMENTS...+AF0  (Notice the output is in UTF-7). I guess you can use this to figure out the contents of root owned files (via hard links or symlinks), but it has to be in the right format, and you have to guess the contents. Even then, you will just receive confirmation if you guess right.  This seems like a pretty minor flaw that I wouldn't normally bother mentioning, but as I'm tacking it onto a more serious bug and we're all discussing the LC_ALL thing anyway I don't mind so much ;-) Maybe someone can figure out how to turn this into something scary.  Tavis.   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      