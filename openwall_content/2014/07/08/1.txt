  oss-security - Re: CVE request for commons-beanutils: 'class' property is exposed, potentially leading to RCE            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Mon, 7 Jul (EDT) From: cve-assign@...re.org To: djorm@...hat.com Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: CVE request for commons-beanutils: 'class' property is exposed, potentially leading to RCE  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  >  > "A specialized BeanIntrospector implementation has been added which > allows suppressing properties. There is also a pre-configured instance > removing the class property from beans. Some notes have been added to > the user's guide." > > I think it would be appropriate to assign a CVE ID to this issue  As far as we can tell, these are the specific commons-beanutils changes for which you proposed to have a CVE ID:            Because the class property is undesired in many use cases there is    already an instance of SuppressPropertiesBeanIntrospector which is    configured to suppress this property.              public static final SuppressPropertiesBeanIntrospector SUPPRESS_CLASS =    new SuppressPropertiesBeanIntrospector(Collections.singleton("class"));              public class SuppressPropertiesBeanIntrospector implements BeanIntrospector   (Note that the last version of Apache Struts 1, version bundles in its lib directory. The codebase obviously does not have the recently introduced SuppressPropertiesBeanIntrospector class. To the extent that "The root cause of this flaw is that commons-beanutils exposes the class property by default," we have a situation with the same problem in two copies of the same original codebase, i.e., the copy bundled in from http://struts.apache.org/download.cgi and the copy found at the URL. In this context, the same problem cannot be represented by two different CVE IDs.)  The entire set of changes from the above http://svn.apache.org URLs makes it easier to use commons-beanutils safely, but it does not change the default configuration or behavior in any way, and is thus not eligible for a CVE ID.  In particular, the change has this documentation:     Adding this instance as BeanIntrospector to an instance of    PropertyUtilsBean suppresses the class property; it can then no    longer be accessed.  This is an additional step that would need to be followed for any currently shipped product that relies on commons-beanutils. Simply picking up version does not solve the problem. The product's source code must additionally be modified by (for example) changing or adding an addBeanIntrospector method call.  Points that you raise, such as:   - This would provide framework developers with the necessary    information and impetus to upgrade   - The commons-beanutils patch could be inherited by other frameworks    that may not have the resources to produce their own patch  are worthwhile, but the scope of the CVE project does not include IDs that exist only for a communication/outreach goal.  We are proceeding in this way:    - immediately REJECT because, at the level of     abstraction used by CVE, a second CVE ID is not required    - at the same time, change the description and     references to emphasize your important finding about the root     cause. For example, the new description may be     similar to:      Apache Commons BeanUtils, as distributed in     in Apache Struts 1.x through     and in other products requiring commons-beanutils through     does not suppress the class property, which allows remote     attackers to "manipulate" the ClassLoader and execute arbitrary     code via the class parameter, as demonstrated by the passing of     this parameter to the getClass method of the ActionForm object in     Struts 1.  If any other product makes a security announcement that they have added addBeanIntrospector(SuppressPropertiesBeanIntrospector.SUPPRESS_CLASS) or equivalent code as a change to the default behavior, then there can be an individual CVE ID for that product. However, if any other product simply makes a security announcement that they have decided to ship commons-beanutils -- but the class property remains exposed in the product as it is shipped and installed by default -- then a CVE ID would not be assigned.  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  =tvsw -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      