  oss-security - AW: Re: AW: O_CREAT|O_DIRECTORY on nonexisting file  expected behaviour?            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Mon, 15 Dec From: Fiedler Roman <Roman.Fiedler@....ac.at> To: "oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com> Subject: AW: Re: AW: O_CREAT|O_DIRECTORY on nonexisting file  expected behaviour?  > Von: Andy Lutomirski [mailto:luto@...capital.net] > > On AM, Fiedler Roman wrote: > >> Von: Matthew Daley [mailto:mattd- > > >> > >> On Thu, Nov 27, at AM, Fiedler Roman <Roman.Fiedler- > > >> wrote: > >>> (...) > >>> My test program was: > >>> > >>> #include <fcntl.h> > >>> #include <stdio.h> > >>> #include <sys/stat.h> > >>> > >>> int main(int argc, char **argv) { > >>>   int fd; > >>>   struct stat statBuf; > >>>   int result; > >>> > >>>   fd=open("xxx", O_RDWR|O_CREAT|O_DIRECTORY, > >>>   result=fstat(fd, &statBuf); > >>>   if(result) { > >>>     fprintf(stderr, "Stat failed\n"); > >>>     return(1); > >>>   } > >>>   fprintf(stderr, "New element type is %d\n", S_ISDIR(fd)); > >> > >> FWIW, this should probably be S_ISDIR(statBuf.st_mode). > > > > You are completely right, how stupid to miss that. I did not challenge the > > result, since it was the same as with "ls -al". > > > > Also with S_ISDIR(statBuf.st_mode), result is the same, at least on my > > side. > > > > > > > > #include <fcntl.h> > > #include <stdio.h> > > #include <sys/stat.h> > > > > int main(int argc, char **argv) { > >   int fd; > >   struct stat statBuf; > >   int result; > > > >   fd=open("xxx", O_RDWR|O_CREAT|O_DIRECTORY, > >   result=fstat(fd, &statBuf); > >   if(result) { > >     fprintf(stderr, "Stat failed\n"); > >     return(1); > >   } > >   fprintf(stderr, "New element type is %d\n", S_ISDIR(statBuf.st_mode)); > >   return(0); > > } > > > > > > $ ./test > > New element type is 0 > > > > Report it to linux-fsdevel@...r.kernel.org?  As not regarded as security problem, I just reported it as normal bug to devs, see    Download attachment "smime.p7s" of type "application/pkcs7-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      