  oss-security - Re: can we talk about secure time?            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Sat, 20 Dec From: Daniel Kahn Gillmor <dkg@...thhorseman.net> To: oss-security@...ts.openwall.com Subject: Re: can we talk about secure time?  On AM, Stuart Henderson wrote: > On Hanno Bรถck wrote: >> Is there any reason not to tell everyone to use tlsdate? >> What's the distro's take on this? afaik many ship ntp-based solutions >> by default. >  > That won't work well for OpenBSD; libressl uses a random value instead > of the timestamp.  It's not just libressl, there's a general push to do this:    https://tools.ietf.org/html/draft-mathewson-no-gmtunixtime-00  and the upcoming TLS 1.3 is likely to have the timestamp removed from the handshake entirely:     tlsdate can also fetch the Date: header from https connections, though, so that should make it possible to withstand the removal from the handshake.  Even if the time were to remain in the handshake (or we're ok with using the HTTP Date: header), tlsdate has a chicken-and-egg problem: if you want to actually verify the TLS connection,  you need to validate a signature from a valid certificate; but knowing the validity of any given certificate is dependent on knowing the correct time.  the default installation of tlsdate on debian jessie appears to list CAs in /etc/tlsdate/ca-roots/tlsdate-ca-roots.conf (all the usual suspects :/) so it doesn't appear to be using any targeted cryptographic keying material beyond the general public CA expectations.  if we're going to solve the network time situation with cryptographic mechanisms, using time-bounded certificates for validity seems problematic.  That said, for systems which need only rough precision and stronger network security (which is most systems), tlsdate does a much better job at the moment compared to ntp.  (ntp offers more precision and less security, which seems like the wrong tradeoff for most internet-connected devices)  	--dkg   Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      