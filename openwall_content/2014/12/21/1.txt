  oss-security - Re: can we talk about secure time?            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Sun, 21 Dec From: Florian Weimer <fw@...eb.enyo.de> To: oss-security@...ts.openwall.com Subject: Re: can we talk about secure time?  * Hanno Bรถck:  > Is there any reason not to tell everyone to use tlsdate?  Some folks want to run their servers within a few milliseconds of each other, and do not care so much about security or resiliency.  They may even use their own internal time source (either fed by the local standard time over NTP, or by GPS, CDMA or some other wireless time service such as DCF-77 in Germany).  Reconciling this with cryptography is certainly a challenge.  On the other hand, this does not have to be the default.  > What's the distro's take on this? afaik many ship ntp-based solutions > by default.  NTP (as in protocol), yes, ntp (as in implementation), perhaps not.  I think most desktop-based distributions could get away with something like tlsdate.  In contrast, servers with long-running connections and I/O polling loops often do not react gracefully to jumps in time.  (I once disconnected a few hundreds, if not thousands of users from an IRC server just by setting its time correctly.)  Sure, you can avoid that by using the appropriate kernel clock for timeout handling, but I have the impression that the correct clock changes every couple of years.  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      