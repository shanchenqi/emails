  oss-security - Re: CVE Request: static IV used in Percona XtraBackup            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Thu, 11 Sep From: Florian Weimer <fweimer@...hat.com> To: oss-security@...ts.openwall.com Subject: Re: CVE Request: static IV used in Percona XtraBackup  On PM, Florian Weimer wrote: > On AM, Marcus Meissner wrote: >> Hi, >> >> This came to our desk: >> >> >> >> constant IV used in CTR Mode, allowing plaintext retrieval >> attacks. > > Is suppose this is part of the fix. > > +void > +xb_crypt_init_iv() > +{ > +    uint seed = time(NULL); > +    srandom(seed); > +} > + > +void > +xb_crypt_create_iv(void* ivbuf, size_t ivlen) > +{ > +    size_t i; > +    ulong rndval; > + > +    for (i = 0; i < ivlen; i++) { > +        if (i % 4 == 0) { > +            rndval = (ulong) random(); > +        } > +        ((uchar*)ivbuf)[i] = ((uchar*)&rndval)[i % 4]; > +    } > +} > > This still risks keystream reuse because time() is fairly coarse. > > What's worse, on 64-bit big-endian architectures, it results in a > constant zero IV because RAND_MAX is not large enough to reach the upper > 32 bits in the first four bytes of the rndval variable.  It appears that both issues have been addressed by the switch to  libgcrypt for the encryption.  --  Florian Weimer / Red Hat Product Security  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      