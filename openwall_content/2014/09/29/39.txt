  oss-security - Re: Healing the bash fork            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 29 Sep From: John Haxby <john.haxby@...cle.com> To: oss-security@...ts.openwall.com Cc: ekobrin <ekobrin@...mai.com>, "chet.ramey" <chet.ramey@...e.edu>,         solar <solar@...nwall.com>, lcamtuf <lcamtuf@...edump.cx>,         fweimer <fweimer@...hat.com> Subject: Re: Healing the bash fork   On 29 Sep at David A. Wheeler <dwheeler@...eeler.com> wrote:  > That said, a lot of people are looking to find other attack paths.  Shellshock has pointed out > a kind of attack path that most people hadn't examined before. > I'd still like to see Christos Zoulas's approach included eventually, since that's an even stronger > countermeasure.  After all, if function imports only happen on request, then > non-requesters will have no problem. But I also understand that Zoulas's approach > is backwards-incompatible, and thus the bash folks are hesitant to apply it. > If that can't be added now, perhaps it could be added in a next release of bash?  Normally I’d be all for maintaining backwards compatibility: we spend a lot of time fixing bugs in a way that doesn’t break anything.  On this occasion, though, I think Christos Zoulos’s approach is both correct and needed.  jch  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      