  oss-security - Re: Fwd: Non-upstream patches for bash            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 29 Sep From: Sven Kieske <s.kieske@...twald.de> To: <oss-security@...ts.openwall.com> CC: <langsec-discuss@...l.langsec.org> Subject: Re: Fwd: Non-upstream patches for bash  On Solar Designer wrote: > Of course, what input is trusted vs. not may be unclear.  Apparently, 20 > years ago bash developers considered all env vars to be trusted input, > regardless of the names, which is how we got here.  Well, from a scientific point of view, this was already solved, if I'm interpreting bash correctly.  See page 12 in this paper: http://langsec.org/ShotgunParsersShmoo.pdf  To quote for the lazy:  'Input sanitization: “you can suppress ‘bad stuff’ in input+output to make it safe”  Reality: Halting problem. Deal with it.'  This should be true for all turing complete input languages (which I assume bash is capable of).  So you can not "filter" turing complete input languages unless you restrict your language so hard that you in fact create another class of languages, e.g. just allow regex, which would create a context-free language[1], which would circumvent whole classes of exploits.  Also cc'ing langsec-list, as they are interested in getting this stuff fixed in real applications.  [1]https://en.wikipedia.org/wiki/Context-free_language  --  Mit freundlichen Grüßen / Regards  Sven Kieske  Systemadministrator Mittwald CM Service GmbH & Co. KG Königsberger Straße 6 Espelkamp T: F: https://www.mittwald.de Geschäftsführer: Robert Meyer St.Nr.: USt-IdNr.: HRA AG Bad Oeynhausen Komplementärin: Robert Meyer Verwaltungs GmbH, HRB AG Bad Oeynhausen  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      