  oss-security - Re: vos tmp vuln            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Thu, 11 Sep (EDT) From: cve-assign@...re.org To: kseifried@...hat.com Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: vos tmp vuln  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  > >    def __init__(self, cache_db="/tmp/#vos_cached.db#"):  Nothing in your message shows that the MD5_Cache class is ever used with that /tmp pathname. Also, your message doesn't show whether or not the ultimate open call for that pathname uses O_EXCL|O_CREAT. The following might possibly be relevant to this missing information:    - the "md5Cache = md5_cache.MD5_Cache()" line in scripts/vsync    - https://github.com/python/cpython/blob/master/Modules/_sqlite/connection.c  Those two items may be enough to show that a symlink attack can occur, but we'll let you fill in the details.  For CVE assignments, it's not enough to show that the code contains a /tmp pathname that is apparently used for write access. In a typical case, it's also necessary to show that the piece of code is actually executed during use of the product, the /tmp pathname is actually used, and the specific open operation is unsafe in the presence of a symlink. All of this can be straightforward for a self-contained sh or possibly Perl script, but is often much less straightforward for Python.  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  =+bTm -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      