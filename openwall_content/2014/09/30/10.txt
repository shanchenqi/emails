  oss-security - Re: CVE request: various NodeJS module vulnerabilities            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Tue, 30 Sep (EDT) From: cve-assign@...re.org To: pabs3@...edaddy.net Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: CVE request: various NodeJS module vulnerabilities  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  > qs Denial-of-Service Memory Exhaustion > https://nodesecurity.io/advisories/qs_dos_memory_exhaustion  The description seems to suggest that there should be an arbitrary limit on the index value. That, by itself, might not be considered a vulnerability report; however, omitting the call to the compact function can probably be considered a security problem. Use for the commit.   > qs Denial-of-Service Extended Event Loop Blocking > https://nodesecurity.io/advisories/qs_dos_extended_event_loop_blocking  This has no references to the specific code changes, and the discussion suggests that this is a security enhancement -- adding new resource-limit functionality that hadn't existed before -- not a fix to the implementation of existing functionality. Accordingly, no CVE ID is currently being assigned.   > syntax-error potential for script injection > https://nodesecurity.io/advisories/syntax-error-potential-script-injection  This seems to have multiple possible interpretations of where the vulnerability is.  "In node Function() seems to be implemented in terms of eval(), so malicious code can execute even if the function returned by Function() was never called" doesn't seem to be a statement of an eval injection vulnerability affecting all versions. Instead, https://nodesecurity.io/advisories/syntax-error-potential-script-injection seems to be only about the commit. The affected product is only the syntax-error package from the http://www.npmjs.org/package/syntax-error web site.  Use   > send Directory Traversal > https://nodesecurity.io/advisories/send-directory-traversal  The CVE ID is already listed on that web page.   > Crumb CORS Token Disclosure > https://nodesecurity.io/advisories/crumb_cors_token_disclosure  Use   > Arbitrary JavaScript Execution in Bassmaster > https://nodesecurity.io/advisories/bassmaster_js_injection  Use  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  =oKCI -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      