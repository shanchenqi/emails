  oss-security - Re: remote code execution through bash            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 24 Sep From: Florian Weimer <fweimer@...hat.com> To: oss-security@...ts.openwall.com CC: chet.ramey@...e.edu Subject: Re: remote code execution through bash  On PM, Florian Weimer wrote: > Stephane Chazelas discovered a vulnerability in bash, related to how > environment variables are processed: trailing code in function > definitions was executed, independent of the variable name.  It was pointed out to me off-list that a patched bash will still import  functions from the environment, including from variable names which  override shell commands.  This is not an immediate vulnerability because  it requires setting environment variables under *specific* names.  If  you can do that, there are already many variables which can affect the  execution of shell scripts, and some of them offer direct code execution  because they are subject to command substitution (BASH_ENV, for  example).  The current vulnerability mainly exists because the name of  the environment variable does not matter at all.  My main concern with the current patch is that still exposes the bash  parser and function definition printer to attacks from the network. Bugs  in those fairly large components could cause another critical issue.  For hardening against such issues, I proposed a separate environment  variable with a well-known name, say BASH_FUNCDEFS, which lists the  names of environment variables which are to be imported as functions.  This would bring the attack requirements to the level which we have with  BASH_ENV now.  Removing the functionality completely is difficult because it is  actually used (search for âexport -fâ).  (If you find additional bugs, please do not discuss them here, but  follow the usual disclosure procedures.  Thanks.)  --  Florian Weimer / Red Hat Product Security  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      