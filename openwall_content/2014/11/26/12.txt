  oss-security - Re: O_CREAT|O_DIRECTORY on nonexisting file expected  behaviour?            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 26 Nov From: Eric Blake <eblake@...hat.com> To: oss-security@...ts.openwall.com Subject: Re: O_CREAT|O_DIRECTORY on nonexisting file expected  behaviour?  On AM, Fiedler Roman wrote: > Hello, >  > While trying to write a small python helper library for secure opening of > files, I found behaviour of following call unexpected because it created a > file instead of creating/failing in opening a directory: >  > open("xxx", O_RDONLY|O_CREAT|O_DIRECTORY, = 3  What does fstat say about the file type of the just-created fd 3?  Here's what POSIX has to say about the matter:  If the combination is supported, it MUST create a directory.  This is actually a nice extension if it is provided, as there is no other standard interface that can atomically create AND open a directory; remember, there is a minor TOCTTOU race between mkdir()/open(), although the effects of that race are not too horrible (it is sufficient to use O_DIRECTORY during the open as well as a quick readdir to confirm that the just-opened directory is still empty, to be reasonably sure that the race was not won by someone replacing the directory with something unintended).  On the other hand, the behavior is an extension, and historical implementations would fail (probably with EINVAL for invalid flag combination), so portable applications cannot rely on it working.  But if it succeeds, and did NOT create a directory, then it is in violation of POSIX.  --  Eric Blake   eblake redhat com    Libvirt virtualization library http://libvirt.org   Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      