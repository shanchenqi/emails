  oss-security - Re: Re: CVE request: lsyncd command injection            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Wed, 26 Nov From: Sven Schwedas <sven.schwedas@....at> To: CC: Ángel González <angel@...its.net>,   oss-security@...ts.openwall.com, mmcallis@...hat.com,   cve-assign@...re.org, axkibe@...il.com Subject: Re: Re: CVE request: lsyncd command injection  On Ángel González wrote: > On Mitre wrote: >>> There is a command injection flaw in lsyncd, a file change monitoring >>> and synchronization daemon: >>> >>> >>> >>> >>> >>> >> >> Use The scope of this CVE ID includes both: >> >>   1. code execution with ` characters or other characters that are >>      special to a shell >>   2. denial of service scenarios in which a user with write access >>      to a local directory uses special characters to make >>      synchronization fail (might have security relevance in some >>      scenarios) >> >> The MITRE CVE team does not have a Lua expert. The code change adds: >> >>   local path1 = event.path:gsub ('"', '\\"'):gsub ('`', '\\`'):gsub ('%$','\\%$') >>   local path2 = event2.path:gsub ('"', '\\"'):gsub ('`', '\\`'):gsub ('%$','\\%$') >> >> This does not seem to be the typical fix approach for unsafe input to >> a shell. Has anyone concluded that this is an incomplete fix that ought >> to be modified before the release? >  >  > It is indeed an incomplete fix: >  > * The gsub ('%$','\\%$') works in lua5.1, but under lua5.2 the second % > character makes lsyncd fail with the error "stdin:1: invalid use of '%' > in replacement string". Thus allowing a complete denial of service >  >  > * Not all metacharacters are filtered, so command execution is still > present. In particular, the escaped characters can be prefixed with a > backslash to bypass the filter. >  >  > The attached patch should hopefully solve these issues.  Thank you. I've tested the patch locally and it appears to be working correctly (mine was more a quick hack to get our own lsyncd instances running again). It also has been merged upstream:  >  Attached is the patch adapted for Wheezy's lsyncd  --  Mit freundlichen Grüßen, / Best Regards, Sven Schwedas Systemadministrator TAO Beratungs- und Management GmbH | Lendplatz 45 | A - Graz Mail/XMPP: sven.schwedas@....at | +43 http://software.tao.at  View attachment of type "text/x-patch" bytes)  Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      