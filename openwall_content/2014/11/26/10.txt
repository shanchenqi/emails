  oss-security - O_CREAT|O_DIRECTORY on nonexisting file expected behaviour?            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Wed, 26 Nov From: Fiedler Roman <Roman.Fiedler@....ac.at> To: "oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com> Subject: O_CREAT|O_DIRECTORY on nonexisting file expected behaviour?  Hello,  While trying to write a small python helper library for secure opening of files, I found behaviour of following call unexpected because it created a file instead of creating/failing in opening a directory:  open("xxx", O_RDONLY|O_CREAT|O_DIRECTORY, = 3  I call it unexpected, because man-page mentioned:         O_DIRECTORY               If pathname is not a directory, cause the open  to  fail. This               flag is Linux-specific, and was added in kernel version               to avoid denial-of-service problems if opendir(3) is called on a               FIFO or tape device.  The only topic I found dealing with such issue was [1].  Is the man page just wrong or what would be the correct behaviour of that call? Is it likely, that some other tool could also end up with that, illogic combination of flags, thus creating a file instead of opening a directory?  Or perhaps to use it to escape syscall auditing if creation of files with special flags would be monitored but directory creation is not?  [1]  DI Roman Fiedler Scientist Safety & Security Department Assistive Healthcare Information Technology  AIT Austrian Institute of Technology GmbH Reininghausstraße | Graz | Austria T | M | F roman.fiedler@....ac.at | http://www.ait.ac.at/  FN: i HG Wien  |  UID: http://www.ait.ac.at/Email-Disclaimer   Download attachment "smime.p7s" of type "application/pkcs7-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      