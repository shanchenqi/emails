  oss-security - Re: Re: strings / libbfd crasher            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 4 Nov From: Michal Zalewski <lcamtuf@...edump.cx> To: oss-security <oss-security@...ts.openwall.com> Subject: Re: Re: strings / libbfd crasher  > Thanks a lot for your explanation! The data for most things that you > describe seems to be available from valgrind so it could be scripted.  Sort of. Microsoft actually had a triage tool along these lines ("!exploitable" or something like that). It's always pretty coarse in the end, though.  This reminds me... Mateusz Jurczyk and Gynvael Coldwind were fuzzing ffmpeg on several thousand cores for a while and bumped into something around 1k seemingly distinctive crashes:   I can imagine that their initial enthusiasm has quickly waned when they realized how much effort it's going to take to triage all that and get it fixed. In this case, I think they had a pretty good relationship with the maintainers, which probably helped a lot =)  > That's after deduping by a call stack as available in valgrind output:-(  The codebase is kind of bad, but I'd imagine that there aren't hundreds of fundamentally distinctive bugs in libbfd that can be reached via strings or equivalent (unless the library is configured with all the exotic binary formats that are normally off).  There are definitely many instances where the same bad coding pattern is copied and pasted into several dozen places, though. For example, the srec bugs I initially bumped were essentially widespread throughout the entire file, with something like a dozen possible crash locations.  /mz  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      