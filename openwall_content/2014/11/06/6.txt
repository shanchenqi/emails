  oss-security - Re: libpam-oath: PAM module does not check whether 	strdup allocations succeeded            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Thu, 6 Nov From: Andreas Barth <aba@...us.org> To: oss-security@...ts.openwall.com Cc: Subject: Re: libpam-oath: PAM module does not check whether 	strdup allocations succeeded  Hi,  we have the following debian bug report about an security isuse in libpam-oath (source oath-toolkit, upstream web page http://www.nongnu.org/oath-toolkit/ ).  What is the appropriate process to get an CVE number on it? This issue is already public, as it is documented in the debian bug tracking system.   Andi  * Eero HĂ¤kkinen (eero17@...foot.com) > Package: libpam-oath > Version: > Severity: grave > Tags: security upstream patch >  > The OATH Toolkit PAM module does not check whether strdup allocations  > succeeded. This may result in null pointer dereference and application  > crash. >  > Depending on the use of the PAM module, this may be remotely exploitable.  > diff --git a/pam_oath/pam_oath.c b/pam_oath/pam_oath.c > index > --- a/pam_oath/pam_oath.c > +++ b/pam_oath/pam_oath.c > @@ @@ pam_sm_authenticate (pam_handle_t * pamh, >    char *query_prompt = NULL; >    char *onlypasswd = strdup ("");	/* empty passwords never match */ >   > +  if (!onlypasswd) > +    { > +      retval = PAM_BUF_ERR; > +      goto done; > +    } > + >    parse_cfg (flags, argc, argv, &cfg); >   >    retval = pam_get_user (pamh, &user, NULL); > @@ @@ pam_sm_authenticate (pam_handle_t * pamh, >      { >        free (onlypasswd); >        onlypasswd = strdup (password); > +      if (!onlypasswd) > +        { > +          retval = PAM_BUF_ERR; > +          goto done; > +        } >   >        /* user entered their system password followed by generated OTP? */ >    Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      