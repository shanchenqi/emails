  oss-security - Re: pam_timestamp internals            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 31 Mar From: Sebastian Krahmer <krahmer@...e.de> To: oss-security@...ts.openwall.com Subject: Re: pam_timestamp internals  Hi   On Mon, Mar 31, at Dmitry V. Levin wrote: > Hi, >  > On Mon, Mar 24, at Sebastian Krahmer wrote: > > When playing with some PAM modules for my own projects, I came > > across some implications of pam_timestamp (which is part of > > upstream linux-pam) that should probably be addressed. > >  > > Most importantly, there seems to be a path traversal issue: >  > Thanks, Sebastian!  The issue has been fixed in upstream linux-pam by commit >  Thanks for taking care. I was about to write a patch on my own, but seems not necessary anymore.  However, I think that  +	if (!strlen(tty) || !strcmp(tty, ".") || !strcmp(tty, "..")) {  could be insufficient. Any occurence of "." inside tty name should be evil. Above strcmp() matches exactly "." or "..", but you also want "../../" etc which should pass above check.  For the ruser check, the strchr(ruser, '/') safes this, but ".." occurence may also be treatened appropriately.  Sebastian    --   ~ perl self.pl ~ ~ krahmer@...e.de - SuSE Security Team   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      