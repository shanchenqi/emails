  oss-security - possible CVE requests: perltidy insecure temporary file usage            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Tue, 04 Mar From: Murray McAllister <mmcallis@...hat.com> To: oss-security@...ts.openwall.com CC: Subject: possible CVE requests: perltidy insecure temporary file usage  Good morning,  Jakub Wilk and Don Armstrong are discussing in  1) perltidy  creating a temporary file with default permissions instead of 2)  the use of tmpnam().   From that bug:       my $name = "perltidy.TMP";      if ( $^O =~ /win32|dos/i || $^O eq 'VMS' || $^O eq 'MacOs' ) {          return $name;      }  Would this be a separate issue on those platforms (predictable temporary  file in current working directory, run perltidy in attacker-controlled  directory...)? On this was only called  when using the "-html" option and a pod file as input, and looks to then  possibly open it insecurely:       else {          $tmpfile = Perl::Tidy::make_temporary_filename();      }      my $fh_tmp = IO::File->new( $tmpfile, 'w' );  Trying with a much newer version on Fedora, I received errors about  tmpnam not working and it didn't appear to be called, but haven't spent  time debugging that yet.  Regarding other platforms:       my $name = "perltidy.TMP";      if ( $^O =~ /win32|dos/i || $^O eq 'VMS' || $^O eq 'MacOs' ) {          return $name;      }      eval "use POSIX qw(tmpnam)";      if ($@) { return $name }  Is the POSIX module a core part of Perl, as in, the "return $name" part  will never be called?  Regarding the use of tmpnam, is it safe/not an issue if you open the  resulting filename with O_CREAT and O_EXCL (as perltidy does)?  I am not sure if these 	qualify for CVEs but I believe the  "perltidy.TMP" on Windows or Mac OS X etc would.  Thanks,  -- Murray McAllister / Red Hat Security Response Team  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      