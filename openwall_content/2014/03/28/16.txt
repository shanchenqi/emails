  oss-security - Re: CVE request: MediaWiki login csrf            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Sat, 29 Mar From: Jann Horn <jann@...jh.net> To: oss-security@...ts.openwall.com Subject: Re: CVE request: MediaWiki login csrf  On Fri, Mar 28, at Florent Daigniere wrote: > > > > This attack is somewhat specific to mediawiki since we allow users to > > > > define JavaScript that will be loaded on pages they visit while logged > > > > in... So the victim in this case would run the attacker's personal > > > > JavaScript. > > > > > > > > > > It still doesn't make sense. Anti-CSRF tokens are only useful if the > > > "malicious script" is not running with the same origin! > > > > >  > > I think I threw you off here-- this is just one reason why an attacker > > might want to do this. It's tangential to the actual flaw we fixed. >  > If mediawiki really allows users to define javascript that will be > loaded on pages they visit, that's a vulnerability... There's no way to > do that securely if the "content" and "application" data are served from > the same FQDN.  MediaWiki allows users to define Javascript that will be loaded on pages they visit, *but only for themselves*. If I can inject JS into the pages I view, that is not a vuln, just like it isn't a vuln that a user can execute JS in the context of any website by pasting it into a debug console in his browser.  However, this means that Login CSRF becomes a big security issue because it would allow me to add evil JS to my account and then force the browser of someone else to execute it in the context of the MediaWiki server's domain.  Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      