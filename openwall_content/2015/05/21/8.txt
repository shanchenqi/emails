  oss-security - Re: CVE request for vhost/scsi possible memory corruption.            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Thu, 21 May (EDT) From: cve-assign@...re.org To: wmealing@...hat.com Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: CVE request for vhost/scsi possible memory corruption.  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  > >  > -- vhost/scsi: potential memory corruption > This code in vhost_scsi_make_tpg() is confusing because we limit "tpgt" > to UINT_MAX but the data type of "tpg->tport_tpgt" and that is a u16. >  > I looked at the context and it turns out that in > vhost_scsi_set_endpoint(), "tpg->tport_tpgt" is used as an offset into > the vs_tpg[] array which has VHOST_SCSI_MAX_TARGET elements so > anything higher than then it is invalid.  I have made that the limit > now. >  > In vhost_scsi_send_evt() we mask away values higher than but now > that the limit has changed, we don't need the mask. > -- > The first check that slips past is here: >  > -- drivers/vhost/scsi.c - vhost_scsi_make_tpg() >  >  if (vs->vs_tpg && vs->vs_tpg[tpg->tport_tpgt]) >  > My theory is that the possible memory corruption happens later: >  > -- drivers/vhost/scsi.c - vhost_scsi_make_tpg() >  >   // sets this null pointer, to "tpg" value. >   vs_tpg[tpg->tport_tpgt] = tpg; >  > When vs_tpg[tpg->tport_tpgt] = 0  Nobody else has offered an alternative theory or shown that it is unexploitable, so probably a CVE ID is reasonable. Use  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  =voYF -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      