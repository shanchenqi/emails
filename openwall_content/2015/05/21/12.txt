  oss-security - Re: CVE request: ssl.match_hostname(): sub string wildcard should not match IDNA prefix            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Thu, 21 May (EDT) From: cve-assign@...re.org To: mprpic@...hat.com Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: CVE request: ssl.match_hostname(): sub string wildcard should not match IDNA prefix  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  > >  Our perspective on is that the "multiple wildcards" issue can have a CVE ID but the "IDNA prefix" issue probably cannot.  RFC says "Names may contain the wildcard character * which is considered to match any single domain name component or component fragment. E.g., *.a.com matches foo.a.com but not bar.foo.a.com. f*.com matches foo.com but not bar.com." It isn't completely clear whether multiple instances of '*' such as *.*.com were considered valid. Also, says "For security reasons matching rules like *.*.com should be not supported." Use for this issue.  The IDNA report seems to be about wanting to change the specification from RFC to RFC mentions that the old behavior 'can result into false positive matches for a rule like "x*.example.de"' but, in practice, it seems unlikely that anyone would have a need for rules beginning with x* or xn* or xn-* (these are essentially the only three cases). It seems more likely that someone would have created a rule for xn--*.example.de because they specifically wanted to match all IDNA names but did not want to match www.example.de (which might be separately administered). In other words, the IDNA aspect of doesn't seem to be a vulnerability fix; it seems to be a policy change that, relative to existing deployments, sometimes strengthens security and sometimes weakens security. The policy change (i.e., adopting a more recent RFC) does, of course, seem appropriate for new deployments. Similarly, says "I won't apply this for 3.2 since at this point a behavior change might do more harm than good." In any case, because RFC was intended when the code was written, we feel that 'false positive matches for a rule like "x*.example.de"' is not a vulnerability and should not have a CVE.  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  iQEcBAEBAgAGBQJVXielAAoJEKllVAevmvmsOiAH/ihqkIzpYITVkDisLMRfcvyz =68Zt -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      