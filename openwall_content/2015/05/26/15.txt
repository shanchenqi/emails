  oss-security - Re: [PATCH v2 4/4] ozwpan: unchecked signed subtraction leads to DoS            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Tue, 26 May From: Dan Carpenter <dan.carpenter@...cle.com> To: "Jason A. Donenfeld" <Jason@...c4.com> Cc: oss-security <oss-security@...ts.openwall.com>,         linux-kernel@...r.kernel.org,         Shigekatsu Tateno <shigekatsu.tateno@...el.com>,         Greg Kroah-Hartman <gregkh@...uxfoundation.org>,         devel@...verdev.osuosl.org Subject: Re: [PATCH v2 4/4] ozwpan: unchecked signed subtraction leads to DoS  On Tue, May 26, at Jason A. Donenfeld wrote: > diff --git a/drivers/staging/ozwpan/ozusbsvc1.c b/drivers/staging/ozwpan/ozusbsvc1.c > index > --- a/drivers/staging/ozwpan/ozusbsvc1.c > +++ b/drivers/staging/ozwpan/ozusbsvc1.c > @@ @@ static void oz_usb_handle_ep_data(struct oz_usb_ctx *usb_ctx, >  			struct oz_multiple_fixed *body = >  				(struct oz_multiple_fixed *)data_hdr; >  			u8 *data = body->data; > -			int n; > +			unsigned int n; >  			if (!body->unit_size) >  				break; >  			n = (len - sizeof(struct oz_multiple_fixed)+1) >  				/ body->unit_size; > +			if (n > len / body->unit_size) > +				break;  You sure do like wrapping to a high value and testing the result for wrapping instead of validating before doing the subtraction...  regards, dan carpenter   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      