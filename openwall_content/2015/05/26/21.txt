  oss-security - Re: Re: hwclock(8) SUID privilege escalation            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Tue, 26 May From: Tavis Ormandy <taviso@...gle.com> To: oss-security@...ts.openwall.com Subject: Re: Re: hwclock(8) SUID privilege escalation  On Tue, May 26, at AM, Stephane Chazelas <stephane.chazelas@...il.com> wrote: > > [...] >> Please note that this is possible on Debian-derived (and therefore Ubuntu), >> because /bin/sh is provided by dash which does NOT make use >> of privmode (does not drop privileges if ruid != euid, unlike bash), >> which is a very stupid idea. >> >> privmode is surprisingly effective at mitigating some common vulnerability >> classes and misconfigurations, and it has been around since mid 90's. >> Indeed, Chet Ramey (bash author and maintainer) explains that the >> purpose of this is to prevent "bogus system(3)/popen(3) calls in >> setuid executables" > [...] > > No, bash does NOT drop privileges if ruid != euid when called as > sh either . If it were, it would break those commands that use > system()/popen() from suid/sgid executables (which arguably they > shouldn't be doing) and expect the euid/egid to be preserved. >  Yes it does, you are most likely a Debian user. Debian patched bash to add the behavior you describe back because someone complained it broke uucp delivery in (see debian bug  That is why popen() in setuid programs are usually only exploitable on Debian/Ubuntu, see this link for more discussion  Tavis.  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      