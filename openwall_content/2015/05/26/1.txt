  oss-security - CVE request: vulnerability in the kernel tty subsystem.            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Tue, 26 May (EDT) From: Wade Mealing <wmealing@...hat.com> To: OSS Security List <oss-security@...ts.openwall.com> Cc: cve-assign@...re.org Subject: CVE request: vulnerability in the kernel tty subsystem.  Gday,  An issue was discovered in the linux kernel's tty subsystem handling during shutdown. The flaw was that a new tty thread could hold a reference to the ldisc lock used during the shutdown phase in the original thread and create a deadlock.  This race occurs on hangup of tty.  It races and hangs on ldsem_down_write on a semaphore  that is being aquired by a new reader(CPU 1).  The new reader/writer is sleeping in ldsem_down_read() and the hangup is sleeping in ldsem_down_write().  The deadlock can occur under these conditions.     CPU 0                                   |  CPU 1 					   | _raw_spin_unlock_irq                       | down_write_failed                          | ldsem_down_write <-- here                  | ldsem_down_read  <--- here tty_ldisc_lock_pair_timeout                | tty_ldisc_ref_wait tty_ldisc_lock_pair_timeout                | tty_write tty_ldisc_hangup                           | redirected_tty_write __tty_hangup                               | tty_write disassociate_ctty                          | o_loop_readv_writev do_exit                                    | do_readv_writev                                            | SyS_writev   This section of code was re-written upstream by creating a read/write semaphore to specially to handle ldisc, ldsem ( ).    This issue was reproduced on a system under load when testing the reproducer for on a system that already has this issue fixed.  No root permissions are required to recreate the deadlock.  I would like to request a CVE for this issue.  Thanks,  Wade Mealing Red Hat Product Security   References:   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      