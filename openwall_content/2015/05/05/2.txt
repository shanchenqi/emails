  oss-security - Re: PHP and some == wonkiness            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 05 May From: Florian Weimer <fweimer@...hat.com> To: oss-security@...ts.openwall.com Subject: Re: PHP and some == wonkiness  On PM, Pádraic Brady wrote:  > It all boils down to PHP loose typing/type juggling for == and strict > type comparison for ===. The first option will trigger a set of rules > capable of converting strings into floats or integers, based on > whether both strings are representative of a float (i.e. your > example), or where one of the values being compared is already an > integer/float. Unfortunately, it is indeed a common weakness to not > use strict comparisons in security related code. For example, Laravel > had a recent issue in comparing CSRF tokens where passing in a zero > always passed the check from this mistake,  Oh.  But the current case apparently needs a string from a very specific set.  Do we know the digests which trigger this?  If it has to be "0e" followed by only digits on both sides, it is somewhat unlikely that you have a reference string with this property, especially if SHA-1 is used (around if I'm not mistaken).  --  Florian Weimer / Red Hat Product Security  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      