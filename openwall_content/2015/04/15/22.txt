  oss-security - Re: Re: Problems in automatic crash analysis frameworks            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Wed, 15 Apr From: Tavis Ormandy <taviso@...gle.com> To: oss-security@...ts.openwall.com Subject: Re: Re: Problems in automatic crash analysis frameworks  On Wed, Apr 15, at PM, Tavis Ormandy <taviso@...gle.com> wrote: > On Wed, Apr 15, at AM, Jakub Filak <jfilak@...hat.com> wrote: >> Hello, >> >> I have a question regarding the ABRT vulnerabilities. I don't particularly understand how an attacker can use /proc/pid/exe symlink to force ABRT to read an arbitrary file if the symlink cannot be changed and kernel refuses to create the process if the symlink's target is not executable. >> >>> This code trusts the /proc/pid/exe symlink, even though it is possible >>> to link it anywhere you want. >>> >>> >>> >>>        sprintf(buf, "/proc/%lu/exe", (long)pid); >>>        int src_fd_binary = open(buf, O_RDONLY); /* might fail and >>>                                                    return -1, it's ok */ >> >> Thank you for clarifying this for me. >> > > My description was incorrect, It can't be an arbitrary file, just a > file you have execute but not read permission. > > Tavis.  Apparently I'm wrong again, spender points out it may still be possible.   Tavis.  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      