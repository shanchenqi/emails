  oss-security - wpa_supplicant P2P SSID processing vulnerability            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Wed, 22 Apr From: Jouni Malinen <j@...fi> To: oss-security@...ts.openwall.com Subject: wpa_supplicant P2P SSID processing vulnerability  Published: April 22, Identifier: Latest version available from:   Vulnerability  A vulnerability was found in how wpa_supplicant uses SSID information parsed from management frames that create or update P2P peer entries (e.g., Probe Response frame or number of P2P Public Action frames). SSID field has valid length range of octets. However, it is transmitted in an element that has a 8-bit length field and potential maximum payload length of octets. wpa_supplicant was not sufficiently verifying the payload length on one of the code paths using the SSID received from a peer device.  This can result in copying arbitrary data from an attacker to a fixed length buffer of 32 bytes (i.e., a possible overflow of up to bytes). The SSID buffer is within struct p2p_device that is allocated from heap. The overflow can override couple of variables in the struct, including a pointer that gets freed. In addition about bytes (the exact length depending on architecture) can be written beyond the end of the heap allocation.  This could result in corrupted state in heap, unexpected program behavior due to corrupted P2P peer device information, denial of service due to wpa_supplicant process crash, exposure of memory contents during GO Negotiation, and potentially arbitrary code execution.  Vulnerable versions/configurations  wpa_supplicant with CONFIG_P2P build option enabled  Attacker (or a system controlled by the attacker) needs to be within radio range of the vulnerable system to send a suitably constructed management frame that triggers a P2P peer device information to be created or updated.  The vulnerability is easiest to exploit while the device has started an active P2P operation (e.g., has ongoing P2P_FIND or P2P_LISTEN control interface command in progress). However, it may be possible, though significantly more difficult, to trigger this even without any active P2P operation in progress.   Acknowledgments  Thanks to Google security team for reporting this issue and smart hardware research group of Alibaba security team for discovering it.   Possible mitigation steps  - Merge the following commits to wpa_supplicant and rebuild it:    P2P: Validate SSID element length before copying it    This patch is available from  - Update to wpa_supplicant v2.5 or newer, once available  - Disable P2P (control interface command "P2P_SET disabled 1" or   "p2p_disabled=1" in (each, if multiple interfaces used) wpa_supplicant   configuration file)  - Disable P2P from the build (remove CONFIG_P2P=y)  --  Jouni Malinen                                            PGP id  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      