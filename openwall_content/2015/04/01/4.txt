  oss-security - Signature Bypass in several JSON Web Token Libraries (CVEs Needed?)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Tue, 31 Mar From: "Jeremy Spilman" <jeremy@...link.co> To: "oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com> Subject: Signature Bypass in several JSON Web Token Libraries (CVEs Needed?)  Tim McLean discovered two serious (related) vulnerabilities common to   several widely used JSON Web Token (JSW) libraries which he wrote about   here [1] a month ago, and again today here [2].  A JWT is base64 encoded header, payload, and signature, where the header   specifies the signature algorithm and an expiration timestamp.  The validation libraries running server side provide APIs such as;     verify(string token, string secretKey)  The two critical bugs;  - Even when a secretKey was provided to the API, if the data in 'token'   decoded to a header specifying a signature algorithm of *none*, the API   would still return success. Meaning an attacker could just strip the   signature, change the header, and bypass the signature validation   server-side.  - If the secretKey was expected to be a RSA public key, but the attacker   changed the header to indicate a signature algorithm of HMAC, the RSA   public key would be used as the signing secret.  Effected libraries include but probably not limited to:  namshi-jose:   python-jwt:   node-jsonwebtoken:   pyjwt:   php-jwt: Not yet patched? jsjwt: Not yet patched?  I think these are all (possibly independently) CVE worthy... I requested   Tim file CVEs here [3], but I haven't seen any to-date. I'm not sure about   requesting CVEs on someone else's work, I'm just an interested bystander   here.   [1] - [2] -   [3] -   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      