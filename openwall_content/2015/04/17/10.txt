  oss-security - Re: Problems in automatic crash analysis frameworks            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 17 Apr From: Tavis Ormandy <taviso@...gle.com> To: "oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com> Subject: Re: Problems in automatic crash analysis frameworks  On Friday, April 17, Florian Weimer <fweimer@...hat.com> wrote: > A quick update on the abrt situation. > > Most of these issues center around file ownership and contents under > so-called problem directories (subdirectories of /var/tmp/abrt or > /var/spool/abrt).  Problem directories are owned by root and have mode > on Red Hat Enterprise Linux 6, which suggest that with this older > abrt version, exploits are only possible if uploads are enabled in some > way (see below). > > abrt writes coredumps to existing world-writable files owned by other > users, disclosing coredump contents across user boundaries.  This > affects a default configuration, but requires an application to crash > while its current directory is world-writable, so exploiting it seems > difficult.  We have assigned > > > By default, abrt automatically runs post-crash actions on problem > directories (event handling scripts).  These scripts have symlink issues > and other race conditions.  This is more or less a repeat of the main > abrt-hook-ccpp issue Tavis' reported, but at a higher level.  It means > that hardening the file system access in abrt-hook-ccpp is insufficient. >  We have assigned > > > The default event handling scripts add a sosreport file (containing > files which are not world-readable) and user-controlled excerpts from > /var/log/messages to the user-readable problem directory.  This is an > information disclosure flaw, > > > abrt has an upload functionality which allows, after non-default but > documented/supported configuration, other systems to upload crash > reports.  This indirectly allows one to create a problem directory with > symbolic links and unintended permissions, enabling further attacks.  We > treat this as a vulnerability, > > > As explained in the parallel thread, abrt needs to disable user coredump > files in fs.suid_dumpable=2 mode, like the kernel does, and we don't > treat this as a vulnerability: > > > It makes sense to have separate abrt-hook-ccpp implementation that does > not write user coredump files.  It would not have to write to arbitrary > file system locations, so it can be restricted with SELinux.  This > enhancement is tracked as: > > > There is a backlog of other issues for which I have not yet filed bugs. >  Appreciate the updates Florian.  Tavis   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      