  oss-security - Re: Problems in automatic crash analysis frameworks            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 23 Apr From: Florian Weimer <fweimer@...hat.com> To: oss-security@...ts.openwall.com Subject: Re: Problems in automatic crash analysis frameworks  On PM, Florian Weimer wrote: > A quick update on the abrt situation.  Another update.  We now have a public tracking bug listing the issues:     Previously, all the bugs were public, but it was difficult to find them.  The main fix is to switch problem directory ownership to root:abrt, and move the directory tree back to /var/spool/abrt, where it was in Red Hat Enterprise Linux 6.  This should make it impossible to exploit the race conditions in the libreport event handling scripts:  The other abrt-hook-ccpp fixes are still needed, though.  The problem report directory handling code in libreport is racy, in part by design.  This should be fixed by the changed problem directory ownership, so we did not assign a separate CVE ID for this.  There appear to be some buffer overflow/stack overflow issues in the problem directory code in libreport.  With the problem directory permission changes, this should no longer cross a trust boundary.  In addition, we have identified several issues in abrt-dbus.  The ChownProblemDir, DeleteElement, and DeleteProblem methods can be abused to modified unintended parts of the file system because of missing input validation on the problem directory argument to those D-Bus method calls.  For ChownProblemDir, this will allow privilege escalation to root.   The NewProblem, GetInfo and SetElement methods have directory traversal vulnerabilities which allow local attackers to read and write arbitrary files on the system.  For NewProblem, it's the analyzer name which is folded into a path, unchecked; GetInfo and SetElement do not check the file name in the problem report directory.    I'm still unsure about the libreport event handling scripts.  Some of them are clearly supposed to run with a user environment because they reference files such as ~/.vimrc.  I have not figured out yet how this mechanism is supposed to work.  --  Florian Weimer / Red Hat Product Security  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      