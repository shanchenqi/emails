  oss-security - Pharaoh - PHAR Comparison Tool            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Sun, 19 Apr From: Scott Arciszewski <scott@...agonie.com> To: oss-security@...ts.openwall.com Subject: Pharaoh - PHAR Comparison Tool  Hi everyone,  We developed a tool to compare executable PHP Archives (.phar files), which you may find at https://github.com/paragonie/pharaoh  Previously, there wasn't a tool available that specifically worked with .phar files, which differ from just a .zip or .tar in that they have an executable stub which allows you to do something like this:      <?php     include "vendor/acme/deliverable.phar";     $foo = \Acme\Deliverable\Foo();     $bar->process($foo);  Pharaoh is useful for open source projects that distribute a .phar (phpunit, composer, etc.). Since many of these projects do not sign their .phar, if their server gets hacked it would be trivial to slip in a bit of extra code in the stub (add a public key to ~/.ssh/authorized_keys, etc).  The idea is that someone can download the .phar from their website, build the same one from source, then use Pharaoh to compare them and detect this malicious tampering. (And then, hopefully, blow the whistle to disrupt the campaign.)  We hope that someone finds this useful.  Scott Arciszewski Chief Development Officer Paragon Initiative Enterprises <https://paragonie.com>   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      