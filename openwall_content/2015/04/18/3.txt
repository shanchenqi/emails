  oss-security - Re: USERNS allows circumventing MNT_LOCKED - Linux kernel            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Sat, 18 Apr (EDT) From: cve-assign@...re.org To: eric@...disch.us Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: USERNS allows circumventing MNT_LOCKED - Linux kernel  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  > In October Andrey Vagin reported[1] to the Linux Containers list that > it would be possible to use user namespaces to circumvent MNT_LOCKED and > allow unprivileged users to access the directory structure underneath of > mounts. A PoC was also produced and is public. >  > Patches are now available and proposed to Linus[2]. >  > [1] https://groups.google.com/forum/#!topic/linux.kernel/HnegnbXk0Vs > [2]  Use for the    "The semantics of MNT_LOCKED are that you aren't allowed to see what    is beneath. So if you can get under there even by unsharing the mount    namespace it is an implementation bug in MNT_LOCKED."  issue in the post.  The scope of does not include the entire set of issues discussed in the post. In particular, a different part of that page already has a CVE mapping in the post.  There currently isn't a CVE ID for the     "While investigating this issue I also found an issue with     __detach_mounts. The code was unnecessarily and incorrectly     triggering mount propagation. Resulting in too many mounts going     away when a directory is deleted, and too many cpu cycles are     burned while doing that."  finding (which seems to be in the post). If an unprivileged user could have launched a worthwhile attack by deleting a directory in certain circumstances, then we can assign a separate CVE ID for that issue.  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  =xBBT -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      