  oss-security - Re: Possible CVE Request: Wordpress security release            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 28 Apr (EDT) From: cve-assign@...re.org To: carnil@...ian.org Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: Possible CVE Request: Wordpress security release  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  Here are CVE IDs for some of the vulnerabilities fixed in either or   > >  > WordPress versions and earlier are affected by a critical > cross-site scripting vulnerability, which could enable anonymous users > to compromise a site. This was reported by Cedric Van Bockhaven and > fixed by Gary Pendergast, Mike Adams, and Andrew Nacin of the > WordPress security team.  Use We don't know whether this is related to, for example, the change. Our expectation is that this is not related to the change, because the announcement says "Four hardening changes, including better validation of post titles within the Dashboard." (There are currently no CVE IDs being assigned for the "Four hardening changes.")   > In WordPress 4.1 and higher, files with invalid or unsafe names could > be uploaded. Discovered by Michael Kapfer and Sebastian Kraemer of > HSASec.  We feel that there isn't yet enough information available to determine the correct number of CVE IDs. This could possibly be related to (if wp_check_filetype had been using a problematic regular expression that resulted in incorrect conclusions about safe file extensions), or (if the issue was in the Plupload codebase), or both.   > In WordPress 3.9 and higher, a very limited cross-site scripting > vulnerability could be used as part of a social engineering attack. > Discovered by Jakub Zoczek.  Use We don't know whether this is related to, for example, the change.   > Some plugins were vulnerable to an SQL injection vulnerability. > Discovered by Ben Bidner of the WordPress security team.  We feel that there isn't yet enough information available to determine the correct number of CVE IDs. This could possibly be related to the and changes. In general, it seems possible that one change to the validation of SQL statements resolved SQL injection vulnerabilities affecting the use of plugins in one set of WordPress versions, and another change to the validation of SQL statements resolved SQL injection vulnerabilities affecting the use of plugins in a different set of WordPress versions.   >  > Due to a now-fixed ambiguity in the documentation for the > add_query_arg() and remove_query_arg() functions, many plugins were > using them incorrectly, allowing for potential XSS attack vectors in > their code.  We feel that this documentation ambiguity isn't necessarily a vulnerability in the WordPress product itself. There seems to be related documentation of add_query_arg within the wp-includes/functions.php file. If the vendor decides to change the documentation at https://core.trac.wordpress.org/browser/trunk/src/wp-includes/functions.php and wants a CVE ID for that, then we would assign one.   > > >  > a cross-site scripting vulnerability, which could enable commenters to > compromise a site. The vulnerability was discovered by Jouko Pynnonen.  > WPDB: Sanity check that any strings being stored in the DB are not too > long to store correctly.  Use  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  =GzWO -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      