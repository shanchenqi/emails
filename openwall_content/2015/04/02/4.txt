  oss-security - Re: kernel: infiniband: uverbs: unprotected physical  memory access            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 02 Apr From: Yann Droneaud <ydroneaud@...eya.com> To: Shachar Raindel <raindel@...lanox.com> Cc: "oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com>,  	"<linux-rdma@...r.kernel.org> (linux-rdma@...r.kernel.org)" 	 <linux-rdma@...r.kernel.org>, linux-kernel@...r.kernel.org,  	"stable@...r.kernel.org" 	 <stable@...r.kernel.org> Subject: Re: kernel: infiniband: uverbs: unprotected physical  memory access  Hi,  Le mercredi 18 mars Ă  Shachar Raindel a ĂŠcrit : > Hi, >  > It was found that the Linux kernel's InfiniBand/RDMA subsystem did not > properly sanitize input parameters while registering memory regions > from user space via the (u)verbs API. A local user with access to > a /dev/infiniband/uverbsX device could use this flaw to crash the > system or, potentially, escalate their privileges on the system. >  > The issue has been assigned >  > The issue exists in the InfiniBand/RDMA/iWARP drivers since Linux > Kernel version >  > Mellanox OFED fixes the issue. Available from: > http://www.mellanox.com/page/products_dyn?product_family=26&mtag=linux_sw_drivers  >  > RedHat errata: > Canonical errata: > Novell (Suse) bug tracking: >  >  > The following patch fixes the issue: >  > --------------- 8< ------------------------------ >  > From Mon Sep 17 > From: Shachar Raindel <raindel@...lanox.com> > Date: Sun, 04 Jan > Subject: [PATCH] IB/core: Prevent integer overflow in ib_umem_get address arithmetic >  > Properly verify that the resulting page aligned end address is larger > than both the start address and the length of the memory area > requested. >  > Both the start and length arguments for ib_umem_get are controlled by > the user. A misbehaving user can provide values which will cause an > integer overflow when calculating the page aligned end address. >  > This overflow can cause also miscalculation of the number of pages > mapped, and additional logic issues. >  > Signed-off-by: Shachar Raindel <raindel@...lanox.com> > Signed-off-by: Jack Morgenstein <jackm@...lanox.com> > Signed-off-by: Or Gerlitz <ogerlitz@...lanox.com> > --- >  > diff --git a/drivers/infiniband/core/umem.c b/drivers/infiniband/core/umem.c > index > --- a/drivers/infiniband/core/umem.c > +++ b/drivers/infiniband/core/umem.c > @@ @@ >  	if (dmasync) >  		dma_set_attr(DMA_ATTR_WRITE_BARRIER, &attrs); >   > +	/* > +	 * If the combination of the addr and size requested for this memory > +	 * region causes an integer overflow, return error. > +	 */ > +	if ((PAGE_ALIGN(addr + size) <= size) || > +	    (PAGE_ALIGN(addr + size) <= addr)) > +		return ERR_PTR(-EINVAL); > +  Can access_ok() be used here ?           if (!access_ok(writable ? VERIFY_WRITE : VERIFY_READ,                         addr, size))                   return ERR_PTR(-EINVAL);   >  	if (!can_do_mlock()) >  		return ERR_PTR(-EPERM); >   Regards.  --  Yann Droneaud OPTEYA    Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      