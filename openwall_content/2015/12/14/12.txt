  oss-security - Re: User man Local Root Exploit/Linux Kernel setgid  Directory Privilege Escalation/PAM Owner Check Weakness            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 14 Dec From: halfdog <me@...fdog.net> To: oss-security@...ts.openwall.com Subject: Re: User man Local Root Exploit/Linux Kernel setgid  Directory Privilege Escalation/PAM Owner Check Weakness  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  Dag-Erling SmĂ¸rgrav wrote: > halfdog <me@...fdog.net> writes: >>  >>  >> > >>  > And the PAM issue?  That's the most questionable. Should it be expected from the pam libraries to refuse authentication, when the owner/group of /etc/shadow is completely off? Of course, attacker with possibility to modify ownership of a single file would also find numerous other targets to work on, but should it be so easy?  But even when deciding to change behavior, e.g. forcing libpam checks on shadow to be root/[somegroup] and mode, could that break other existing systems, introduce new (availability) risks?  hd  - --  http://www.halfdog.net/ PGP: AE98 B91F FE88 2BD8 feed a bee -----BEGIN PGP SIGNATURE----- Version: GnuPG v1  =ytMn -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      