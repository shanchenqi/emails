  oss-security - Re: CVE Request: Squashfs 4.2 Race Condition            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 31 Dec From: Jihyeok Seo <limeburst@...ber.fsf.org> To: cve-assign@...re.org Cc: oss-security@...ts.openwall.com Subject: Re: CVE Request: Squashfs 4.2 Race Condition  Privilege boundary crossing does not necessarily happen. However, since unsquashfs is often run with sudo (Squashfs filesystem containing files owned by root), it is a possibility. I do not know if this bug can lead to code execution.  However, firmware upgrade procedures (remote or local) which uses unsquashfs, on devices such as network routers, could be crashed with an untrusted Squashfs filesystem image and lead to denial of service.  > On Dec 31, at AM, cve-assign@...re.org wrote: >  > -----BEGIN PGP SIGNED MESSAGE----- > Hash: >  >> A malformed Squashfs filesystem can cause a race condition in unsquashfs. >>  >> This is caused by the decompress thread attempting to access a shared >> queue, resulting in a SIGSEGV. >>  >>    struct cache_entry *entry = queue_get(to_deflate); >  > Do you have any information about a scenario in which this bug crosses > a privilege boundary? >  > Do you mean that, because of the details of the SIGSEGV, there's a > reasonable likelihood of code execution when a victim runs unsquashfs > on an untrusted SquashFS filesystem image? >  > Other possibilities in which there could be a CVE ID assigned include: >  >  - if the affected unsquashfs code were also available as a library >    that was used to build a program that was supposed to remain >    running to handle multiple unsquash operations >  >  - if the affected unsquashfs code were also used to support a >    SquashFS filesystem that was mounted on a system, and an >    unprivileged user could crash the system by reading from the >    filesystem >  >  - (again for this use of the affected code) if a system exists that >    automatically mounts SquashFS filesystems found on removable >    media, and inserting removable media could crash the system >  >  - (again for this use of the affected code) maybe a scenario in >    which the SIGSEGV ultimately leads to disclosure of private data >    that wasn't contained in the SquashFS filesystem >  > - --  > CVE assignment team, MITRE CVE Numbering Authority > M/S > Burlington Road, Bedford, MA USA > [ PGP key available through http://cve.mitre.org/cve/request_id.html ] > -----BEGIN PGP SIGNATURE----- > Version: GnuPG v1 >  > > > > > > > > > > > > > =riOK > -----END PGP SIGNATURE-----   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      