  oss-security - Re: CVE request libtiff: out-of-bounds read in CIE Lab image format            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 25 Dec From: Solar Designer <solar@...nwall.com> To: oss-security@...ts.openwall.com Subject: Re: CVE request libtiff: out-of-bounds read in CIE Lab image format  Hi,  Unfortunately, the text/plain version of zzf's message was badly misformatted.  I've included below the result of processing of the text/html portion, which is actually readable.  Alexander  zuozhi.fzz@...baba-inc.com wrote: > If the data of image is packed(e.g., TIFFDirectory.td_samplesperpixel == 1, > TIFFDirectory.td_bitspersample == 8), a pixel only owns one byte. But in the > implementation of putcontig8bitCIELab, it eats 3 bytes per pixel. This will > lead to an out-of-bounds read vulnerability. >  > vuln code in tif_getimage.c, libtiff >  > DECLAREContigPutFunc(putcontig8bitCIELab) > { >         float X, Y, Z; >         uint32 r, g, b; >         (void) y; >         fromskew *= 3; >         while (h-- > 0) { >                 for (x = w; x-- > 0;) { >                         TIFFCIELabToXYZ(img->cielab, >                                         (unsigned char)pp[0], >                                         (signed char)pp[1], >                                         (signed char)pp[2], >                                         &X, &Y, &Z); >                         TIFFXYZToRGB(img->cielab, X, Y, Z, &r, &g, &b); >                         *cp++ = PACK(r, g, b); >                         pp += 3; >                 } >                 cp += toskew; >                 pp += fromskew; >         } > } >  > I use the tutorial code from http://www.remotesensing.org/libtiff/libtiff.html > to test that, and poc is in the attachment. >  >     #include "tiffio.h" >     main(int argc, char* argv[]) >     { >         TIFF* tif = TIFFOpen(argv[1], "r"); >         if (tif) { >             TIFFRGBAImage img; >             char >  >             if (TIFFRGBAImageBegin(&img, tif, 0, emsg)) { >                 size_t npixels; >                 uint32* raster; >  >                 npixels = img.width * img.height; >                 raster = (uint32*) _TIFFmalloc(npixels * sizeof (uint32)); >                 if (raster != NULL) { >                     if (TIFFRGBAImageGet(&img, raster, img.width, img.height)) { >                         ...process raster data... >                     } >                     _TIFFfree(raster); >                 } >                 TIFFRGBAImageEnd(&img); >             } else >                 TIFFError(argv[1], emsg); >             TIFFClose(tif); >         } >         exit(0); >     } >  > If it would be assigned a CVE, please credit it for: zzf of Alibaba.  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      