  oss-security - pitivi: Insecure use of os.system()            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Wed, 23 Dec From: Salvatore Bonaccorso <carnil@...ian.org> To: OSS Security Mailinglist <oss-security@...ts.openwall.com> Cc: Luke Faraone <lfaraone@...ian.org>, 	Debian Security Team <team@...urity.debian.org>, 	CVE Assignments MITRE <cve-assign@...re.org> Subject: pitivi: Insecure use of os.system()  Hi  Luke Faraone reported the following issue in pitivi[0] to the Debian security team on 13th of september, which got assigned. There seems to have been a problem in propagating the CVE assigned though, so we apologies for that. The assigned CVE is not mentioned in the NEWS, but see below for the fixing commit.  Luke Faraone <lfaraone@...ian.org>: > SYNOPSIS: >                 Double-clicking a file in the user's media library with >                 a specially-crafted path or filename allows for >                 arbitrary code execution with the permissions of the >                 user running Pitivi. >  > STEPS TO REPRODUCE: >              1. Create a directory hierarchy like so: >                 "images/$(xeyes)/", and place an image "hello.png" in >                 "images/$(xeyes)/". >              2. Drag and drop "images" to the Pitivi media library. >              3. Double click the image "hello.png" in the media library >  > The `xeyes` program (if installed on your system) should start. >  > See pitivi/mainwindow.py:_mediaLibraryPlayCb(). >  > An exploit scenario would require an attacker to provide a > specially-crafted directory hierarchy or file path. Since Pitivi does > not expose the path to the user, and a workflow of consuming content > created by others is common when working with media files, such a > scenario occurring is not hard to imagine.  This issue was fixed upstream in with commit   [0] http://www.pitivi.org/  [1]  Regards, Salvatore  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      