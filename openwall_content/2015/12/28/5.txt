  oss-security - Re: Being vulnerable to POODLE            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 28 Dec From: Sevan Janiyan <venture37@...klan.co.uk> To: oss-security@...ts.openwall.com Subject: Re: Being vulnerable to POODLE  Hi,  On Florian Weimer wrote: > How so? >  > With some OpenSSL versions, it disables the 0/n split to mitigate a > *different* CBC vulnerability in TLS 1.0, and the client code explicitly > prevents OpenSSL from using TLS 1.1 and later.  SSLv23_server_method() is called to setup a server without any restrictions & SSL_CTX_set_options() sets SSL_OP_ALL on the context. The change I'm proposing explicitly disables the use of SSLv2/v3 so that we're not reliant on the SSL library (which may be out of date?) to impose restriction.  Looking up the documentation before I reply, it seems that by using the SSL_OP_ALL setting, the mitigation you mention is actually disabled. See SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS & SSL_OP_ALL on[1]  SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS Disables a countermeasure against a SSL 3.0/TLS 1.0 protocol vulnerability affecting CBC ciphers, which cannot be handled by some broken SSL implementations. This option has no effect for connections using other ciphers.   Sevan [1] http://openssl.org/docs/manmaster/ssl/SSL_CTX_set_options.html  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      