  oss-security - Re: race condition checking digests/checksums in  sudoers            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Tue, 1 Dec From: Tomas Hoger <thoger@...hat.com> To: Alyssa Milburn <amilburn@...l.org>,         "Todd C. Miller"  <Todd.Miller@...rtesan.com> Cc: oss-security@...ts.openwall.com Subject: Re: race condition checking digests/checksums in  sudoers  On Tue, 10 Nov Alyssa Milburn wrote:  > Recent releases of sudo (since support SHA-2 digests in the sudoers > file, which the documentation states "may be useful in situations where the > user invoking sudo has write access to the command or its parent directory". >  > The sudoers plugin performs this digest verification while matching rules, > and later independently calls execve() to execute the binary. This results > in a race condition if the digest functionality is used as suggested (in > fact, the rules are matched before the user is prompted for a password, so > you have quite some time to replace the binary from underneath sudo). >  > I'm not sure whether this problem is interesting enough to announce or not; > I imagine this functionality isn't widely used, but it's clearly unsafe to > use in such situations right now, and it seems like it would be a can of > worms (at best) to make it completely safe.  Was any fix for this issue already applied, or is any fix planned at all?  Looking at upstream hg and changelog, it does not seem there's any change related to this report yet.  --  Tomas Hoger / Red Hat Product Security  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      