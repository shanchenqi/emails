  oss-security - Re: Heap Overflow in PCRE            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed,  2 Dec (EST) From: cve-assign@...re.org To: carnil@...ian.org Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: Heap Overflow in PCRE  -----BEGIN PGP SIGNED MESSAGE----- Hash:  > I have a question about according to > the fixing commit > in upstream VCS is but (cf. > > was assigned for the issue fixed by the same revision  We currently plan to keep and separate.  We'll try to answer the question in three ways:  1. Different attack methodologies discovered independently can have separate CVE IDs, even if the fix is the same. We don't know of any scalable way to reach a conclusion that /^(?P=B)((?P=B)(?J:(?P<B>c)(?P<B>a(?P=B)))>WGXCREDITS)/ (which is and /(?J)(?'d'(?'d'\g{d}))/ (which is are the same attack methodology.  2. indicates that the attack is prevented by a commit for "Fix buffer overflow for named recursive back reference." Our experience is that Red Hat generally has a good process for locating commits based on the associated bug reports; however, we sometimes don't know how they reach a specific conclusion.  3. The pattern in question for i.e., the /^(?P=B)((?P=B)(?J:(?P<B>c)(?P<B>a(?P=B)))>WGXCREDITS)/ pattern, doesn't have any instances of something like \1 or \g that are commonly used for a back reference. Although we haven't studied the pattern in detail, we think the attack methodology is different from the one that has a \g escape sequence.  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG v1  =3oE2 -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      