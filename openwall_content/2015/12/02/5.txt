  oss-security - Re: Re: CVE Request: dhcpcd 3.x, potentially other  versions too            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 2 Dec From: Sebastian Krahmer <krahmer@...e.com> To: cve-assign@...re.org, oss-security@...ts.openwall.com, 	guidovranken@...il.com Subject: Re: Re: CVE Request: dhcpcd 3.x, potentially other  versions too  Hi  On Tue, Dec 01, at Seth Arnold wrote: > On Tue, Dec 01, at cve-assign@...re.org wrote: > > MITRE will assign CVE IDs. Do the above references mean that most of > > the changed code lines in dhcp.c.patch correspond to out-of-bounds > > reads shown in the > > > > diff, >  > I had expected this part of the diff to address the out-of-bounds writes: >  > 		if (out && out != start) > 			*(out - 1) = ' ';  Ack, looks like heap[-1] OOB write to me.  >  > > the change from "(l = *q++)" to "(l = *q++) && q - p < len" > > corresponds to an out-of-bounds write, >  > I must confess that I skimmed the protected code block quickly when coming > to the conclusion that this was out-of-bounds reads -- it's intricate and > involved and the q - p < len check looked correct. But the memcpy(out,...) > call does look like it'd also perform out-of-bounds writes.  Recalling from my last analyse, I think this is just an OOB read, because decode_search() is called with out being NULL to count the amount of data to be copied later. Unless this data is somehow modified the next call to decode_search() should have sufficient amount of heap allocated for the memcpy() to be correct. But the loop has an OOB read when counting the data (and later when copying it and there wasnt already a SIGSEGV).   >  > > the deletion of "free > > (dhcp->dnssearch)" corresponds to a use-after-free, and nothing else > > in the part of the http://roy.marples.name reference is a new > > vulnerability? (This is just a guess.) >  > I should point out that it's my summary that it's a use-after-free -- > Guido said in his report that it is a double-free.  I think that both classes are basically the same.  After all, maybe quite challenging to exploit for one-packet client side.  Sebastian  --   ~ perl self.pl ~ ~ krahmer@...e.com - SuSE Security Team   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      