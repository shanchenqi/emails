  oss-security - Re: CVE Request: dhcpcd 3.x, potentially other versions too            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Thu,  3 Dec (EST) From: cve-assign@...re.org To: seth.arnold@...onical.com Cc: cve-assign@...re.org, oss-security@...ts.openwall.com, guidovranken@...il.com Subject: Re: CVE Request: dhcpcd 3.x, potentially other versions too  -----BEGIN PGP SIGNED MESSAGE----- Hash:  >  >> I had expected this part of the diff to address the out-of-bounds writes: >> >>               if (out && out != start) >>                       *(out - 1) = ' ';  >>> Ack, looks like heap[-1] OOB write to me.  Use for the vulnerability in which the possibility of "out == start" wasn't considered, leading to an out-of-bounds write.   >>> Recalling from my last analyse, I think this is just an OOB read, because >>> decode_search() is called with out being NULL to count the amount of data >>> to be copied later. Unless this data is somehow modified the next call >>> to decode_search() should have sufficient amount of heap allocated for >>> the memcpy() to be correct. But the loop has an OOB read when counting >>> the data (and later when copying it and there wasnt already a SIGSEGV).  Use for this loop error that results in an out-of-bounds read.   >	     case DHCP_DNSSEARCH: >                     MIN_LENGTH (1); > -                   free (dhcp->dnssearch); >                     len = decode_search (p, length, NULL); >                     if (len > 0) { > +                           free (dhcp->dnssearch);  Use for the presence of the free call in an incorrect place.  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG v1  =bJBu -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      