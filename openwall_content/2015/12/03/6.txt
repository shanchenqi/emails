  oss-security - Status of libpng buffer overflow in png_set_PLTE            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Thu, 3 Dec From: Glenn Randers-Pehrson <glennrp@...il.com> To: oss-security@...ts.openwall.com Subject: Status of libpng buffer overflow in png_set_PLTE  On Thu, Nov 12, at PM, Glenn Randers-Pehrson <glennrp@...il.com> wrote:  > I request a CVE for a vulnerability in libpng, all versions, in the > png_set_PLTE/png_get_PLTE functions.  These functions failed to check for > an out-of-range palette when reading or writing PNG files with a bit_depth > less than 8.  Some applications might read the bit depth from the IHDR > chunk and allocate memory for a 2^N entry palette, while libpng can return > a palette with up to entries even when the bit depth is less than 8. > > libpng versions and were released > today (12 November to fix this vulnerability.  See > libpng.sourceforge.net >  The patch was incomplete.  While it defended against the potential overrun while reading PNG files, it did not detect a potential overrun by applications using png_set_PLTE directly.  Libpng versions and which were released today, December 3, fix this remaining problem.  The PNG Development Group has not yet been made aware of any application that is actually vulnerable to The original "crash" obtained by fuzzing optipng had triggered an assert() that probably should have been a warning; no out-of-bounds read occurs in optipng.  Regards  Glenn Randers-Pehrson libpng custodian   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      