  oss-security - Re: nss: SSL_ImplementedCiphers ABI incompatibility may lead to  incorrect cipher suites            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Wed, 9 Sep From: Florian Weimer <fweimer@...hat.com> To: cve-assign@...re.org Cc: oss-security@...ts.openwall.com Subject: Re: nss: SSL_ImplementedCiphers ABI incompatibility may lead to  incorrect cipher suites  On PM, cve-assign@...re.org wrote:  > (We realize that this isn't a great example. A better example would > have forced the unavailability of an arguably "safe" cipher suite that > had previously been used. Or, possibly, a better example would have > caused the customer's application to fail to pick up a new and highly > recommended cipher suite that exists only in newer NSS upstream code.)  I looked at the upgrade from Red Hat Enterprise Linux 6.1 to 6.7 to which is larger.  See the attached text file.  > Is this also a security impact: >  >   The applicable NSS code begins with >  >        const PRUint16 SSL_ImplementedCiphers[] = { >  >   and ends with >  >          >  >          0 >  >     }; >  >  >   in both cases. If SSL_ImplementedCiphers is truncated, then the "0" >   at the end is lost. In some or all cases, possibly depending on the >   machine architecture or compiler, this can result in a different >   type of unwanted behavior for an NSS-based application, such as an >   out-of-bounds read and application crash caused by a malicious TLS >   endpoint that intentionally has no mutually agreeable cipher suites. >  > ?  As far as I can tell, the value of SSL_ImplementedCiphers does not have any impact on NSS by itself.  The cipher suites it enables by default do not change based on the cipher suites listed in the array.  The hypothetical problem I can see is with an application traversing the SSL_ImplementedCiphers array, looking up each cipher suite using SSL_GetCipherSuiteInfo, and then changing the set of enabled ciphers based on some application policy.  This could say, “disable all RC4 cipher suites” or “disable all MD5 cipher suites”.  If the SSL_ImplementedCiphers array is truncated, the application would miss cipher suites which are implemented and enabled, and would not be able to disable them.  As a result the “no RC4” or “no MD5” policy is not enforced.  --  Florian Weimer / Red Hat Product Security   View attachment "diff.txt" of type "text/plain" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      