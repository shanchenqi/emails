  oss-security - Pending CVE requests for glibc            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Tue, 8 Sep From: Huzaifa Sidhpurwala <huzaifas@...hat.com> To: oss-security@...ts.openwall.com,         Mitre CVE assign department <cve-assign@...re.org> Subject: Pending CVE requests for glibc  Hi MITRE,  I could not help but notice, some glibc security issues were not assigned CVE ids.  1. glibc: multiple overflows in strxfrm() Integer overflow when computing memory allocation sizes (similar to was reported [1] in glibc strxfrm() function. Attached strxfrm-int32.c should trigger this issue on a 32-bit systems. Additionally, it was discovered [1] that strxfrm() falls back to an unbounded alloca if malloc fails making it vulnerable to stack-based buffer overflows (similar to Attached strxfrm-alloca.c should trigger this issue.  Previously a request was made via:  2. glibc: _IO_wstr_overflow integer overflow An integer overflow flaw, leading to a heap-based buffer overflow, was found in glibc's _IO_wstr_overflow() function. If an application used this function, it could cause the application to crash or, potentially, execute arbitrary code with the privileges of the user running the application.   3. glibc: potential denial of service in internal_fnmatch() It was reported [1] that when processing certain malformed patterns, fnmatch can skip over the NUL byte terminating the pattern.  This can potentially result in an application crash if fnmatch hits an unmapped page before encountering a NUL byte.   Previously a request was made via:  4. glibc: potential denial of service in pop_fail_stack() A crash was reported [1] during glibc extended regular expression processing. No known patch exists at the time of writing.   Can MITRE please assign CVE ids to these flaws?  Thanks!   --  Huzaifa Sidhpurwala / Red Hat Product Security Team  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      