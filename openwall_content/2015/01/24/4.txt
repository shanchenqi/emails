  oss-security - Re: CVE Request: Linux kernel crypto api unprivileged arbitrary module load            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Sat, 24 Jan (EST) From: cve-assign@...re.org To: marc.deslauriers@...onical.com Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: CVE Request: Linux kernel crypto api unprivileged arbitrary module load  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  > The Crypto API in the Linux kernel before allowed unprivileged users to > load arbitrary kernel modules.  > https://plus.google.com/+MathiasKrause/posts/PqFCo4bfrWu  > >  Use for the original discovery by Mathias Krause, with a "Try the code snippet below on a system with CONFIG_CRYPTO_USER_API=y" attack.  The scope of does not include any other parts of the related discussion. In particular, the scope of does not include the general concepts of "making things safer with no real cost" and "Allowing simple, safe, well understood work-arounds" in the post. Also, the scope of does not include any other security implications, for other subsystems, of the "This isn't the case for filesystems and a few others, unfortunately" observation in the post.   >  Use for this second discovery in mentioned in PqFCo4bfrWu as 'stumbled over the first flaw -- not handling crypto templates correctly. This means, the patch would prevent loading the vfat.ko module when requesting a cipher named "vfat" but would fail to do so if one would request "vfat(aes)" instead.' As far as we can tell, this is a discovery of a separate attack vector that wasn't implied by the post.   >  This isn't within the scope of either or As far as we can tell, it is largely a usability fix. The example mentioned is "This fixes, e.g., requesting 'ecb(blowfish-generic)', which used to work with kernels and below." Is there also a security impact if is missing? For example, is it likely that code exists that requests ecb(blowfish-generic) in an environment without and is able to continue working afterward, but falls back to weak encryption?   Finally, here is one more CVE ID for the last issue that PqFCo4bfrWu mentions:  > >  Use The scope of this CVE ID is the entire problem of path stripping. (In other words, is not specific to the 'If one would request a cipher named "/vfat"' attack, and is not specific to the Crypto API.)  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  iQEcBAEBAgAGBQJUw7GnAAoJEKllVAevmvmsSGYH+QGuxDsDlzYM7If+yc+qmSMh =oBcQ -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      