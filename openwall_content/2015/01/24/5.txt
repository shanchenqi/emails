  oss-security - Re: CVE Request: Linux kernel - Denial of service in notify_change for xattrs.            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Sat, 24 Jan (EST) From: cve-assign@...re.org To: wmealing@...hat.com Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: CVE Request: Linux kernel - Denial of service in notify_change for xattrs.  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  > [wmealing]$ chown root:root /usr/bin/ping > chown: changing ownership of '/usr/bin/ping': Operation not permitted >  > [wmealing]$ ping www.google.com > ping: icmp open socket: Operation not permitted >  > This can cause a denial of service for applications which use the > capabilities subsystem such as pirahnah (arping), netconsole (arping), > some kdump implementations, etc.  >> Currently we call security_inode_killpriv() in notify_change(), >> but in case of a chown() this is too early - we have not called >> inode_change_ok() or made any filesystem-specific permission/sanity >> checks.  >> + * setattr_killpriv - remove extended privilege attributes from a file >> + * @dentry: Directory entry passed to the setattr operation >> + * @iattr: New attributes pased to the setattr operation >> + * >> + * All filesystems that can carry extended privilege attributes >> + * should call this from their setattr operation *after* validating >> + * the attribute changes.  This is a somewhat unusual situation in which there is arguably a single underlying discovery: if any filesystem supports extended privilege attributes, its setattr operation has a requirement for certain code that supports the functionality of removing extended privilege attributes. Previously, there was no such requirement in the sense that notify_change was (wrongly) expected to support that functionality. Thus, it seems best to model this as a single security problem (with a single CVE ID) in which the set of requirements for setattr operations was incomplete. It does not seem worthwhile to model this as a series of related security problems (with multiple CVE IDs) in which individual filesystems had their own independent implementation errors.  Use  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  =WP6T -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      