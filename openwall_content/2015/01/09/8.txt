  oss-security - Re: PIE bypass using VDSO ASLR weakness - Linux kernel            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri,  9 Jan (EST) From: cve-assign@...re.org To: renorobert@...il.com Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: PIE bypass using VDSO ASLR weakness - Linux kernel  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  >> Given that ASLR is not effective in VDSO and comes down to 11 quality bits >> as per pax test making return-to-vdso feasible even for PIE binary, whether >> this should be considered as a bug and CVE be assigned?  > Yes, we can proceed to CVE assignment. The more recent discussion > hasn't been on oss-security with, for example: >  >    >     > This apparently mentions both the original discovery: >  >    The current algorithm is buggy: the vdso has about a 50% >    probability of being at the very end of a PMD.  Use for this vulnerability, which corresponds to a portion of the above patch.  (not yet available at http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/log/arch/x86/vdso/vma.c)   > and a second discovery that was made separately: >  >    The current algorithm also has a decent chance of failing outright >    due to incorrect handling of the case where the top of the stack is >    near the top of its PMD. >  > Here, our question, for anyone, is: is there a security impact from > the "failing outright" outcome? Or is there only a performance impact > (e.g., any correctly written application will continue to work, but > will not benefit from any vDSO functionality)?  We haven't seen any responses. There is currently no CVE ID for this "incorrect handling of the case where the top of the stack is near the top of its PMD" issue. This incorrect-handling issue is not within the scope of  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  =EWmq -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      