  oss-security - Re: CVE request - ICU            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 29 Jan (EST) From: cve-assign@...re.org To: thoger@...hat.com Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: CVE request - ICU  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  > > >  Do you believe there's enough information available to determine how many CVEs should exist that are specific to Chromium bug  says "Improved checking of regular expression pattern size limits," and "Improved" doesn't necessarily imply a specific number of CVEs.  The utypes.h change mentions:    U_REGEX_PATTERN_TOO_BIG,              /**< Pattern exceeds limits on size or complexity.   @draft ICU 55   */  In some cases in various products, a length fix is motivated by an overflow or overflows, which would have one CVE, and a complexity fix is motivated by a desire to restrict a resource-consumption attack, which might have its own CVE (but, in any case, would not be the same as the overflow CVE).  The new function mentions:    // Pattern with too much string data, such that string indexes overflow operand data field size    // in compiled instruction.  which might imply that at least one overflow attack was possible against the unpatched code.  Other parts of mention both:    Append a new instruction onto the compiled pattern.   Includes error checking, limiting the size of the    pattern to lengths that can be represented in the    24 bit operand field of an instruction.  and    Allocate space in the back-tracking stack frame.   Return the index for the newly allocated data.    The frame indexes are inserted into various    opcodes while compiling the pattern, meaning that frame    size must be restricted to the size that will fit    as an operand (24 bits).   If the unpatched code allowed overflow attacks against both the pattern and the back-tracking stack frame, then these would be combined into one CVE if the flaw types were the same.  However, might also have other changes (possibly related to the new RegexCompile::allocateData function) that are intended to address complexity problems and not intended to address overflows.  This leads to a possibility of these two observations:    A. the entire known vulnerability is that the unpatched code      calculates certain values without ensuring that they can be      represented in a 24-bit field    B. the vendor has not stated whether there is a vulnerability      related solely to the concept of complexity. Possibly part of      addresses complexity as a security-hardening measure, not a      vulnerability fix. Or, possibly nothing in is exclusively      about complexity.  Should there be one CVE ID now, for observation A alone?  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  =s1KV -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      