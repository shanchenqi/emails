  oss-security - Re: GHOST gethostbyname() heap overflow in glibc            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 29 Jan From: Kurt Seifried <kseifried@...hat.com> To: oss-security@...ts.openwall.com Subject: Re: GHOST gethostbyname() heap overflow in glibc  On AM, Sven Kieske wrote: > On Paul Pluzhnikov wrote: >> If I was supposed to cry alarm, I would have to cry alarm every time >> there is a buffer overflow in glibc, which doesn't seem very useful. >  > Well as someone who is very careful, I _would_ consider every buffer > overflow a security risk unless proven otherwise. >  > It's unexpected behaviour, isn't it? > It's up to the surrounding systems such as ASLR to mitigate it. > But neither is ASLR deployed everywhere, nor is it a silver bullet > to solve the problem. >  > But I don't want to really reiterate this discussion. > All possible opinions on this topic have already been stated.  So you'll be doing the work to confirm which ones are/are not, patch them, regression test the patches and so on? Awesome!  There's a reason we don't treat every potential security flaw as a security vulnerability. We have finite resources and pretty much an infinite number of flaws to deal with. Until you solve that problem we have to make due with "best effort", letting perfection be the enemy of good will kill us.  --  Kurt Seifried -- Red Hat -- Product Security -- Cloud PGP A90B 66BF   Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      