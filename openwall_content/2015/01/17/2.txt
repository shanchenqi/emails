  oss-security - SQL Injection in manage_user_page.php            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Sat, 17 Jan From: Damien Regad <dregad@...tisbt.org> To: oss-security@...ts.openwall.com Cc: advisory@...ridge.ch Subject: SQL Injection in manage_user_page.php  Greetings,  Please update with the information below   Description:  The vulnerability can be used to manipulate existing SQL queries. An  attacker can obtain potentially sensitive data and use it to elevate  privileges within the application. It is also possible for certain  configurations to upload a backdoor and gain complete access to the  webserver or website.  The vulnerability exists due to insufficient filtration of the  "MANTIS_MANAGE_USERS_COOKIE" HTTP COOKIE in "/manage_user_page.php"  script. A remote user with administrative privileges can inject and  execute arbitrary SQL code within the applicationâs database.  The exploit code below modifies the SQL query and injects malicious  "INTO OUTFILE" statement. As a result,current MySQL user login will be  written into the "/var/www/file.txt" file:  GET /manage_user_page.php?hideinactive=0 HTTP/1.1 Host: mantis Accept: Accept-Language: Accept-Encoding: gzip, deflate Cookie:  Connection: keep-alive  Successful exploitation requires that the MySQL account has FILE  privileges within the database.  To exploit this vulnerability an attacker must create a specially  crafted cookie for the application administrator. This can be achieved  using XSS vulnerabilities   Affected versions: - <= - <=  Fixed in versions: - (not yet released) - (not yet released)  Patch: See Github [1]  Credit: This vulnerability was reported [2] by High-Tech Bridge Security  Research Lab (https://www.htbridge.com/), via advisory ID [3]. The issue was fixed by Damien Regad (MantisBT Developer).  References: Further details available in our issue tracker [4]  [1] (1.2.x)      (1.3.x) [2] [3] [4]    Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      