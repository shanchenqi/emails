  oss-security - Re: CVE Request: pycurl use after free fixed in version            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Tue,  3 Nov (EST) From: cve-assign@...re.org To: kristian.fiskerstrand@...ptuouscapital.com Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: CVE Request: pycurl use after free fixed in version  -----BEGIN PGP SIGNED MESSAGE----- Hash:  > >  > my understanding is that use-after-free generally gets assigned a CVE > based on CWE  There isn't that type of direct relationship between the existence of a CWE ID and the availability of a CVE ID for an instance of the weakness. CVE, for example, involves additional decision points about whether the weakness is a mistake (here, yes) and about whether the weakness is exploitable in a way that crosses a privilege boundary (here, possibly not). It's also necessary that the vulnerability existed in something akin to "shipped code." The patch seems to be possibly related to "PyTuple" and the ChangeLog has "List and tuples are now accepted in all positions of HTTPPOST option values" for the same version. If the problem only existed in unshipped code between and as tuple support was being developed, then it typically would not have a CVE ID.  > I haven't looked into the code in any detail for exploitability  Anyone is welcome to provide additional analysis. We can accept a threat model in which a Python script allows an untrusted person to control the string data for properly formed setopt calls. We probably can't accept an implausible threat model in which a Python script allows an untrusted person to make improperly formed setopt calls.  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG v1  fKRoWuusiPUA6aACQki0 =AH8p -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      