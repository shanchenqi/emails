  oss-security - Re: CVE-Request: Assign CVE for common-collections remote  code execution on deserialisation flaw            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 12 Nov From: Mark Felder <feld@...d.me> To: oss-security@...ts.openwall.com Cc: cve-assign@...re.org Subject: Re: CVE-Request: Assign CVE for common-collections remote  code execution on deserialisation flaw    On Thu, Nov 12, at Gsunde Orangen wrote: > CVE-Request: > I appreciate this general discussion around deserialization issues and > hope this will make a jump-start for sustainable improvements on both > Java and application level in the long run. > Aside of that however, I'd like to go back to Jason's original request > to Mitre to get a CVE ID assigned to this particular issue with the > Apache Commons Collections functors package (specifically in the > InvokerTransformer class).  Is there any proof that Apache Commons Collections functors package isn't doing what it's intended to be doing? Everything I'm reading indicates that the problem is with applications believing they can *trust* the input, not that there's a bug in the functors package, ie, bad design.  > So people (esp. Java applications developers) have a unique reference > when analysing and fixing this particluar one (by e.g. removing the > class, make it non-serializable or wait for a new Commons Collections > release that includes that fix - whatever is most appropriate to their > application's context). >   The currently proposed "fix"[1] is to disable functionality that is being used. This will break applications that need them.  [1]    --    Mark Felder   feld@...d.me  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      