  oss-security - Re: Fwd: x86 ROP mitigation            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 18 Nov From: Florian Weimer <fweimer@...hat.com> To: Solar Designer <solar@...nwall.com>, Jeff Law <law@...hat.com> Cc: Bernd Schmidt <bschmidt@...hat.com>, oss-security@...ts.openwall.com Subject: Re: Fwd: x86 ROP mitigation  On AM, Solar Designer wrote:  > This approach makes sense to me, but I think we should have a better > idea of whether and how "a point where ROP gadgets are reasonably hard > to find & exploit" is potentially reachable.  If it is not even > potentially reachable, then this undermines the effort, unfortunately.  This came up in other discussions as well.  We even got to the point where someone ran a ROP gadget finding tool on a core library, which did not find any gadgets at all, and someone else found a useful one in a few minutes with objdump and no other tool support (and this did not even include jumping into the middle of instructions).  In the end, this boils down to lack of concrete goals.  “Blinding ROP gadget finder X“ is easy (just change the ELF format in such a way that it's no longer recognized by the tool), but probably not very useful if you want to improve security, for any useful definition of “security”.  We face the problem that I and my immediate colleagues (on the Red Hat tools team) do not have access to information about successful compromises, and what attackers actually do today, on GNU/Linux systems, both to achieve initial access and to maintain a presence afterwards. Under these conditions, anything we implement is, to some degree, arbitrary and a shot in the dark.  We can still use our best judgment to set priorities, but we are very far from being guided by empirical evidence.  Florian  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      