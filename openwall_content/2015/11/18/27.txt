  oss-security - Re: Fwd: x86 ROP mitigation            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 18 Nov From: Jeff Law <law@...hat.com> To: Solar Designer <solar@...nwall.com>, Bernd Schmidt <bschmidt@...hat.com> Cc: oss-security@...ts.openwall.com, Florian Weimer <fweimer@...hat.com> Subject: Re: Fwd: x86 ROP mitigation  On PM, Solar Designer wrote: > > I'd like more detail on the plan of dealing with function epilogues, if > there is a plan for that. There's not a lot of detail at this point.  For function's that don't  escape, the compiler has visibility of both the call and return sites.  So for those we can look at indirection, address mangling and the like.    It's something Bernd is just starting to experiment with.  Once something escapes, then we may be looking at something like  stack-protector-all or somehow emitting a sequence that's painful to try  and exploit while being semantically equivalent.  The concern is that  with the cost of stack-protector-all there'll be resistance to using  that as the mitigation technique.   > > I'm not sure if this fits under: > >>    * Look into an idea Florian had for improving stack-protector >>      epilogues. > > or if that's (more likely) something entirely different. No, it's based on some experiments that show changing the stack  protector epilogue can result in an epilogue sequence that is painful to  exploit.   jeff  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      