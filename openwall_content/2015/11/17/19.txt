  oss-security - Re: Assign CVE for common-collections remote code execution on deserialisation flaw            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 17 Nov (EST) From: cve-assign@...re.org To: oss-security@...ts.openwall.com Cc: cve-assign@...re.org Subject: Re: Assign CVE for common-collections remote code execution on deserialisation flaw  -----BEGIN PGP SIGNED MESSAGE----- Hash:  > [1] > [2]  The MITRE CVE team has no current plans to provide a CVE ID associated with the Apache Commons Collection product for its behavior described at:    https://blogs.apache.org/foundation/entry/apache_commons_statement_to_widespread  and elsewhere. Our interpretation is that some people are taking a position that, very roughly, corresponds to:   - suppose that a library product is very difficult to deploy safely    in a use case involving untrusted input   - furthermore, suppose that part of this library product has    semantics that are inconsistent with the usual semantics for the    programming language in use   - furthermore, suppose that a number of applications are actually    using this library in a very unsafe way   - furthermore, suppose that the vendor of this library product has    decided to change this product's behavior so that (among other    differences) it will sometimes be easier to deploy safely   - furthermore, suppose that this vendor's change notification seems    to be more about hardening the library as a way to help prevent    exploitation of current or future applications, and seems to be    less about announcing the original behavior as a library    vulnerability   - still, a CVE ID could be used as a name for the original behavior  We prefer not to have a CVE ID for the library product in this situation. There is a continuum between "inadvertent coding error" on the left side and "a choice that was reasonable for a smaller than expected fraction of customers" on the right side. The situation here is not far enough to the left to have a CVE ID.  The ID came from the Apache Software Foundation itself, and thus can't be generalized to other cases that may seem similar.  The ID came from Oracle and must remain associated only with Oracle's own software (WebLogic Server is the product they've named).  We'll send a separate response about the Jenkins report.  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG v1  -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      