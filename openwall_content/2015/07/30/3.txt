  oss-security - Re: xfsprogs: xfs_metadump information disclosure flaw            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Thu, 30 Jul From: Dave Chinner <david@...morbit.com> To: Kurt Seifried <kseifried@...hat.com> Cc: oss-security@...ts.openwall.com Subject: Re: xfsprogs: xfs_metadump information disclosure flaw  On Thu, Jul 23, at Kurt Seifried wrote: > >  > Gabriel Vlasiu reported that xfs_metadump, part of the xfsprogs suite of > tools for the XFS filesystem, did not properly obfuscate data. > xfs_metadump properly obfuscates active metadata, but the rest of the > space within that fs block comes through in the clear.  This could lead > to exposure of stale disk data via the produced metadump image. >  > The expectation of xfs_metadump is to obfuscate all but the shortest > names in the metadata, as noted in the manpage: >  > By  default,  xfs_metadump  obfuscates  most  file (regular file, > directory and symbolic link) names and extended  attribute  names to > allow  the  dumps  to be sent without revealing confidential > information. Extended attribute values are zeroed and no data  is > copied.  The only exceptions are file or attribute names that are 4 or > less characters in length. Also file names that span extents (this can > only occur with the mkfs.xfs(8) options where -n size > -b size) are not > obfuscated.  Names between 5 and 8 characters  in length > inclusively are partially obfuscated. >  > While the xfs_metadump tool can be run by unprivileged users, it > requires appropriate permissions to access block devices (such as root) > where the sensitive data might be dumped.  An unprivileged user, without > access to the block device, could not use this flaw to obtain sensitive > data they would not otherwise have permission to access. >  > Upstream patches will be available at > https://git.kernel.org/cgit/fs/xfs/xfsprogs-dev.git/  I have just released xfsprogs to address these issues. Please see the release announcement here for details on where to find it:   -Dave.  PS: A comment on the CVE disclosure process: please ensure that the upstream maintainer is informed of the CVE and the public disclosure plan *before* disclosure occurs.  Apart from preventing co-ordinated release of the fixes, failing to inform the maintainer of the problem before public disclosure is impolite and disrespectful.  --  Dave Chinner david@...morbit.com  Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      