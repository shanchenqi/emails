  oss-security - Re: Linux NMI security issues            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 30 Jul From: Daniel Micay <danielmicay@...il.com> To: oss-security@...ts.openwall.com Subject: Re: Linux NMI security issues  On PM, Solar Designer wrote: > On Wed, Jul 22, at Andy Lutomirski wrote: >> +++++ +++++ > [...] >> Mitigations: Use seccomp to disable perf_event_open or modify_ldt or >> run with only a single CPU.  To my knowledge, this cannot be exploited >> on single-processor systems or in single-threaded applications. > [...] >> +++++ +++++ >> >> High impact NMI bug on systems and newer, embargoed.  Also fixed by: >> >> >> >> The other fix (synchronous modify_ldt) does *not* fix >> >> You can mitigate by blocking modify_ldt or >> perf_event_open using seccomp.  A fully-functional, portable, reliable >> exploit is privately available and will be published in a week or two. >> *Patch your systems* >  > I understand how seccomp is usable for sandboxing in a program, but how > would a sysadmin block syscalls with it?  The filter will be inherited by all child processes and having CAP_SYS_ADMIN removes the need to set PR_SET_NO_NEW_PRIVS.  A global blacklist would really need to be a feature provided by init based on a configuration file, ideally with support for parameter filtering as blacklisting flags would be useful.  You could use init=/sbin/seccomp-wrapper with something like this:      #include <errno.h>     #include <seccomp.h>     #include <stdio.h>     #include <stdlib.h>     #include <string.h>     #include <unistd.h>          void check(int rc, const char *function) {         if (rc) {             fprintf(stderr, "%s: %s\n", function, strerror(-rc));             exit(1);         }     }          int main(void) {         int rc;         scmp_filter_ctx filter = seccomp_init(SCMP_ACT_ALLOW);         if (!filter) {             fprintf(stderr, "seccomp_init\n");             return 1;         }         check(seccomp_attr_set(filter, SCMP_FLTATR_CTL_NNP, 0),               "seccomp_attr_set");         check(seccomp_rule_add(filter, SCMP_ACT_ERRNO(EPERM), SCMP_SYS(modify_ldt), 0),               "seccomp_rule_add");         check(seccomp_load(filter), "seccomp_load");              char *argv[] = {"/sbin/init", NULL};         if (execv(argv[0], argv)) {             perror("execv");         }              return 0;     }  (I haven't actually tested this, but it compiles and should work)   Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      