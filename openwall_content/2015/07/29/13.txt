  oss-security - Re: CVE request: Two ruby 'dl' vulnerabilities fixed in            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 29 Jul From: Reed Loden <reed@...dloden.com> To: Assign a CVE Identifier <cve-assign@...re.org> Cc: oss-security@...ts.openwall.com, security@...y-lang.org Subject: Re: CVE request: Two ruby 'dl' vulnerabilities fixed in  On Tue, Jul 28, at AM, <cve-assign@...re.org> wrote:  > > * DL::Function#call could pass tainted arguments to a C function even if > > $SAFE > 0. > > > > > > These seem to be different issues than > > Please clarify what research you have done to reach this conclusion > for the DL::Function#call issue. Finding information about > vulnerabilities with different dates does not always mean that > separate CVE IDs are used. For example, if a patch was > ineffective in the sense that it did not actually fix any aspect of a > vulnerability, and then an effective patch and a new > advisory were produced in the previously assigned > ID would continue to be used - there would not be a new > ID. > > The available information about includes the "Lack of > taintness check in dl" section of > > > with "dl doesn't check taintness ... This vulnerability was reported > by sheepman" and "Please upgrade to ... See the > ftp://ftp.ruby-lang.org/pub/ruby/1.8/ archives. > > Comparing ext/dl/sym.c between p71 and p72 shows a new > rb_check_safe_obj(pval) line in rb_dlsym_call. > > Comparing ext/dl/dl.c between p71 and p72 shows new instances of > OBJ_INFECT, among other changes. > > The commit mentions "Patch by sheepman" and a change to a .rb > file (no changes to any .c file). > > Is the issue a new issue because it is specific to a "tainted > arguments to a C function" attack, and the patch correctly > resolved the test case involving uname? >  Sorry, not a Ruby developer, so not really able to give an authoritative answer here (cc'ing security@...y-lang.org to see if they can help). I am just trying to track all Ruby vulnerabilities for inclusion into https://github.com/rubysec/ruby-advisory-db, and I noticed those never had CVEs assigned (yet the Ruby devs considered them security issues).  To help with this, here is the diff --  Hopefully, one of the Ruby core devs can jump in here and give a better answer.  ~reed   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      