  oss-security - Re: [BIND] An error in handling TKEY queries can cause named to exit with a REQUIRE assertion failure            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Wed, 29 Jul From: Solar Designer <solar@...nwall.com> To: Michael McNally <mcnally@....org> Cc: oss-security@...ts.openwall.com Subject: Re: [BIND] An error in handling TKEY queries can cause named to exit with a REQUIRE assertion failure  On Tue, Jul 28, at Michael McNally wrote: > A deliberately constructed packet can exploit an error in the > handling of queries for TKEY records, permitting denial of service.  As an attack surface reduction measure for a subset of builds/users, would it make sense to exclude the corresponding code and functionality from --without-openssl builds (which effectively lack DNSSEC support anyway, and often deliberately so)?  If so, I wish this had been done by now, thereby mitigating this bug for those builds and users, but perhaps it still makes sense to do so now (upstream?) in case there are more bugs "like this" in code that is DNSSEC-related yet doesn't directly depend on OpenSSL (hence, isn't excluded in --without-openssl builds yet).  Security aside, this would also reduce the (binary) code size.  Alexander  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      