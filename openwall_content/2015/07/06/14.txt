  oss-security - Re: How serious is undefined behavior?            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 6 Jul From: John Haxby <john.haxby@...cle.com> To: oss-security@...ts.openwall.com Subject: Re: How serious is undefined behavior?   > On 6 Jul at Hanno Bรถck <hanno@...eck.de> wrote: >  > However I wonder how practically relevant these issues are and also > how much focus should be given to them. Do people have good examples > where e.g. an invalid shift operation caused a real, severe security > issue? > Would people think it's a wise idea to put a lot of effort into testing > applications with ubsan enabled and reporting all the bugs that pop up? > (that would mean a lot of bugreports) Or would this be perceived as an > annoying "that's a theoretical C language nitpick issue and not a real > bug".  I don't have the example any more, but some years ago(*) we did have a problem because undefined behaviour on one compiler showed up differently on another.  In our case it was a hard to track down bug because it wasn't particularly obvious that it was undefined.   We were similarly bitten when a new compiler changed the implementation of something else undefined.  And of course, the classic foo(a++, bar(a++)) crops up in one form or another on a regular basis,  It may have been that that changed from one release to another: one compiler evaluated all the arguments right to left, another one evaluated the first few left to right (to go into registers) and the later ones right to left.  I forget, sorry.  Of course, most of the time these just result in peculiar bugs rather than exploitable security issues, but it's not too hard to come up with plausible cases that would lead to a failing security check.  jch  (*) OpenMail, if anyone wonders or cares. Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      