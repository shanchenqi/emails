  oss-security - Re: Linux NMI security issues            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 23 Jul From: Petr Matousek <pmatouse@...hat.com> To: Andy Lutomirski <luto@...capital.net> Cc: oss security list <oss-security@...ts.openwall.com> Subject: Re: Linux NMI security issues  On Thu, Jul 23, at Andy Lutomirski wrote: > On Jul 23, AM, "Petr Matousek" <pmatouse@...hat.com> wrote: > > On Wed, Jul 22, at Andy Lutomirski wrote: > > > On kernels that are patched for BadIRET and have a fixup_bad_iret > > > function (which should be most kernels that are keeping up with > > > low-level security issues), there are two cases. > > > > > > Case 1a (more up-to-date kernels where INTERRUPT_RETURN is "jmp > > > irq_return"): fixup_bad_iret will be invoked and will attempt to > > > recover.  There's a narrow window in which a new NMI will cause > > > corruption, in which case all bets are off.  That could hang, crash, > > > or possibly be exploited for privilege escalation. > > > > > > Case 1b (less up-to-date kernels where INTERRUPT_RETURN is "iretq"): > > > The kernel will try to OOPS due to a bad kernel fault, except that the > > > OOPS will be processed with the wrong gsbase.  This is basically the > > > BadIRET condition, and is probably exploitable using similar > > > techniques to BadIRET. > > > > Could you please explain the backtrace leading to this?  You mean the > > nested nmi return which invokes INTERRUPT_RETURN and in case > > INTERRUPT_RETURN is "iretq", error_kernelspace won't detect that and > > won't fixup the gs? >  > I mean the normal (non-nested) NMI return.  If we return with iretq, then > the error_bad_iret fixup won't trigger at all because that iretq > instruction has no fixup entry or swapgs special case.  Hmm, sorry, my bad. I've been looking at rhel-7 -- I see two ways to exit the NMI handler there -- INTERRUPT_RETURN after the nested_nmi_out label, which should only trigger on nested NMIs and thus be safe, and the second one after the nmi_restore label which does jmp irq_return.  And irq_return is:  irq_return:                                                                                                                                                                                                     	INTERRUPT_RETURN                                                                                                                                                                                        	_ASM_EXTABLE(irq_return, bad_iret)  and error_kernelspace checking for irq_return  error_kernelspace:                                                                                                                                                                                              	incl %ebx                                                                                                                                                                                               	leaq irq_return(%rip),%rcx                                                                                                                                                                              	cmpq %rcx,RIP+8(%rsp)                                                                                                                                                                                   	je error_swapgs                                                                                                                                                                                           Now the paravirt iret case is not protected by the error_kernelspace fixup. How much that is a problem is something I'm going to have a look at ...  --  Petr Matousek / Red Hat Product Security PGP: AF16 F9AF  77CA  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      