  oss-security - Re: CVE Request - tidy / tidy5 heap-buffer-overflow            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Tue, 14 Jul (EDT) From: cve-assign@...re.org To: fernando@...l-life.com Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: CVE Request - tidy / tidy5 heap-buffer-overflow  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  > The original discovery was about memory corruption, > and then the vendor mentioned an attack variation in which a small > file can lead to a 4 Gb allocation, which potentially would be > successful on some platform and cause a DoS.  > In other words, the first CVE would be for > with: >  >   AddressSanitizer: heap-buffer-overflow >   WRITE of size 1 >  >   tmbstr cp = s = (tmbstr) TidyAlloc( allocator, 1+len ); >   Notice the plus 1, so it arrives at TidyAlloc with a ZERO!!! >  >   Now it seems malloc does not mind a zero value, malloc(0), and >   dutifully returns a pointer >  >   Then tmbstrndup does the corruption, with - >  >   while ( len-- > 0 && (*cp++ = *str++) ) /**/; >  >   Of course ( len-- > 0 ) will be true until the expires ;=)) >  >   But thankfully the corruption stops when a 0 is reached in the lexer >   with (*cp++ = *str++). As indicated in this case it is storing the >   attribute "href", but that is 4+ bytes of corruption.  Use   > The second CVE would be for > > with: >  >   In some cases this bug could exibit a different problem like parsing >   the snippet <a <?xm \0xd?> href="">. >  >   Now the lexer buffer will contain 2, or more IsWhite() chars and len >   would be reduced to -2, or less, which means the malloc buffer >   allocation would be a giant byte allocation, a value >   lots of OSes will reject  Use  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  =hW30 -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      