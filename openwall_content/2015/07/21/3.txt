  oss-security - Re: CVE request: IPython CSRF validation            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 21 Jul (EDT) From: cve-assign@...re.org To: rgbkrk@...il.com Cc: cve-assign@...re.org, oss-security@...ts.openwall.com, khanam@...ibm.com, security@...thon.org Subject: Re: CVE request: IPython CSRF validation  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  > Software name: IPython notebook > Attack outcome: Possible remote execution > Patches: >   2.x: > >   3.x: > >  > POST requests exposed via the IPython REST API are vulnerable to > cross-site request forgery (CSRF). Web pages on different domains can make > non-AJAX POST requests to known IPython URLs, and IPython will honor them. > The user's browser will automatically send IPython cookies along with the > requests.  Use  This part of the patch seems unusual, but we haven't researched it at all:    host = self.request.headers.get("Host")   origin = self.request.headers.get("Origin")    # If no header is provided, assume it comes from a script/curl.   # We are only concerned with cross-site browser stuff here.   if origin is None or host is None:      return True  Is this a case where it is safe to skip CSRF protection in all situations where the client omits an Origin header?  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  =jjDB -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      