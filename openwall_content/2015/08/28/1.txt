  oss-security - [FreeImage] Integer overflow in PluginPCX.cpp            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Fri, 28 Aug From: "pcheng pcheng" <pcheng@....com> To: oss-security@...ts.openwall.com Cc: carnil@...ian.org, ghedo@...ian.org Subject: [FreeImage] Integer overflow in PluginPCX.cpp  The following bug was reported to upstream and Debian security team. was assigned by Debian security team.  Name : FreeImage Affected Version: <= URL : http://freeimage.sourceforge.net/  Description : An integer overflow issue in the FreeImage project was reported and fixed recently. Upstream fix: Revision http://freeimage.cvs.sourceforge.net/viewvc/freeimage/FreeImage/Source/FreeImage/PluginPCX.cpp?view=log&pathrev=MAIN  Details:  The PluginPCX.cpp file(version has:  unsigned width = header.window[2] - header.window[0] + 1; unsigned height = header.window[3] - header.window[1] + 1; unsigned bitcount = header.bpp * header.planes;  However, it's possible that header.window[2] < header.window[0], and also header.window[3] < header.window[1]. In this two cases, width and height can be overflowed. And this can lead further issue in the rest of the code. Take the following lines for example:  for (x = 0; x < width; x++) { bits[x * 3 + FI_RGBA_RED] = pline[x]; }  The write operation on buffer bits can help an attacker to corrupt the heap.  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      