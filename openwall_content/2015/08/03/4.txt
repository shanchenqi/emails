  oss-security - Xen Security Advisory - QEMU leak of  uninitialized heap memory in device model            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Mon, 03 Aug From: Xen.org security team <security@....org> To: xen-announce@...ts.xen.org, xen-devel@...ts.xen.org,  xen-users@...ts.xen.org, oss-security@...ts.openwall.com CC: Xen.org security team <security@....org> Subject: Xen Security Advisory - QEMU leak of  uninitialized heap memory in device model  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1              Xen Security Advisory /                               version 2      QEMU leak of uninitialized heap memory in device model  UPDATES IN VERSION 2 ====================  CVE assigned.  Public release.  Updated status of the patches.  ISSUE DESCRIPTION =================  The QEMU model of the network card did not sufficiently validate inputs in the C+ mode offload emulation. This results in uninitialised memory from the QEMU process's heap being leaked to the domain as well as to the network.  IMPACT ======  A guest may be able to read sensitive host-level data relating to itself which resides in the QEMU process.  Such information may include things such as information relating to real devices backing emulated devices or passwords which the host administrator does not intend to share with the guest admin.  VULNERABLE SYSTEMS ==================  All Xen systems running x86 HVM guests without stubdomains which have been configured with an emulated driver model (which is the default) are vulnerable.  Systems using qemu-dm stubdomain device models (for example, by specifying "device_model_stubdomain_override=1" in xl's domain configuration files) are NOT vulnerable.  Both the traditional ("qemu-xen-traditional") or upstream-based ("qemu-xen") qemu device models are potentially vulnerable.  Systems running only PV guests are NOT vulnerable.  ARM systems are NOT vulnerable.  QEMU-XEN-TRADITIONAL ====================  The patches supplied by the Qemu Project are of course against recent versions of qemu.  They cannot be applied directly to qemu-xen-traditional.  The Xen Project Security Team do not feel we have the resources to backport and qualify these substantial and intrusive patches.  Users using qemu-xen-traditional with stub domains are not vulnerable, because the stub dm is a deprivileged qemu guest instance.  Users using qemu-xen-traditional for compatibility with old guests can avoid the vulnerability by switching to using a stub device model.  The Xen Project Security Team encourages users and downstreams who are using qemu-xen-traditional and able to backport the patches to share those patches with us, so that we may distribute them with an updated advisory.  We will encourage the community to have a conversation, when this advisory is released, about the continuing security support status of qemu-xen-traditional in non-stub-dm configurations.  MITIGATION ==========  Avoiding the use of emulated network devices altogether, by specifying a PV only VIF in the domain configuration file will avoid this issue.  Avoiding the use of the device in favour of other emulations will also avoid this issue.  Enabling stubdomains will mitigate this issue, by reducing the information leak to only information belonging to the service domain.  qemu-dm stubdomains are only available with the "qemu-xen-traditional" device model version.  CREDITS =======  This issue was discovered by Donghai Zhu of Alibaba.  RESOLUTION ==========  Applying the appropriate attached patches resolves this issue.         qemu-upstream, xen-unstable, Xen 4.5.x,                                      Xen 4.4.x             qemu-upstream, Xen 4.3.x, Xen 4.2.x  $               $  DEPLOYMENT DURING EMBARGO =========================  Deployment of the patches described above (or others which are substantially similar) is permitted during the embargo, even on public-facing systems with untrusted guest users and administrators.  But: Deployment of any of the mitigations described above is NOT permitted (except on systems used and administered only by organisations which are members of the Xen Project Security Issues Predisclosure List).  Specifically, deployment on public cloud systems is NOT permitted.  This is because in all cases the configuration change may be visible to the guest.  Also, Distribution of updated software is prohibited (except to other members of the predisclosure list).  Predisclosure list members who wish to deploy significantly different patches and/or mitigations, please contact the Xen Project Security Team.  (Note: this during-embargo deployment notice is retained in post-embargo publicly released Xen Project advisories, even though it is then no longer applicable.  This is to enable the community to have oversight of the Xen Project Security Team's decisionmaking.)  For more information about permissible uses of embargoed information, consult the Xen Project community's agreed Security Policy:   http://www.xenproject.org/security-policy.html -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux)  =viOO -----END PGP SIGNATURE-----  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      