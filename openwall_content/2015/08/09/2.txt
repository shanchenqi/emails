  oss-security - Re: CVE request - simple-php-captcha - captcha bypass vulnerability            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 10 Aug From: Solar Designer <solar@...nwall.com> To: Fran??ois Labr??che <f.labreche@...il.com> Cc: oss-security@...ts.openwall.com, 	Olivier Bilodeau <olivier@...tomlesspit.org> Subject: Re: CVE request - simple-php-captcha - captcha bypass vulnerability  On Sun, Aug 09, at Fran??ois Labr??che wrote: > We found a captcha bypass vulnerability in an open source captcha  > software, made by Cory LaViska for A Beautiful Site. Here is the github  > repository: https://github.com/claviska/simple-php-captcha. >  > We opened an issue on github  > <https://github.com/claviska/simple-php-captcha/issues/16>, and the  > vulnerability has been fixed. They never did any release so we don't  > think the fix will be released in any form. Simply advising users to  > update to git master's should suffice. >  > The simple-php-captcha.php file had a vulnerability enabling a client to  > generate the captcha response automatically, effectively bypassing the  > captcha. >  > Since the microtime() function was used both in the initial seed for the  > captcha and in the captcha url path sent to the client, it was possible  > to generate the captcha result automatically by running the same code  > client-side.  And you think removing the srand(microtime() * fixes this?  Well, it does appear to fix the most straightforward and easiest attack, and captchas are bypassable in general, but does this raise the bar high enough for the "fixed" version not to be CVE-worthy?  Or are you going to be requesting a second CVE ID for it then?  The "fixed" code relies on PHP's automatic seeding for rand() (which is typically dependent on system time anyway, adding only a process id to the mix), and, what's probably worse, it uses rand() so many times that it leaks its tiny internal state via properties of the captcha that are easy for a computer to analyze.  While figuring out the captcha text might require OCR, figuring out the text length, font size, x and y position, and colors is easier.  OCR isn't rocket science, but it's the intended level of "security" of this captcha, while being able to infer the text through even easier analysis of "metadata" is a captcha bypass, somewhat similar to (but moderately trickier than) your initial finding.  Alexander  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      