  oss-security - Re: CVE Request - Go net/http library - HTTP smuggling            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 04 Aug From: Jason Buberel <jbuberel@...gle.com> To: Florian Weimer <fweimer@...hat.com> Cc: oss-security@...ts.openwall.com,  	"cve-assign@...re.org" <cve-assign@...re.org> Subject: Re: CVE Request - Go net/http library - HTTP smuggling  Florian,  We believe that this is a potentially exploitable issue.  We would like a CVE-ID in order to release a build that has the fixes applied to the current stable release for linux distro coordination.  Commits have been made to the Go master branch to fix the problem:   Additional background on the exploit, as provided by the reporter:  net/http problems ------------------  * Double Content-length headers in a request does not generate a error, the second Content-length is ignored * Invalid headers are parsed as valid headers (like "Content Length:" with a space in the middle)  Exploitations --------------  In a situation where the net/http agent HTTP communication with the final http clients is using some reverse proxy (reverse proxy cache, SSL terminators, etc), some requests can be made exploiting the net/http HTTP protocol violations.  The goal of theses requests will be either:  * to bypass security controls on theses previous elements  * to perform some cache poisoning on these elements  * to alter the request/response map on these previous elements (for DOS), see for example this apache 2.4 issue:   On Wed, Jul 29, at PM Jason Buberel <jbuberel@...gle.com> wrote:  > Forian, > > We do have a security@...ang.org alias, and a proposal for a more formal > security review process but > I agree that the process isn't clear enough currently. > > In this particular case, the reporter sent a messages to go-dev@...ang.org. > That was then forwarded to me for handling. > > And I agree on the bundling. Is there another specific issue that you're > tracking? Feel free to contact me directly - jbuberel@...gle.com. > > -jason > > On Wed, Jul 29, at PM Florian Weimer <fweimer@...hat.com> > wrote: > >> On PM, Jason Buberel wrote: >> > Hello OSS Security Community, >> > >> > The Go open source project has received notification of an HTTP request >> > smuggling vulnerability in the net/http library ( >> > http://golang.org/pkg/net/http/). The vulnerability was identified in >> the >> > release version (http://golang.org/dl) and in the 1.5 release >> branch. >> >> How does one report such things? >> >> Due to lack of published security contact information, I contacted the >> de-facto subsystem maintainer about the issue, but I have been ignored. >> >> (It would be nice to be able to bundle such security updates as far as >> possible, to avoid recompiling everything constantly.) >> >> -- >> Florian Weimer / Red Hat Product Security >> >   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      