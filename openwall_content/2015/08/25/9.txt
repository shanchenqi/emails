  oss-security - Re: CVE request: libgpf: use-after-free vulnerability in Decoder.cpp            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Tue, 25 Aug (EDT) From: cve-assign@...re.org To: pcheng@....com Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: CVE request: libgpf: use-after-free vulnerability in Decoder.cpp  -----BEGIN PGP SIGNED MESSAGE----- Hash:  > An use-after-free issue in Decoder.cpp was reported to upstream. The > problem is due to lack of validation of ColorTableSize. >  > > >  We think you mean that a use-after-free can occur when the http://sourceforge.net/p/libpgf/code/HEAD/tree/trunk/libpgf/INSTALL instructions are followed. Use  seems to be a series of changes for handling failed input validation by propagating an error status, rather than by using assert calls. Typically these cases do not have CVE IDs (see the post). When writing a general-purpose open-source library, it is often best not to rely on assert calls, because someone may not realize their role, and may decide to adapt the library code and integrate it into their own build process that uses NDEBUG.  There can be a CVE ID for behavior of a library with NDEBUG if any of these are true:    - the author doesn't provide build instructions    - the build instructions always or sometimes use NDEBUG    - there's other information suggesting that NDEBUG is acceptable     (e.g., "all of the asserts are for impossible conditions that were     only relevant during development")    - the author intended to support use of NDEBUG  or possibly a few other similar conditions (e.g., end users would reasonably guess that NDEBUG was acceptable based on the author's past practices or on how the library is used).  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG v1  0rrvxnRcjdvtIgzFQiAk =7Eio -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      