  oss-security - Re: CVE request: 2 issues in inspircd            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Tue, 25 Aug (EDT) From: cve-assign@...re.org To: sdelafond@...il.com Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: CVE request: 2 issues in inspircd  -----BEGIN PGP SIGNED MESSAGE----- Hash:  > the Debian Security Team is requesting 2 CVEs for inspircd. >  >   * the fix that was included in Debian for is incomplete, >     and does not solve the original remote code execution problem. See: >  >       >  >   * a DoS can be triggered by invalid DNS packets. See: >  >       >        We think 3 CVE IDs are needed; see below. (Two of them are IDs because a commit message announced the vulnerability.)  >> I am an upstream maintainer for InspIRCd. The patch you have for >> is not the same patch we >> released as part of (there was no to address the CVE. It >> appears to be a a version of this commit: >> >> However this commit was never in a release, and was only in git for >> about 6 days (due to someone other than me pulling it in).  It appears that did accomplish something. For example, it adds an "if (o + header.payload[i] > sizeof(DNSHeader))" test that was not present in the dns.cpp, but is present in the dns.cpp. Therefore, it is necessary to have a new CVE ID associated with the remaining original problem.  >> This commit and your patch do not fix the problem. You can still send >> maliciously crafted packets and cause remote code execution. This was >> fixed in >> >> prior to the release.  Because the patch is:    -  if (length - i < 10)   +  if (static_cast<int>(length - i) < 10)  this implies that the original problem was in handling the case where i is greater than length, and thus a "length - i < 10" comparison is something like a < 10" comparison. The original patch attempted to fix this with:    -  if (length - i < 10)   +  if ((unsigned) length - i < 10)  which doesn't accomplish anything. Use for this vulnerability involving mishandling of unsigned values.   >> Furthermore, your patch introduces a buffer underflow where it has >> "i =- 12" and not "i -= 12". This causes it to start reading from >> before the packet's buffer. It is unclear to me what this can cause.  We disagree with this analysis. The Debian patch in question is in the commit from Here, adds the problematic "i =- 12" line but also changes the data type of i from int to unsigned. Thus, "i =- 12" sets i to a value greater than 4 billion, the "i < length" test will be false, and the while loop will exit. As far as we can tell, nothing is read from outside a buffer. We think the general outcome is that decompression for CNAME and PTR records results in safely determining the wrong answer. We didn't look at what types of wrong answers can occur: possibly the result can be either an empty string or a truncated name. Our guess is that this is security relevant because IRC daemons can rely on DNS lookups for access control, e.g., to support    /MODE #channel +b *!*@...mple.com  but we didn't look at the specific role of dns.cpp in InspIRCd. In any case, we want to assign a CVE ID for the code problem of "i =- 12" where "i -= 12" was intended: use Again, this has a directly resultant issue in which there's misuse of an unsigned variable, and (possibly?) an indirectly resultant issue of ban bypass.   >> Additionally, at the same time I commited >> to prevent malicious packets >> from causing InspIRCd to infinite loop. This is not a part of the CVE >> as it does not allow remote code execution, but is still a critical >> problem due to the potential for denial of service.  Use for this infinite-loop issue.  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG v1  =cRan -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      