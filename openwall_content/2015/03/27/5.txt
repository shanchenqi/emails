  oss-security - Re: CVE Request: Multiple vulnerabilities in freexl            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 27 Mar From: Jodie Cunningham <jodie.cunningham@...il.com> To: cve-assign@...re.org Cc: oss-security@...ts.openwall.com Subject: Re: CVE Request: Multiple vulnerabilities in freexl  Firstly, a correction to my earlier statement about the fixed release: is the first release to include the patch.   On Fri, Mar 27, at AM,  <cve-assign@...re.org> wrote: >> #2: > Does this refer to the missing "== NULL" tests within the > allocate_cells function?  Yes  > Is a NULL pointer dereference going to occur > before the code reaches a point where there can be stack corruption?  I don't believe so. It looks like these are initialized as NULL, and if they are still NULL at this point in execution then we assume the input file was malformed and exit with the appropriate return code.  > Or does it refer to the missing "> * test in the parse_SST > function? >> #4: > Does this refer to the change from the "return ret;" code to the > "errcode = ret; goto stop;" code? > Or does it refer to one of the two possibilities listed above for #2?  This vulnerability is related to the missing "> * test in the parse_SST function.  The workbook could be crafted with a bad shared strings table that could use up an excessive amount of memory resources on the target system. gdb/exploitable.py also indicated DestAvNearNull at the time of the crash.  The retcode change should benefit #3 and #4, but I don't know that it has any role at all in preventing the vulnerabilities.  V/R, -Jodie  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      