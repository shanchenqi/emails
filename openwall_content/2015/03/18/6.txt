  oss-security - CVE Request: Linux kernel unprivileged denial-of-service due to  mis-protected xsave/xrstor instructions.            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Wed, 18 Mar From: Quentin Casasnovas <quentin.casasnovas@...cle.com> To: CVE-assign <cve-assign@...re.org>,         oss-sec <oss-security@...ts.openwall.com> Cc: Jamie Iles <jamie.iles@...cle.com>, Allan Xavier <mr.a.xavier@...il.com> Subject: CVE Request: Linux kernel unprivileged denial-of-service due to  mis-protected xsave/xrstor instructions.  Hi,  Jamie and I discovered there was a flaw in the way the xsave/xrstor (and their alternative instructions) were being protected against a fault in kernel space from linux  The problem was introduced in commit ("x86/xsaves: Use xsaves/xrstors to save and restore xsave area") which ends up protecting the .altinstr_replacement from faulting instead of the target of the alternative in .text, leaving the instruction un-protected.  You can find a reproducer (thanks to Allan for his help with/comments on it!) triggering the fault in kernel space attached to this e-mail but it should be noted there are a few different places where these instructions are used un-protected and the reproducer only uses one of them present in the kvm code.  You can find a list of all such places in the attached unprotected_xsave_faults attachment which was generated against a defconfig + CONFIG_KVM vmlinux.o (the most concerning one probably being in __switch_to()).  The reproducer is a patch to apply on top of lkvm (https://github.com/penberg/linux-kvm) but it should be trivial to write as a standalone C application.  It should be noted that this vulnerability is present even if the hardware does not support xsaveS.  This is fixed by upstream commit     Other patches to prevent introduction of the same class of vulnerability are currently being reviewed on lkml:     I haven't received any news from cve-assign when this issue was previously discussed on security@...nel.org.  Could a CVE be assigned to this please?  Thanks, Quentin  View attachment "xsave-fault-reproducer.patch" of type "text/x-diff" bytes)  View attachment "unprotected_xsave_faults" of type "text/plain" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      