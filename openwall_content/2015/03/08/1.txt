  oss-security - Re: Certificate pinning and the browser PKI            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Sat, 07 Mar From: Daniel Kahn Gillmor <dkg@...thhorseman.net> To: Florian Weimer <fweimer@...hat.com>, oss-security@...ts.openwall.com Subject: Re: Certificate pinning and the browser PKI  On Thu Florian Weimer wrote: > So for the browser PKI case, it may make sense to pin the server public > key instead (n *and *e), not the entire certificate.  During regular > rollover, you can keep the public key, and you can have a pre-pinned > offline copy for emergency rollovers.  yes, this is the right approach.  in the HTTPS context, HPKP actually pins public keys, and not certificates.  You can even pin the EE's public key and multiple backup offline public keys, so that in the event of a compromise of your EE's primary key, you can promote one of the backups to active use, generate a new backup, and still have other backups that can be considered valid even by clients that still only know of the old keys.  Planning this way lets you sustain multiple rollover events over the lifetime of the PKP directive without locking out infrequent visitors.       --dkg  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      