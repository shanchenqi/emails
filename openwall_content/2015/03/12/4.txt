  oss-security - Re: Another Python app (rhn-setup: rhnreg_ks) not  checking hostnames in certs properly            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 11 Mar From: Kurt Seifried <kseifried@...hat.com> To: oss-security@...ts.openwall.com Subject: Re: Another Python app (rhn-setup: rhnreg_ks) not  checking hostnames in certs properly  On PM, Michael Samuel wrote: > Hi, >  > On 12 March at Kurt Seifried <kseifried@...hat.com> wrote: >>> You can test for the common bugs extremely easily - you need two types of >> >> If only it were so simple. Seriously, life would be awesome. >> >> What about expired certificates? >> What about certificates that are properly signed but not yet valid? >  > Sure, you could test these too, but I'd argue these are policy issues, > not security bugs.  If your SSL/TLS implementation accepts expired certs as being ok, then you have a problem.  > Where is an attacker going to get the private key for an expired cert, > but be unable to > find the current one?  By stealing it? Certificate revocation doesn't work. Otherwise we wouldn't have vendors shipping browser updates to invalidate known to be compromised certificates, we'd be relying on CRL/OCSP and not hacks like OCSP stapling.  >> What about a certificate signed for the correct hostname by a system >> trusted CA? (some apps are supposed to only trust a specific CA). >  > That's a policy bug too, not an easily exploitable security bug > (unless one of your > system CAs is compromised).  Does RedHat actually ship anything that > does pinning?  That's a real world bug. Logic error "trust properly signed cert" vs. "trust specific CA signed cert".  >> These are all very common issues. >  > Not nearly as common or exploitable as not checking the certificate at > all, of which I've > reported plenty of to RedHat and others over the past couple of years.  Uhm. Did you not look at any of the cve.mitre.org links I sent? These are incredibly common failures. Hint: if some class of bug has a bunch of CVE's you can multiply it by or more for the number of affected real world cases (and that's in English software alone).  >   Michael  Anyways I think we're sufficiently off topic now.   --  Kurt Seifried -- Red Hat -- Product Security -- Cloud PGP A90B 66BF   Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      