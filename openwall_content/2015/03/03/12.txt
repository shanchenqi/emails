  oss-security - PostgreSQL password hashing            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Wed, 4 Mar From: Michael Samuel <mik@...net.net> To: oss-security@...ts.openwall.com Subject: PostgreSQL password hashing  Hi all,  I'm posting this to the list, since it seems to be making the rounds finally :)  The "pass the hash" flaw and weak password hashing scheme in PostgreSQL was known to be weak at the time it was implemented.  I was among a chorus of people who spoke out about it at the time of it's inclusion, but the developers' response boiled down to:  This was recently rediscovered by atom from hashcat:  To protect yourself: 1) Put "password" instead of "md5" in pg_hba.conf 2) Use a randomly generated, unique password rather than an actual word. 3) Don't let attackers see your pg_shadow  The reason for (1) is that the password auth protocol doesn't accept hashes.  Use TLS if network attacks are a problem.  The reason for (2) - which is a good idea anyway - is because the hash in the database is is just md5(password username).  If the username is "wordpress" for example, you could crack multiple hashes for similar cost to cracking one.  (3) is a bit tongue-in-cheek, but pg_shadow is only accessible to superusers, so don't connect your webapp as a database superuser and you significantly reduce the risk of lots of bad stuff :)  Regards,   Michael  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      