  oss-security - Re: CVE request: vulnerabilities in libcsoap            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Sun, 15 Mar (EDT) From: cve-assign@...re.org To: blinken@...il.com Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: CVE request: vulnerabilities in libcsoap  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  > * Remote null pointer dereference > A remote user can cause a null pointer dereference by sending a > malformed Authorization: header. > http://patrick.ld.net.au/libcsoap/nanohttp-nullp-1.patch  Use for (only) this null pointer dereference.   > * Remote buffer overflow > If the server is misconfigured, a remote user can trigger a buffer > overflow by requesting a resource of a certain length. > http://patrick.ld.net.au/libcsoap/nanohttp-buffer-1.patch  First, this doesn't seem to be a new discovery. http://csoap.sourceforge.net/downloads.php links to http://csoap.sourceforge.net/downloads/libsoap-snapshot.tar.gz and this contains a top-level directory with a nanohttp/nanohttp-server.c file dated This file apparently has the bug fixed in a (very) slightly different way:     char    snprintf(buffer, "service '%s' is not registered properly (service function is NULL)", req->path);  More importantly, we haven't been able to find any indication that this issue is within the scope of CVE. As far as we can tell, building libcsoap does not create a sample HTTP server. If someone writes their own application to create an HTTP server, the "else" code path after "if (service->func != NULL)" should always be unreachable. If this code path is reachable, that's a bug in their application and therefore a site-specific problem. Unless the upstream vendor has stated something else, the behavior of the library is undefined if the application is wrong. If the actual behavior is a remote buffer overflow, that's within the bounds of undefined behavior. We don't feel that there are required security properties for a code path that's not reachable in any supported or reasonable use of a library.  Also, we don't think it's especially likely that someone would write an application in which service->func can ever be NULL. For example, has a nanohttp-admin.c file in which service->func is always the _httpd_admin_entry function.  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  =xgNk -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      