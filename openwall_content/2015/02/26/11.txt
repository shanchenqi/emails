  oss-security - Re: CVE request: Joomla Google Maps Plugin            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 26 Feb (EST) From: cve-assign@...re.org To: hanno@...eck.de Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: CVE request: Joomla Google Maps Plugin  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  > http://tech.reumer.net/Google-Maps/Documentation-of-plugin-Googlemap/security-release-3-1-of-plugin-googlemaps.html > > http://www.saotn.org/joomla-websites-abused-open-proxy-denial-service-attacks/ >  > Denial of Service / reflection issue (this seems the one akamai is > most concerned about)  We think the earliest disclosure of this was and it is assigned   > XML injection  We think the earliest disclosure of this was again. We are not sure what set of impacts would typically have occurred from XML injection within unpatched versions of this "Google Maps by Reumer" product. The current version calls libxml_disable_entity_loader. XML injection could cause a denial of service, in part depending on the version of libxml2 that is used by the version of PHP. We have assigned for this. The ability to place an XSS payload within an XML document is considered another XSS attack vector (see the next CVE) disclosed at the same time, and is not within the scope of If anyone decides to research older versions of this product, in order to identify other vulnerabilities associated with the product's use of the PHP libxml extension, then additional CVE IDs may be possible.   > XSS  We think the earliest disclosure of this was again. Use As mentioned above, an attack such as <div using a .xml filename is within the scope of   > path disclosure  We think the earliest disclosure of this was again. Use   Two additional vulnerabilities were disclosed on the page, apparently 10 days later in  Some older versions of the proxy component lack any restrictions on requests. This issue is not being assigned a CVE ID even though the researcher lists it as an "Insufficient Anti-automation (IAA)" vulnerability. In these older versions, the vendor was not trying to impose restrictions, and imposing restrictions would thus be considered an opportunity for security hardening, not a vulnerability. However, the vendor later created a protection mechanism that was intended to impose these restrictions. The researcher found a way to bypass this protection mechanism. That is assigned Specifically, the way to bypass this protection mechanism is "the token can be found at page which uses plugin of the site (and it's setting in URL). This data can be taken from the site automatically."  Also, the researcher provides a new XSS attack vector, a reference to a .html filename such as url=site/xss.html in the query string. This is apparently caused by an incomplete fix for the older finding in which the XSS payload was embedded directly in the query string. Use for this later-disclosed XSS variant. (We understand that url=site/xss.html is conceptually not very different from url=site/xss.xml - however, we are using separate CVE IDs, in part because of the different disclosure date.)  Finally, the researcher disclosed one new finding in in the post. This new finding is a variant of but applies specifically to the case where the attacker controls a subdomain of the victim's domain name. Use The researcher gives an apparently realistic example in which the attacker controls site.wordpress.com and the attack target is the wordpress.com web site.  For this issue, one might argue that the attack involving the plugin_googlemap2_proxy.php filename and the attack involving the plugin_googlemap3_kmlprxy.php filename have different affected versions and could have separate CVE IDs. We have decided to use only one CVE ID because the security problem is caused by the same code in essentially the same place, even though the file was renamed and modified somewhat.  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  =W3e1 -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      