  oss-security - Re: Re: CVE request: heap buffer overflow in glibc  swscanf            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Wed, 04 Feb From: Florian Weimer <fweimer@...hat.com> To: oss-security@...ts.openwall.com CC: cve-assign@...re.org, jsm28@....gnu.org Subject: Re: Re: CVE request: heap buffer overflow in glibc  swscanf  On AM, cve-assign@...re.org wrote: >> The check with __libc_use_alloca also checks against the number >> of array entries to allocate rather than the number of bytes, so >> the function can allocate up to four times as many bytes as is >> libc policy on the stack in the wide character case. >  > Here, it seems that the goal of the policy is risk management for > use of alloca. This is security relevant for some applications that > use glibc, because it could (for example) allow a denial of service > attack that's intended to trigger a failed alloca. There was one > intended policy, and the the incorrect "__libc_use_alloca > (newsize)" caused a different (and weaker) policy to be enforced > instead.  If you want to assign CVE IDs for stack overflows in glibc without demonstrated application impact, we really need to find a way to streamline the process because there are quite a few missing assignments.  I wouldn't mind getting a pool of CVEs (for multiple years, going back to around and assigning them to issues in the glibc Bugzilla instance, and posting weekly summaries to oss-security.  Would that work for you?  --  Florian Weimer / Red Hat Product Security  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      