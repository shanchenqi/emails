  oss-security - Re: CVE-Request -- Zerocms <= v. -- SQL injection vulnerabilities            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Sun, 1 Feb From: Steffen Rรถsemann To: oss-security@...ts.openwall.com Subject: Re: CVE-Request -- Zerocms <= v. -- SQL injection vulnerabilities  I just got a reply from MITRE.  I missed, that the first SQL injection vulnerability already had been assigned Sorry, I missed that one.   Greetings.  Steffen  Steffen Rรถsemann :  > Hi Steve, Josh, vendors, list. > > I found two SQL injection vulnerabilities in Zerocms <= v. > > The first SQL injection vulnerability is located in the article_id > parameter used in zero_view_article.php and can be exploited even by > unauthenticated attackers. > > See the following exploit-example: > > http:// > > > The second vulnerability is a Blind SQL injection an is located in the > user_id parameter used in a POST request in zero_transact_user.php. > > An attacker can exploit this vulnerabilitiy in the administrative backend > via the following POST request exploit-example: > > POST /views/zero_transact_user.php HTTP/1.1 > Host: localhost > User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X > > Accept: > Accept-Language: > Accept-Encoding: gzip, deflate > DNT: 1 > Referer: http://{TARGET}/views/zero_user_account.php?user_id=2 > Cookie: > Connection: keep-alive > Content-Type: application/x-www-form-urlencoded > Content-Length: 91 > > {SQL injection > goes here}&action=Modify+Account > > Could you please assign a CVE-ID for this? > > Thank you very much. > > Greetings from Germany. > > Steffen Rรถsemann > > References: > > [1] http://aas9.in/zerocms/ > [2] > [3] https://github.com/perezkarjee/zerocms/issues/3 > [4] https://github.com/sroesemann/zerocms > [5] > [6] > > [7] >   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      