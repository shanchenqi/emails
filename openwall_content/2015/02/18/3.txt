  oss-security - CVE Request: cabextract -- directory traversal            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Wed, 18 Feb From: Alexander Cherepanov <ch3root@...nwall.com> To: oss-security@...ts.openwall.com Subject: CVE Request: cabextract -- directory traversal  Hi!  cabextract is susceptible to a directory traversal vulnerability. While  extracting files from an archive, it removes leading slashes from  filenames but does it before possibly decoding UTF-8 and doesn't check  for invalid UTF-8. Hence an absolute filename can be shoved through by  using overlong encoding for the leading slash (and setting utf8  attribute in the header). This can be exploited by a malicious archive  to write files outside the current directory.  Illustration:  $ touch xxxxxxxxxx $ lcab xxxxxxxxxx test.cab $ sed -i test.cab $ rm xxxxxxxxxx  $ ls /tmp/abs ls: cannot access /tmp/abs: No such file or directory  $ ./cabextract test.cab Extracting cabinet: test.cab    extracting /tmp/abs  All done, no errors.  $ ls /tmp/abs /tmp/abs  In the sed command above, is an overlong encoding for '/',  are flags updated to include utf-8 flag.  The issue was found in cabextract 1.4 and 2-byte encoding (\xc0\xaf) was  enough to hide '/'. cabextract 1.5 tightened utf-8 checks and 3-byte  encoding is now necessary.  The issue was reported to Stuart Caie today and fixed in less than 4h:   Another release of cabextract is expected in the next few days.  Could CVE please be assigned?  --  Alexander Cherepanov  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      