  oss-security - Re: Fixing the glibc runtime linker            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 19 Feb From: Paul Pluzhnikov <ppluzhnikov@...gle.com> To: oss-security@...ts.openwall.com Subject: Re: Fixing the glibc runtime linker  On Thu, Feb 19, at PM, Tim Brown <tmb@...35.com> wrote:  > More often than not, the underlying issue is an empty element within the > DT_RPATH header or equivalent. Sometimes it's not, but even in those cases, it > is largely that one or more elements isn't qualifed (i.e. it doesn't start > with /). The attached patch fixes this, by ignoring any elements of DT_RPATH, > LD_LIBRARY_PATH that do not start with a /, and/or junking any use of dlopen > where the filename is likewise unqualified. > > Won't this break stuff?  FWIW, relative RPATHs are quite fundamental to our test execution environment, and any patch that unconditionally ignores them would have to be reverted in our tree.  Also, don't you want to discuss this on libc-alpha? oss-security could be all for it, but without buy-in from libc-alpha your patch is unlikely to be going anywhere.  --  Paul Pluzhnikov  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      