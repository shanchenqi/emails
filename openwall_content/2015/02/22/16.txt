  oss-security - Re: CVE-Request -- phpBugTracker v. -- Multiple SQLi, stored/reflecting XSS- and CSRF-vulnerabilities            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Sun, 22 Feb (EST) From: cve-assign@...re.org To: Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: CVE-Request -- phpBugTracker v. -- Multiple SQLi, stored/reflecting XSS- and CSRF-vulnerabilities  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  > I found multiple SQLI-, stored/reflecting XSS- and CSRF-vulnerabilities in > Issuetracker phpBugTracker v.  Can you clarify how the example attack URLs interact with this product's approach to access control? As far as we can tell, established a model for access control in which there is both a superadmin role and an admin role. We think the situation is:  1. You mean that all of your http://{TARGET}/admin/ example URLs are accessed within the context of a session with the correct/expected authentication. In some cases, $perm->check('Admin') must succeed, and in other cases (e.g., project.php), the $perm->check('Admin') test is not used. In other words, you are not reporting any discoveries in which an attacker is directly bypassing access control.  2. In some cases, stored XSS is relevant only in the context of a CSRF attack, because otherwise a superadmin would need to enter the XSS string intentionally. In other cases, stored XSS is independently relevant because it could be used for privilege escalation from admin to superadmin.  3. A SQL injection attack could be relevant even if CSRF is not used. In other words, someone with admin (or even superadmin) privileges does not necessarily have the inherent ability to execute arbitrary SQL statements.  4. Some of the vendor's commits have fixed attack vectors that you did not report (in addition to attack vectors that you did report). For example:    + case 'del' :   +     if (check_action_key_die()) {   +         del_group(get_get_int('group_id'));  5. Most of the issues were fixed in however, there were additional XSS fixes in  If so, then there would probably be seven CVE IDs in total (six for the fixes: for multiple CSRF discovered by you, multiple CSRF discovered by the vendor, multiple XSS discovered by you, multiple XSS discovered by the vendor, multiple SQL injection discovered by you, and multiple SQL injection discovered by the vendor; and one for the fixes).  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  =c4/m -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      