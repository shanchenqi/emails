  oss-security - Re: Prime example of a can of worms            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 23 Oct From: gremlin@...mlin.ru To: oss-security@...ts.openwall.com Subject: Re: Prime example of a can of worms  On Kurt Seifried wrote:   > I can't even begin to think how slow this would be on hardware  > limited systems like $20 routers and whatnot (in theory you could  > have systems taking tens of minutes), which would not be popular  > with consumers (turn the unit on and wait from 0 seconds to an  > hour or so for the web interface to come up!).  Normally, all those $20 (or even $10) routers don't need to generate keys at the first start - they are configured via plain HTTP given that user's PC is connected to a "LAN" port with a cable. And only when user activates the outside access (via VPN or SSH) the keys are to be generated - possibly in several hours, like those 17 hours the `openssh dhparam -5 command took at my notebook :-)   > With this data in mind I think we need to generally encourage  > everyone to go to a minimum of bit primes  For my clients, I force the use of bit for over 5 years.   > (which should last a few more years assuming quantum computers  > don't suddenly make factorization easy)  That wouldn't be suddenly. At least I'm not going to worry until they would be able to factorize some number close to - say, And yes, I know one divisor: it is :-)   > and establish some safe methods of creating them, much like  > generating CA encryption keys we need to ensure the systems/  > software in use are correct, the entropy is available (and  > not manipulated) and so on.  Here we come to trusted execution, trusted computation and so on.   > Ideally we'd like to see people using different primes (e.g.  > hardware manufacturers not using the same primes as everyone  > else) and where possible people needing more security (e.g. a  > VPN hosting provider) should generate their own keys securely.  Theory is fine. But in practice we see weakened algorithms with (intentionally?) reduced key size.   --  Alexey V. Vissarionov aka Gremlin from Kremlin <gremlin ПРИ gremlin ТЧК ru> GPG: @ hkp://keys.gnupg.net  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      