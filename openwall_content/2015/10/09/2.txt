  oss-security - Re: CVE request - Android OS - Using the PPP character  device driver caused the system to restart            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 9 Oct From: Nick Kralevich <nnk@...gle.com> To: oss-security@...ts.openwall.com Subject: Re: CVE request - Android OS - Using the PPP character  device driver caused the system to restart  As explained in , this is not an Android specific bug, nor is it reachable from untrusted code within Android.  -- Nick  On Thu, Oct 8, at PM, 郭永刚 <guoyonggang@....cn> wrote:  > Detailed steps(The code below using C language): > > Step1:     Open PPP drive device. > >       int fd = open("/dev/ppp",O_RDWR); > > > > Step2:     Create a new ppp unit. > >       unsigned int cmd = PPPIOCNEWUNIT; > >       long arg = -1;/* Set arg < 0 */ > >       ret = ioctl(fd,cmd, &arg); > > > > Step3:  Set VJ max slot ID. > >       cmd= PPPIOCSMAXCID; > >       arg = > >       ret = ioctl(fd,cmd, &arg); > > > > Result: > >       System restart. > > > > > > I think the correct behavior should be : > >       return -EINVAL; > >       Tell user not a typewriter. > > > > Analysis of causes: > > In the process of using the PPP device driver, if the unit of the PPP > device file has been created. On the basis of the above, the ioctl function > is used to pass the PPPIOCSMAXCID command and the  parameter > (parameters must be satisfied: arg>>16 > and 0xFFFF&arg > which > will lead to the use of null pointers in the kernel. > > The null pointer is used specifically in the slhc_init function, and the > function is defined as follows: > > > ////////////////////////////slhc_init/////////////////////////////////////// > > struct slcompress * > > slhc_init(int rslots, int tslots) > > { > >       ...... > >       struct slcompress *comp; > >       ...... > > > >       if ( rslots > 0  &&  rslots < ) { > >            ...... > >            comp->rstate = kzalloc(rsize, GFP_KERNEL); > >            ...... > >       } > > > >       if ( tslots > 0  &&  tslots < ) { > >            ...... > >            comp->tstate = kzalloc(tsize, GFP_KERNEL); > >            ...... > >       } > > > >       ...... > > > >       if ( tslots > 0 ) { > >            ts = comp->tstate; > >            for(i = comp->tslot_limit; i > 0; --i){ > >                  ts[i].cs_this = i; > >                  ts[i].next = &(ts[i - 1]); > >            } > >            ts[0].next = &(ts[comp->tslot_limit]); > >            ts[0].cs_this = 0; > >       } > >       ...... > > } > > > > If you pass the appropriate parameters, make sure tslots and rslots two > parameters are greater than This lead comp->rstate equal NULL.In cases > no check the comp->rstate is NULL, using it in kernel casue the system > crash and restart. > > > > > > > > Solution: > >       Add a judge in front of "ts = comp->tstate;". > > > >       As follows: > >       if ( tslots > 0 ) { > >            if(comp->tstate != NULL){ > >                  ts = comp->tstate; > >                  for(i = comp->tslot_limit; i > 0; --i){ > >                       ts[i].cs_this = i; > >                       ts[i].next = &(ts[i - 1]); > >                  } > >                  ts[0].next = &(ts[comp->tslot_limit]); > >                  ts[0].cs_this = 0; > >            }else{ > >                  return NULL; > >            } > >       } > > > > > > > > The specific exploit code and steps caused the system to restart see attachment. > > >    --  Nick Kralevich | Android Security | nnk@...gle.com |   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      