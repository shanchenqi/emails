  oss-security - Re: CVE Request: git            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 12 Oct From: Blake Burkhart <bburky@...rky.com> To: Seth Arnold <seth.arnold@...onical.com>, oss-security@...ts.openwall.com Subject: Re: CVE Request: git  On Mon, Oct 5, at PM, Seth Arnold wrote: > The git project announced > and included the following text: > > * Some protocols (like git-remote-ext) can execute arbitrary code > found in the URL. The URLs that submodules use may come > from arbitrary sources (e.g., .gitmodules files in a remote > repository), and can hurt those who blindly enable recursive > fetch. Restrict the allowed protocols to well known and > safe ones.  Thanks for sending this to oss-security. I discovered this vulnerability in git and helped get it fixed. I have included some further details on the fixed vulnerabilities.  Arbitrary shell command execution from .gitmodules:  Git allows executing arbitrary shell commands using git-remote-ext via a remote URLs. Normally git never requests URLs that the user doesn't specifically request, so this is not a serious security concern. However, submodules did allow the remote repository to specify what URL to clone from.  If an attacker can instruct a user to run a recursive clone from a repository they control, they can get a client to run an arbitrary shell command. Alternately, if an attacker can MITM an unencrypted git clone, they could exploit this. The ext command will be run if the repository is recursively cloned or if submodules are updated. This attack works when cloning both local and remote repositories.  a5adace and 33cfccb fixed this behavior by introducing a whitelist of allowed protocols for all git submodule operations.  Following HTTP redirects to unsupported protocols:  A separate issue that was fixed used to allow HTTP redirects to be followed to any protocol that the underlying libcurl supported. This is the default behavior of libcurl. However, git should only support a subset of the protocols that libcurl supports. For example, this allowed a git clone from an HTTP server to redirect to an SFTP server and successfully run a clone, a protocol that git otherwise doesn't support at all. Git is only supposed to support using HTTP, HTTPS, FTP and FTPS with the libcurl-based remotes, so this was unexpected behavior.  and fixed this behavior by limiting libcurl-based remotes to redirect to HTTP, HTTPS, FTP and FTPS, or the protocol whitelist, whichever is stricter.  Circular HTTP redirects:  Previously git would follow circular HTTP redirects forever. Potentially this could be used as a DoS attack if an attacker could trigger an automated fetch of a git remote.  fixed this behavior by limiting git to only follow 20 HTTP redirects.  > The announcement also mentions some int-based overflows but does not > describe any situations that would allow crossing privilege boundaries.  Jeff King would have the full details on this. I was not involved with this.  --  Blake Burkhart  --  Blake   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      