  oss-security - Pointer misuse unziping files with busybox            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Sun, 25 Oct From: Gustavo Grieco <gustavo.grieco@...il.com> To: oss-security@...ts.openwall.com Subject: Pointer misuse unziping files with busybox  Unziping a specially crafted zip file results in a computation of an invalid pointer and a crash reading an invalid address. Upstream is taking a look to it, but in the meantime if someone wants to provide some feedback, it will be nice. Find an attached a test case to reproduce it. A complete backtrace in busybox (debug) is available here:  $ gdb --args ./busybox_unstripped unzip ... (gdb) run Starting program: unzip [Thread debugging using libthread_db enabled] Using host libthread_db library Archive:    inflating: ]3jÂ˝rÂŤI..K-%Ix  Program received signal SIGSEGV, Segmentation fault. huft_build <cplens>, <cplext> "",     at                    r.e = (unsigned char) e[*p - s]; /* non-simple--look up in lists */ (gdb) bt #0  huft_build <cplens>, <cplext> "",     at #1  in inflate_block "") at #2  in inflate_get_next_window at #3  inflate_unzip_internal in=in@...ry=3, out=out@...ry=4) at #4  in inflate_unzip in=in@...ry=3, out=out@...ry=4) at #5  in unzip_extract (dst_fd=4, at #6  unzip_main (argc=<optimized out>, argv=<optimized out>) at #7  in run_applet_no_and_exit at #8  in run_applet_and_exit "unzip", at #9  in busybox_main at #10 run_applet_and_exit (name=<optimized out>, argv=argv@...ry at #11 in main (argc=<optimized out>, at  (gdb) x/i $rip =>    mov    (%rdi),%dl (gdb) info registers rax            0x0    0 rbx               87 rcx               rdx               rsi               rdi               rbp               rsp               r8                r9                r10               r11            0x7fffffffcadc    r12               r13            0x8    8 r14               r15            0x0    0 rip               eflags            [ PF AF IF RF ] cs                51 ss             0x2b    43 ds             0x0    0 es             0x0    0 fs             0x0    0 gs             0x0    0  This issue was discovered with QuickFuzz  Thanks!  Content of type "text/html" skipped  Download attachment of type "application/octet-stream" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      