  oss-security - CVE request: Linux kernel - bpf jit optimization flaw can panic  kenrel.            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Mon, 22 Jun (EDT) From: Wade Mealing <wmealing@...hat.com> To: OSS Security List <oss-security@...ts.openwall.com> Cc: cve-assign@...re.org Subject: CVE request: Linux kernel - bpf jit optimization flaw can panic  kenrel.  Gday,   I would like to request a CVE for a flaw in the BPF code in the Linux kernel.    The kernels BPF JIT can be used to create a packet filter like mechanism that can be attached to a socket with the setsockopt() call.  It requires  JIT to be enabled via sysctl ( /proc/sys/net/core/bpf_jit_enable )   The kernel can turn BPF instructions into native hardware instructions using  a JIT compiler. In the problematic case, the compiler fails to optimise a set  of specially crafted instructions. This creates a problem when this faulty instruction list is used during filtering and the CPU can execute an invalid instruction (in receive_pkt).   This can be triggered as an non-root user, as they can start a server on a  ephemeral port and the packet filter with a specially crafted filter.   These incorrect instructions will run when the server receives a packet and execute  the buggy instructions.   I'm unsure if this can lead to anything more than a DoS, however that is something I'll try to determine.   This is already fixed upstream in [1], with a regression test case in [2].   Thanks,   Wade Mealing Red Hat Product Security   References: 1] 2] 3]   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      