  oss-security - Re: Yoast Wordpress SEO Plugin <= Stored, Authenticated XSS            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Sun, 21 Jun From: "sec@...entropy.us" <sec@...entropy.us> To: cve-assign@...re.org Cc: oss-security@...ts.openwall.com Subject: Re: Yoast Wordpress SEO Plugin <= Stored, Authenticated XSS  Thank you for investigating. I agree that since this was never patched there don't need to be two separate CVE identifiers, but it does seem a little odd to create a new CVE. In any case, at least it now has an identifier.  Thanks again, Charles  > On Jun 21, at AM, cve-assign@...re.org wrote: >  > -----BEGIN PGP SIGNED MESSAGE----- > Hash: SHA1 >  >> https://inventropy.us/blog/yoast-seo-plugin-cross-site-scripting-vulnerability/ >> https://wordpress.org/plugins/wordpress-seo/changelog/ >  > See for > the XSS issue related to the "everyone can make a post. This post is > then validate by an admin user. So everyone can use the security > breach to execute javascript in admin" threat model on the > https://wordpress.org/support/topic/security-issue-with-post-title-field-xss-vulnerability > page from >  > It appears that the outcome is that the XSS payload is stored and then > immediately reflected. Probably the highest risk is from the stored > XSS, but the reflected aspect is also relevant if the admin encounters > a malicious web site while logged into WordPress. >  > However, that page also says: >  >  - connect you on admin of your site >  - go to url : [www.yoursite.com]/wp-admin/post-new.php?post_title=<script>alert('There is a problem');</script> >  - The alert message is displaying ! >  >  => CSRF : http://en.wikipedia.org/wiki/Cross-site_request_forgery >  > Is (or was) there a separate CSRF vulnerability, of interest to an > attacker who wants to make a post (without any XSS payload) with the > admin's credentials? >  >  > Finally, you mentioned: >  >> the plugin author said that it had already been patched at the time. >  >>> This was already patched in 1.3 >  > Apparently this refers to: >  >  http://plugins.svn.wordpress.org/wordpress-seo/trunk/changelog.txt >  >  = 1.3 = >  >  * Long list of small fixes and improvements to code best practices >  after Sucuri review. Fixes 3 small security issues. >  > We don't know whether there was an earlier incomplete fix to the > metabox functionality, so we aren't currently assigning a different > CVE ID for versions before 1.3. >  > - --  > CVE assignment team, MITRE CVE Numbering Authority > M/S > Burlington Road, Bedford, MA USA > [ PGP key available through http://cve.mitre.org/cve/request_id.html ] > -----BEGIN PGP SIGNATURE----- > Version: GnuPG (SunOS) >  > > > > > > > =TGMg > -----END PGP SIGNATURE-----   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      