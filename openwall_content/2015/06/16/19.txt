  oss-security - Re: CVE Request - Cross-Site Request Forgery Vulnerability in Users to CSV Wordpress Plugin            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Tue, 16 Jun (EDT) From: cve-assign@...re.org To: venkatesh.nitin@...il.com Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: CVE Request - Cross-Site Request Forgery Vulnerability in Users to CSV Wordpress Plugin  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  > I've discovered a CSRF vulnerability in the Users to CSV Wordpress Plugin > which allows for user information can be exported via a GET request > to users.php. I request a CVE for the same. >  >  We typically don't have CVEs for CSRF issues in which the impact is information disclosure, because the information is disclosed to the victim rather than to the attacker.  Is there any way that the attacker can specify that the CSV data should be written to a file with a public URL served by the web server, so that the attacker can read it later? The source code perhaps suggests that the data is always sent to the victim, e.g.,    https://plugins.svn.wordpress.org/users-to-csv/trunk/users2csv.php    if ( is_admin() ) {   ...   header('Content-Disposition: attachment; filename="'.$table.'.csv"');   ...   echo $csv;  Possibly there is a concern that the user data is sensitive information that might be transmitted over an insecure network path in cleartext during the CSRF attack, and this might be a network path that the admin would avoid during any intentional access to the WordPress installation. However, this is not the type of CSRF impact that normally has a CVE, and the scenario in question could be considered a site-specific problem or user error (i.e., either follow http://codex.wordpress.org/Administration_Over_SSL or at least don't remain logged in after moving the client machine to an especially insecure network).  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  =swvs -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      