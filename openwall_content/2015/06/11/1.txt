  oss-security - - OSSEC root escalation            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Thu, 11 Jun From: Andrew Widdersheim <awiddersheim@...mail.com> To: "oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com> Subject: - OSSEC root escalation   Fix for which allows for root escalation via syscheck  Affected versions: 2.7 -  Beginning is OSSEC 2.7 a feature was added to syscheck, which is the daemon that monitors file changes on a system, called "report_changes". This feature is only available on *NIX systems. It's purpose is to help determine what about a file has changed. The logic to do accomplish this is as follows which can be found in src/syscheck/seechanges.c:  /* Run diff */ date_of_change = File_DateofChange(old_location); snprintf(diff_cmd, "diff \"%s\" \"%s\"> \"%s/local/%s/diff.%d\" "     "2>/dev/null",     tmp_location, old_location,     DIFF_DIR_PATH, filename + 1, (int)date_of_change); if (system(diff_cmd) != {     merror("%s: ERROR: Unable to run diff for %s",            ARGV0,  filename);     return (NULL); }  Above, on line the system() call is used to shell out to the system's "diff" command. The raw filename is passed in as an argument which presents an attacker with the possibility to run arbitrary code. Since the syscheck daemon runs as the root user so it can inspect any file on the system for changes, any code run using this vulnerability will also be run as the root user.  An example attack might be creating a file called "foo-$(touch bar)" which should create another file "bar".  Again, this vulnerability exists only on *NIX systems and is contingent on the following criteria:  1. A vulnerable version is in use. 2. The OSSEC agent is configured to use syscheck to monitor the file system for changes. 3. The list of directories monitored by syscheck includes those writable by underprivileged users. 4. The "report_changes" option is enabled for any of those directories.  The fix for this is to create temporary trusted file names that symlink back to the original files before calling system() and running the system's "diff" command. 		 	   		   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      