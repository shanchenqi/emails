  oss-security - Re: Re: CVE Request: various issues in PHP            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 18 Jun From: Tomas Hoger <thoger@...hat.com> To: cve-assign@...re.org Cc: oss-security@...ts.openwall.com, kaplanlior@...il.com, security@....net Subject: Re: Re: CVE Request: various issues in PHP  On Tue, 16 Jun (EDT) cve-assign@...re.org wrote:  > In this type of situation, CVEs are assigned on a per-discoverer basis. > is for thoger@...hat.com discoveries, whereas > is for yohgaki@....net. See: >  >   >   >  > > dir()/opendir() and chroot() >  > Four weeks ago, we asked security@....net to contact us if those other > changed functions were associated with vulnerability fixes. They have > not contacted us about this. >  > Are you reporting that some or all of them had vulnerabilities?  With all these issues, it's bit tricky.  Many of those that got corrected recently seem rather unlikely to be used with untrusted inputs.  However, if you think hard, you may be able to come up with some convoluted use case where they matter.  So it may not be easy to draw the line between those that may still qualify as security fixes and those that don't.  The recent approach was to handle them as security (e.g. upstream bugs were changed to security bugs and made private until they were fixed).   > For example, is it reasonable to expect that a PHP application may > want the client to make a choice of a chroot directory, and the > intended behavior is to restrict the choice to a name ending in ".d" > but this can be bypassed by something like a > "/usr/local/var/x/does-not-end-in-dot-d\0.d" value?  With chroot requiring root privileges, the function should not be used in typical PHP use cases at all.  So the above example does not seem likely.  > > More unserialize issues. >  > > > > >  > Use for the taoguangchen@...oud.com discovery fixed in > >  >  > > >  > Use for the taoguangchen@...oud.com discoveries in bug > that were fixed in - > SoapClient::__getLastRequest, SoapClient::__getLastResponse, > SoapClient::__getLastRequestHeaders, > SoapClient::__getLastResponseHeaders, SoapClient::__getCookies, and > SoapClient::__setCookie. >  > Use for the other vulnerabilities fixed in > with the exception that the > issue involving the uri property in do_soap_call is already covered by > >  >  > > >  > Use for this issue mentioned at UTC] > in bug >  >  > > UTC] >  > Use for the exception::getTraceAsString issue. As > mentioned at UTC], the affected versions for this > issue are different from those of other issues discussed in bug  Out of curiosity, why all the splits here?  E.g. and have same reporter, same type, same affected (released) versions, and the same PHP extension.  I assume is separate because of different / unclear reporter.  and seem like possible candidate for merging with / as they also have the same reporter and versions.  There's benefit of having them separate as they don't affect SOAP extension, but issue affecting different module of the code base is not a typical reason for split.  Thank you!  --  Tomas Hoger / Red Hat Product Security  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      