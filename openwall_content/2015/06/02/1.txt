  oss-security - Re: CVE requests / Advisory: phpMyBackupPro            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 2 Jun From: Matthew Daley <mattd@...fuzz.com> To: cve-assign@...re.org Cc: oss-security@...ts.openwall.com Subject: Re: CVE requests / Advisory: phpMyBackupPro  Ping.  On 4 May at Matthew Daley <mattd@...fuzz.com> wrote: > On 4 May at  <cve-assign@...re.org> wrote: >> The final concern is Issue #3. We believe it's valuable to search for >> duplicate CVEs, but there was no comment about whether >> is the same issue. If that issue was fixed and then reintroduced >> between versions 2.1 and 2.5, then there can be two new CVE IDs for >> the report. > > Huh, didn't stumble across that CVE. > >> If that issue was never fixed, then there was a duplicate >> discovery. We believe that applies to the larger >> problem: an attacker could use any number of "../" sequences after the >> "get_file.php?view=" part of the URI, including zero "../" sequences. >> There would then be one additional CVE ID for the behavior in 2.5, >> because that behavior represents an incomplete fix for >> >> By default, we would use the second interpretation for Issue #3. In >> other words, unless someone can establish that was fixed >> in 2.2, 2.3, or 2.4, we'll conclude that Issue #3 is a duplicate >> discovery, and we'll send the one ID for the "incomplete fix" CVE. > > So, a disclosure for is at > Looking at it, there's a > relevant snippet of (presumably) 2.1's code: > > --- 8< --- > // show the requested file > if (isset($_GET['view']) && file_exists($_GET['view'])) { >         if (isset($_GET['download'])) { >                 header("Content-Type: application/octet-stream"); >                 header("Content-Disposition: attachment; > filename=".basename($_GET['view'])); >                 readfile($_GET['view']); >         } else { >                 ... >         } > --- 8< --- > > The equivalent code in 2.4 is: > > --- 8< --- > // show the requested file > if (isset ($_GET['view']) && file_exists($_GET['view'])) { > >         $ext4 = substr($_GET['view'],-4); >         $ext5 = substr($_GET['view'],-5); >         $ext7 = substr($_GET['view'],-7); >         $ext8 = substr($_GET['view'],-8); >         if ($ext4 != ".php" && $ext5 != ".html" && $ext4 != ".htm" && > $ext5 != ".php3" && $ext4 != ".sql" && $ext8 != ".sql.zip" && $ext7 != > ".sql.gz") { >                 echo GF_INVALID_EXT . "!"; >         } else { >                 if (isset ($_GET['download'])) { >                         header("Content-Type: application/octet-stream"); >                         header("Content-Disposition: attachment; > filename=" . basename($_GET['view'])); >                         readfile($_GET['view']); >                 } else { >                         ... >                 } >         } > --- 8< --- > > So it appears that the attempted fix to was to add a > file extension whitelist (.php, .html, .php3, ...). However, directory > traversal was still possible after this fix, and the whitelisted file > extensions still allow "interesting" files to be retrieved, namely the > config PHP file. > > In response to my bug report, in 2.5 a filename suffix blacklist was > added to attempt to fix the latter issue, but it can still be bypassed > (by adding a /x/../ sequence to the last part of the path). > > So, I would suggest: > > * = original fully-arbitrary file download > * New CVE = incomplete fix in 2.2(?) (adding a file extension whitelist) > * New CVE = incomplete fix in 2.5 (adding a filename suffix blacklist) > > HTH, > > - Matthew  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      