  oss-security - Re: CVE Request: bson-ruby DoS and possible injection            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Sat,  6 Jun (EDT) From: cve-assign@...re.org To: phillmv@...te.io Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: CVE Request: bson-ruby DoS and possible injection  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  >  As far as we can tell, this requires three CVE IDs because there were three independent mistakes.  is for original implementation of legal? using the regular expression.  is for the bernerdschaefer commit in which legal? began using the \A\h{24}\Z regular expression. The mongo_ruby_regexp.html blog post describes this as "proper" but later explains that it was problematic, in at least one context, because of a minor DoS that would have been avoided if the correct \A\h{24}\z (lowercase 'z') had been used instead.  is for the durran commit in which the \A\h{24}\Z regular expression was changed to the regular expression.  The copying of the original mistake from Moped::BSON to one or more other codebases doesn't require additional CVE IDs.  Similarly, the copying of the \A\h{24}\Z mistake or the second mistake to one or more other codebases doesn't require additional CVE IDs. (It's quite possible that no such copying ever occurred.)  The claim in of:    Regexp are just like cars - they should work as same and similar as   it's possible. Breaking standard behavior by purpose and telling   people "It's not a bug, it's a feature" looks so disgusting to me.   It's not a feature, it's a vulnerability.  is not accepted as a Ruby vulnerability by the CVE project. There is no CVE ID for the observation that Ruby regular-expression semantics can be considered different from regular-expression semantics seen elsewhere.  If there are other products (that otherwise qualify for CVE IDs) with incorrect and security-relevant uses of ^$ in Ruby code, then there can be additional CVE IDs for each independent codebase. For example, referring to the "Showcases time" section of the saferweb-injects-in-various-ruby.html page, there can't be a CVE ID for GitHub.com (because it could be site-specific code) but there could be a CVE ID if the issue affected a version (if one existed) of the GitHub Enterprise product.  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  iQEcBAEBAgAGBQJVcxluAAoJEKllVAevmvmsrrcH/iywyYQPmcd+Bn6gkRKfxUsx =o3AI -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      