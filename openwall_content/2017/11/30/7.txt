  oss-security - Xen Security Advisory - Missing p2m error  checking in PoD code            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Thu, 30 Nov From: Xen.org security team <security@....org> To: xen-announce@...ts.xen.org, xen-devel@...ts.xen.org,  xen-users@...ts.xen.org, oss-security@...ts.openwall.com CC: Xen.org security team <security-team-members@....org> Subject: Xen Security Advisory - Missing p2m error  checking in PoD code  -----BEGIN PGP SIGNED MESSAGE----- Hash:              Xen Security Advisory /                               version 3                   Missing p2m error checking in PoD code  UPDATES IN VERSION 3 ====================  CVE assigned.  Fixed "Reported-by" tags in patch commit messages.  ISSUE DESCRIPTION =================  Certain actions require modification of entries in a guest's P2M (Physical-to-Machine) table.  When large pages are in use for this table, such an operation may incur a memory allocation (to replace a large mapping with individual smaller ones).  If this allocation fails, the p2m_set_entry() function will return an error.  Unfortunately, several places in the populate-on-demand code don't check the return value of p2m_set_entry() to see if it succeeded.  In some cases, the operation was meant to remove an entry from the p2m table.  If this removal fails, a malicious guest may engineer that the page be returned to the Xen free list, making it available to be allocated to another domain, while it retains a writable mapping to the page.  In other cases, the operation was meant to remove special populate-on-demand entries; if this removal fails, the internal accounting becomes inconsistent and may eventually hit a BUG().  The allocation involved comes from a separate pool of memory created when the domain is created; under normal operating conditions it never fails, but a malicious guest may be able to engineer situations where this pool is exhausted.  IMPACT ======  An unprivileged guest can retain a writable mapping of freed memory. Depending on how this page is used, it could result in either an information leak, or full privilege escalation.  Alternatively, an unprivileged guest can cause Xen to hit a BUG(), causing a clean crash - ie, host-wide denial-of-service (DoS).  VULNERABLE SYSTEMS ==================  All systems from Xen 3.4 are vulnerable.  Only x86 systems are vulnerable.  ARM is not vulnerable.  x86 PV VMs cannot leverage the vulnerability.  Only systems with 2MiB or 1GiB HAP pages enabled are vulnerable.  The vulnerability is largely restricted to HVM guests which have been constructed in Populate-on-Demand mode (i.e. with memory < maxmem):  x86 HVM domains without PoD (i.e. started with memory == maxmem, or without mentioning "maxmem" in the guest config file) also cannot leverage the vulnerability, in recent enough Xen versions:   4.8.x and later: all versions safe if PoD not configured   4.7.x: and later safe if PoD not configured   4.6.x: and later safe if PoD not configured   4.5.x: and later safe if PoD not configured   4.4.x and earlier: all versions vulnerable even if PoD not configured  The commit required to prevent this vulnerability when PoD not configured is   xen/physmap: Do not permit a guest to populate PoD pages for itself and the corresponding backports.  MITIGATION ==========  Running only PV guests will avoid this issue.  Running HVM guests only in non-PoD mode (maxmem == memory) will also avoid this issue.  NOTE: In older releases of Xen, an HVM guest can create PoD entries itself; so this mitigation will not be effective.  Specifying "hap_1gb=0 hap_2mb=0" on the hypervisor command line will also avoid the vulnerability.  Alternatively, running all x86 HVM guests in shadow mode will also avoid this vulnerability.  (For example, by specifying "hap=0" in the xl domain configuration file.)  CREDITS =======  This issue was discovered by George Dunlap of Citrix.  RESOLUTION ==========  Applying the appropriate attached patch resolves this issue.            xen-unstable       Xen 4.9.x       Xen 4.8.x       Xen 4.7.x       Xen 4.6.x       Xen 4.5.x  $              $  DEPLOYMENT DURING EMBARGO =========================  Deployment of the patches and/or mitigations described above (or others which are substantially similar) is permitted during the embargo, even on public-facing systems with untrusted guest users and administrators, with ONE exception:  Removing the ability to boot in populate-on-demand mode is NOT permitted during the embargo on public cloud systems.  This is because doing so might alert attackers to the nature of the vulnerability. Deployment of this mitigation is permitted only AFTER the embargo ends.  Distribution of updated software is prohibited (except to other members of the predisclosure list).  Predisclosure list members who wish to deploy significantly different patches and/or mitigations, please contact the Xen Project Security Team.  (Note: this during-embargo deployment notice is retained in post-embargo publicly released Xen Project advisories, even though it is then no longer applicable.  This is to enable the community to have oversight of the Xen Project Security Team's decisionmaking.)  For more information about permissible uses of embargoed information, consult the Xen Project community's agreed Security Policy:   http://www.xenproject.org/security-policy.html -----BEGIN PGP SIGNATURE----- Version: GnuPG v1  =wtMZ -----END PGP SIGNATURE-----  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      