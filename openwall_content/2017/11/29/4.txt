  oss-security - [SECURITY ADVISORY] curl: SSL out of buffer access            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Wed, 29 Nov (CET) From: Daniel Stenberg <daniel@...x.se> To: curl security announcements -- curl users <curl-users@...l.haxx.se>,         curl-announce@...l.haxx.se,         libcurl hacking <curl-library@...l.haxx.se>,         oss-security@...ts.openwall.com Subject: [SECURITY ADVISORY] curl: SSL out of buffer access  SSL out of buffer access ========================  Project curl Security Advisory, November 29th -  VULNERABILITY -------------  libcurl contains an out boundary access flaw in SSL related code.  When allocating memory for a connection (the internal struct called `connectdata`), a certain amount of memory is allocated at the end of the struct to be used for SSL related structs. Those structs are used by the particular SSL library libcurl is built to use. The application can also tell libcurl which specific SSL library to use if it was built to support more than one.  The math used to calculate the extra memory amount necessary for the SSL library was wrong on 32 bit systems, which made the allocated memory too small by 4 bytes. The last struct member of the last object within the memory area could then be outside of what was allocated. Accessing that member could lead to a crash or other undefined behaviors depending on what memory that is present there and how the particular SSL library decides to act on that memory content.  Specifically the vulnerability is present if libcurl was built so that `sizeof(long long *) < sizeof(long long)` which as far as we are aware only happens in 32-bit builds.  We are not aware of any exploit of this flaw.  INFO ----  This bug was introduced in commit July  The Common Vulnerabilities and Exposures (CVE) project has assigned the name to this issue.  AFFECTED VERSIONS -----------------  This is only an issue on systems with 32 bit pointers. (Technically, on systems where `sizeof(long long *) < sizeof(long long)`.)  - Affected versions: libcurl to and including - Not affected versions: libcurl < and >=  curl is used by many applications, but not always advertised as such.  THE SOLUTION ------------  In libcurl version the allocation size is corrected.  A [patch for is available.  RECOMMENDATIONS ---------------  We suggest you take one of the following actions immediately, in order of preference:    A - Upgrade curl to version    B - Apply the patch to your version and rebuild  TIME LINE ---------  It was reported to the curl project on November 18,  We contacted distros@...nwall on November 24.  curl was released on November 29 coordinated with the publication of this advisory.  (The [original was made in public)  CREDITS -------  Reported by John Schoenick. Patch by Ray Satiro.  Thanks a lot!  --     / daniel.haxx.se  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      