  oss-security - Re: Race condition between UDP bind(2) and connect(2)  delivers wrong datagrams            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Wed, 8 Nov (CST) From: Bob Friesenhahn <bfriesen@...ple.dallas.tx.us> To: oss-security@...ts.openwall.com cc: "Jonas 'Sortie' Termansen" <sortie@...si.org> Subject: Re: Race condition between UDP bind(2) and connect(2)  delivers wrong datagrams  On Wed, 8 Nov Eric Blake wrote: >> >> This issue is not that case because Darwin[1], DragonFly[2], FreeBSD[3], >> GNU/Hurd (though by importing Linux man pages), Linux[4], NetBSD[5], and >> OpenBSD[6] all document behavior compatible with POSIX[7]. > > It doesn't matter what the implementations document (if their > documentation is copying from POSIX), but what they actually DO.  For the purpose of this list (about security) it seems to me that the  current behavior makes use of the recv(2) (or read(2)) system calls  inherently insecure since there is no way to verify that a received  message is from the expected source address.  The only work-around is  to intentionally discard messages until no more messages are  available, but this may discard valid messages.  This makes most common uses of recv(2) insecure.  Bob --  Bob Friesenhahn bfriesen@...ple.dallas.tx.us, http://www.simplesystems.org/users/bfriesen/ GraphicsMagick Maintainer,    http://www.GraphicsMagick.org/  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      