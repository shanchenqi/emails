  oss-security - Re: Fw: Security risk of vim swap files            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 6 Nov From: Seth Arnold <seth.arnold@...onical.com> To: oss-security@...ts.openwall.com Subject: Re: Fw: Security risk of vim swap files  On Sun, Nov 05, at Kurt Seifried wrote: > Also you're all still ignoring umask =(. Please, when you create a new > file, check the umask and subtract it to make sure you're abiding by the > user's wishes.  Is it not the kernel's responsibility to enforce umask(2) is properly applied?  My umask(3p) includes:         The file mode creation mask of the process is used to turn        off permission bits in the mode argument supplied during        calls to the following functions:          *  open(), openat(), creat(), mkdir(), mkdirat(), mkfifo(),            and mkfifoat()          *  mknod(), mknodat()          *  mq_open()          *  sem_open()  Obviously there's good case to be made that manual chmod(2) calls could or should be modified by umask(2) values by hand, but probably all those chmod(2) calls ought to be re-written to set the modes correctly at file creation time (or mkdir, etc) to avoid race conditions.  Thanks  Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      