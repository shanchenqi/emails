  oss-security - Re: Fw: Security risk of vim swap files            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 1 Nov From: Tim <tim-security@...tinelchicken.org> To: oss-security@...ts.openwall.com Subject: Re: Fw: Security risk of vim swap files  > > Also, it almost never makes sense to put things in /tmp, for several > > reasons pointed out by others.  Making ~/.vim/... the default location > > clearly is the best solution. >  > And all those reasons make no sense. /tmp has a sticky bit precisely so that > people could put stuff there, as opposed to /run.  We've been spending decades fixing filesystem races that arise from cases where people use temporary files in world-writable directories. You have to get a half dozen things exactly correct in order to use /tmp.  Why take the risk?  Doesn't every normal (human) user account have a home directory that is already protected?   > Just to clarify: > 1. vim creates a swap file applying user's umask. >    Tested with vim on ArchLinux and vi on Fedora, if your vim doesn't do that, >    the corresponding package is broken.  Glad to hear at least some implementations are safe.  But that is just one of several potential issues.   > 2. It is totally OK to edit files in /tmp or /dev/shm or /var/tmp. >    The described "attack" when someone plants a /tmp/file.swp before another >    user edits /tmp/file is not going to work because vim will complain that the >    swap file already exists.  I hope they got the TOCTOU correct...  And as Alexander pointed out, /tmp is a bad place to put recovery files because everything is often wiped from /tmp at reboot.     What's wrong with ~/.vim/ ??  You've argued that /tmp is OK, but haven't given a reason why ~/.vim/ is bad.  I suppose you could argue that ~/.vim/{full-system-path-of-file} could get too long for the underlying filesystem.  Fine, then store these files as and call it a day.  tim  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      