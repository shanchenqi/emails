  oss-security - libpcre: heap-based bufffer overflow in (pcretest.c)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Mon, 20 Mar From: "Agostino Sarubbo" <ago@...too.org> To: "oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com> Subject: libpcre: heap-based bufffer overflow in (pcretest.c)  Description: libpcre is a perl-compatible regular expression library.  A fuzz on libpcre1 through the pcretest utility revealed an heap overflow in the utility itself. Will follow a feedback from upstream.  I am not going to do anything about this one. (a) It is concerned with a feature of pcretest that has been dropped from pcre2test, and (b) the input contains binary zeros, which are not supported in  pcretest input. This is documented for pcre2test but not, I see for pcretest. I have added a paragraph to the documentation.  However, it does not cost much for me inform the community that this bug exists. In any case, if you have a web application that calls directly the pcretest utility to parse untrusted data, then you are affected. Also, it is important share the details because some distros/packagers may want to patch this issue instead of follow the upstreamâs way.  The complete ASan output:  # pcretest -16 -d $FILE AddressSanitizer: heap-buffer-overflow on address at pc bp sp READ of size 2 at thread T0     #0 in     #1 in regexflip     #2 in main     #3 in __libc_start_main     #4 in _init  is located 0 bytes to the right of region allocated by thread T0 here:     #0 in malloc     #1 in new_malloc     #2 in     #3 in main     #4 in __libc_start_main  SUMMARY: AddressSanitizer: heap-buffer-overflow in  Affected version:  Commit fix: N/A  Fixed version: N/A  Credit: This bug was discovered by Agostino Sarubbo of Gentoo.  Reproducer:  Timeline: bug discovered and reported to upstream blog post about the issue  Note: This bug was found with American Fuzzy Lop.  Permalink:  -- Agostino Sarubbo Gentoo Linux Developer    Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      