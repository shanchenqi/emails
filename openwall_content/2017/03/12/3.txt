  oss-security - Fwd: wordpress before            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Sun, 12 Mar From: Craig Small <csmall@...ian.org> To: oss-security <oss-security@...ts.openwall.com> Subject: Fwd: wordpress before  FYI, The 6 wordpress CVE ids from Mitre.   - Craig  ---------- Forwarded message --------- From: <cve-request@...re.org> Date: Sun, Mar 12, at AM Subject: Re: wordpress before To: <csmall@...ian.org> Cc: <cve-request@...re.org>  -----BEGIN PGP SIGNED MESSAGE----- Hash:  > [Suggested description] > In WordPress before > there is > authenticated Cross-Site Scripting (XSS) via Media File Metadata. This is demonstrated by both > (1) mishandling of > the playlist shortcode in the wp_playlist_shortcode function in wp-includes/media.php > and (2) mishandling of meta information in the renderTracks function in > wp-includes/js/mediaelement/wp-playlist.js. > > ------------------------------------------ > > [Vulnerability Type] > Cross Site Scripting (XSS) > > ------------------------------------------ > > [Affected Product Code Base] > wordpress - > > ------------------------------------------ > > [Attack Type] > Remote > > ------------------------------------------ > > [Attack Vectors] > Two Cross-Site Scripting vulnerabilities exists in the playlist > functionality of WordPress. These issues can be exploited by > convincing an Editor or Administrator into uploading a malicious MP3 > file. Once uploaded the issues can be triggered by a Contributor or > higher using the playlist shortcode. > > ------------------------------------------ > > [Reference] > > > > > > > ------------------------------------------ > > [Has vendor confirmed or acknowledged the vulnerability?] > true > > ------------------------------------------ > > [Discoverer] > Chris Andre Dale, Yorick Koster, and Simon P. Briggs  Use   > [Suggested description] > In WordPress before (wp-includes/pluggable.php), > control characters can trick redirect URL validation. > > ------------------------------------------ > > [VulnerabilityType Other] > Trick the URL validation > > ------------------------------------------ > > [Affected Product Code Base] > wordpress - > > ------------------------------------------ > > [Attack Type] > Remote > > ------------------------------------------ > > [Reference] > > > > > ------------------------------------------ > > [Has vendor confirmed or acknowledged the vulnerability?] > true > > ------------------------------------------ > > [Discoverer] > Daniel Chatfield  Use   > [Suggested description] > In WordPress before (wp-admin/plugins.php), > unintended files can be deleted by administrators using the plugin deletion functionality. > > ------------------------------------------ > > [Vulnerability Type] > Insecure Permissions > > ------------------------------------------ > > [Affected Product Code Base] > wordpress - > > ------------------------------------------ > > [Affected Component] > wp-admin/plugins.php > > ------------------------------------------ > > [Attack Type] > Remote > > ------------------------------------------ > > [Impact Escalation of Privileges] > true > > ------------------------------------------ > > [Reference] > > > > > ------------------------------------------ > > [Has vendor confirmed or acknowledged the vulnerability?] > true > > ------------------------------------------ > > [Discoverer] > TrigInc and xuliang  Use   > [Suggested description] > In WordPress before (wp-includes/embed.php), > there is > authenticated Cross-Site Scripting (XSS) in YouTube URL Embeds. > > ------------------------------------------ > > [Vulnerability Type] > Cross Site Scripting (XSS) > > ------------------------------------------ > > [Affected Product Code Base] > wordpress - > > ------------------------------------------ > > [Attack Type] > Remote > > ------------------------------------------ > > [Reference] > > > > > ------------------------------------------ > > [Has vendor confirmed or acknowledged the vulnerability?] > true > > ------------------------------------------ > > [Discoverer] > Marc Montpas  Use   > [Suggested description] > In WordPress before (wp-admin/js/tags-box.js), > there is > cross-site scripting (XSS) via taxonomy term names. > > ------------------------------------------ > > [Vulnerability Type] > Cross Site Scripting (XSS) > > ------------------------------------------ > > [Affected Product Code Base] > wordpress - > > ------------------------------------------ > > [Affected Component] > Taxonomy names > > ------------------------------------------ > > [Attack Type] > Remote > > ------------------------------------------ > > [Reference] > > > > > ------------------------------------------ > > [Has vendor confirmed or acknowledged the vulnerability?] > true > > ------------------------------------------ > > [Discoverer] > Delta  Use   > [Suggested description] > In WordPress before > there is > cross-site request forgery (CSRF) in Press This > (wp-admin/includes/class-wp-press-this.php), leading to excessive use of server resources. > The CSRF can trigger an outbound HTTP request for a large file that is then parsed by Press This. > > ------------------------------------------ > > [Vulnerability Type] > Cross Site Request Forgery (CSRF) > > ------------------------------------------ > > [Affected Product Code Base] > wordpress - > > ------------------------------------------ > > [Affected Component] > Press This module > > ------------------------------------------ > > [Attack Type] > Remote > > ------------------------------------------ > > [Impact Denial of Service] > true > > ------------------------------------------ > > [Attack Vectors] > Craft a html file on a remote server and get admin to visit it using Press This module > > ------------------------------------------ > > [Reference] > > > > > > > ------------------------------------------ > > [Has vendor confirmed or acknowledged the vulnerability?] > true > > ------------------------------------------ > > [Discoverer] > Sipke Mellema  Use   - -- CVE Assignment Team M/S Burlington Road, Bedford, MA USA [ A PGP key is available for encrypted communications at   http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG v1  PvQbSfQLSAyPY9xY6/NF =yD6/ -----END PGP SIGNATURE----- --  Craig Small (@smallsees)   http://dropbear.xyz/     csmall at : enc.com.au Debian GNU/Linux           http://www.debian.org/   csmall at : debian.org GPG fingerprint:        5D2F  F96B DF50 FEA5   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      