  oss-security - EON 5.0 Remote Code Execution            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Thu, 23 Mar From: Sydream Labs <labs@...dream.com> To: oss-security@...ts.openwall.com Subject: EON 5.0 Remote Code Execution  # EON 5.0 Remote Code Execution  ## Description  EyesOfNetwork ("EON") is an OpenSource network monitoring solution.  ## Remote Code Execution (authenticated)  The Eonweb code does not correctly filter arguments, allowing authenticated users to execute arbitrary code.  **CVE ID**:  **Access Vector**: remote  **Security Risk**: high  **Vulnerability**: CWE-78  **CVSS Base Score**: 7.6  **CVSS Vector String**: CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:L/A:L   ### Proof of Concept 1  On the attacker's host, we start a handler:  ``` nc -lvp ```  The `selected_events` parameter is not correctly filtered before it is used by the `shell_exec()` function.  There, it is possible to inject a payload like in the request below, where we connect back to our handler:  ``` ```  #### Vulnerable code  The payload gets injected into the `$event[$key]` and `$ged_command` variables of the `module/monitoring_ged/ged_functions.php` file, line  ``` $ged_command = "-update -type $ged_type_nbr "; foreach ($array_ged_packets as $key => $value) {   if($value["type"] == true){     if($key == "owner"){       $event[$key] = $owner;     }     $ged_command .= "\"".$event[$key]."\" ";   } } $ged_command = trim($ged_command, " "); shell_exec($path_ged_bin." ".$ged_command); ```  Two other functions in this file are also affected by this problem:  * `delete($selected_events, $queue);` * `ownDisown($selected_events, $queue, $global_action);`   ### Proof of Concept 2  On the attacker's host, we start a handler:  ``` nc -lvp ```  The `module` parameter is not correctly filtered before it is used by the `shell_exec()` function.  Again, we inject our connecting back payload:  ``` ```  #### Vulnerable code  In the `module/index.php` file, line 24, we can see that our payload is injected into the `exec()` function without any sanitization:  ``` # Check optionnal module to load if(isset($_GET["module"]) && isset($_GET["link"])) {  	$module=exec("rpm -q ".$_GET["module"]." |grep '.eon' |wc -l");  	# Redirect to module page if rpm installed 	if($module!=0) { header('Location: '.$_GET["link"].''); }  } ```   ## Timeline (dd/mm/yyyy)  * : Initial discovery. * : Fisrt contact with vendor. * : Technical details sent to the security contact. * : Vendor akwnoledgement and first patching attempt. * : Testing the patch revealed that it needed more work. * : New tests done on release candidate 5.1. Fix confirmed. * : 5.1 release. Waiting for 2 weeks according to our repsonsible disclosure agreement. * : Public disclosure.  Thank you to EON for the fast response.  ## Solution  Update to version 5.1  ## Affected versions  * Version <= 5.0  ## Credits  * Nicolas SERRA <n.serra@...dream.com>  --  SYSDREAM Labs <labs@...dream.com>  GPG : C43E 2A2E 8EB4 8CD9 D5B2  * Website: https://sysdream.com/ * Twitter: @sysdream      Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      