  oss-security - Re: Recommendations GnuPG-2 replacement            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Thu, 14 Dec From: halfdog <me@...fdog.net> To: oss-security@...ts.openwall.com Subject: Re: Recommendations GnuPG-2 replacement  -----BEGIN PGP SIGNED MESSAGE----- Hash:  Jeremy Stanley writes: > On halfdog wrote: > [...] > > For all steps regarding system startup, I switched to LUKS only, > > using detached headers for special features. For release signing, > > mail sign/encrypt, a good light-weight solution is still needed. > [...] >  > I continue to use gpg2 in a release signing context, but strip > symmetrical encryption from the private signing subkey with a custom > keyring due to it being used by a headless/automated CI system which > runs on virtual machines that get deleted as soon as the signature > is generated thus leaving keys in memory isn't a concern there (and > the master private key _is_ encrypted but only ever used to create > signing subkeys and never goes anywhere near the CI system).  That's an interesting setup. For special signing purposes, where I do not want to transfer the key, nor give the gpg-agent unrestricted remote access to the key material via forwarding, I use the dirty workaround from [0]. But you specific solution sounds much more advanced.   > ... > For E-mail I'll confess I still use mutt's (well, neomutt's at > least) GnuPG integration, which has been working okay for me with > gpg2 on Debian. I haven't seen a lot of good OpenPGP implementations > besides GnuPG with at least equal levels of PGP/MIME integration > there. The obvious alternative is switching to S/MIME but you've > likely already considered that and the never-ending TTP vs WoT > debate, not to mention Debian as a community is fairly invested in > OpenPGP keys as a means of identifying and authenticating its > developers/maintainers.  Yes, the TTP/WoT is another topic. The mailing usecase is similar, only for signing - if I care to do so - I use [0] together with some tools from the "nmh" (new mail handler) community.  hd  [0] http://www.halfdog.net/Projects/CryptoTools/RemoteGnupg/ -----BEGIN PGP SIGNATURE-----  =37pc -----END PGP SIGNATURE-----    Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      