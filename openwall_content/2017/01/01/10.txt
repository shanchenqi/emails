  oss-security - Re: libtiff: multiple heap-based buffer overflow            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Sun, 1 Jan From: <cve-assign@...re.org> To: <ago@...too.org> CC: <cve-assign@...re.org>, <oss-security@...ts.openwall.com> Subject: Re: libtiff: multiple heap-based buffer overflow  -----BEGIN PGP SIGNED MESSAGE----- Hash:  >  At the moment, we will assign IDs to the issues listed with a write impact. We will later look at the issues listed with a read or undefined impact, but this has some complexity. One example is that is a one-symbol code change that fixes both a "READ of size 1" outcome and a "WRITE of size 1" outcome. Another example is that a "READ of size 1" within the source code of a command-line tool (not part of the library code that could be used in an arbitrary application) may have no risk. Apparently all of the issues were public on github.com and/or bugzilla.maptools.org during and thus they have IDs. It would be useful to include the specific bugzilla.maptools.org URL for each issue.  > tiffcrop > > AddressSanitizer: heap-buffer-overflow ... WRITE of size 1 at >  >> >> tools/tiffcrop.c: fix readContigStripsIntoBuffer() in -i (ignore) mode so >> that the output buffer is correctly incremented to avoid write outside bounds. >> Reported by Agostino Sarubbo. >> Fixes  (see also Comment #1)  Use   > tiffcp > > AddressSanitizer: heap-buffer-overflow ... WRITE of size 16 at >  >> >> tools/tiffcp.c: fix uint32 underflow/overflow that can cause heap-based >> buffer overflow. >> Reported by Agostino Sarubbo. >> Fixes  Use   > tiffcrop > Upstream said that the previous changes, fixes this too. It needs to be > bisected. > AddressSanitizer: heap-buffer-overflow ... WRITE of size at >  >>  The vendor response was "I cannot reproduce with CVS head. But I reproduce with so this has been fixed by recent commits. Could you track CVS head for your next fuzzing sessions so as to avoid wasting our time to both of us ?"  If there is additional information from bisection, please let us know.   > tiff2pdf > > AddressSanitizer: heap-buffer-overflow ... WRITE of size 2 at >  >> >> tools/tiff2pdf.c: avoid potential heap-based overflow in >> t2p_readwrite_pdf_image_tile(). >> Fixes  Use for this off-by-one error.  - --  CVE Assignment Team M/S Burlington Road, Bedford, MA USA [ A PGP key is available for encrypted communications at   http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG v1  4Kx6/mQjvfUlqCRmFWlO =WRWR -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      