  oss-security - Re: CVE Request: Plone Sandbox escape vulnerability            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Wed, 18 Jan From: <cve-assign@...re.org> To: <nathan.van.gheem@...ne.org> CC: <cve-assign@...re.org>, <oss-security@...ts.openwall.com> Subject: Re: CVE Request: Plone Sandbox escape vulnerability  -----BEGIN PGP SIGNED MESSAGE----- Hash:  > [] Accessing private content via `str.format` in through-the-web templates > and scripts. See this blog post by Armin Ronacher ( > for the > general idea. Since the `format` method was introduced in Python 2.6, this > part of the hotfix is only relevant for Plone 4 and 5, not Plone 3. >     Credit: Plone security team, Armin Ronacher >     Reference: >  > Versions Affected: > and any earlier 4.x version, and any earlier 5.x version >  > Code fixes: >  Use  The scope of this CVE does not include the "reflected Cross Site Scripting attack (XSS) in the ZMI (manage_findResult)" mentioned on the page. If that still needs a CVE ID, please let us know.  In the post, the exploitation scenarios are:  >     untrusted translators on string files. This is a big one because >     many applications that are translated into multiple languages will >     use new-style Python string formatting and not everybody will vet >     all the strings that come in.  We do not feel that a CVE would have been needed if this were the only exploitation scenario. We do not think there is a security boundary between "people who can contribute arbitrary code to a product" and "people who can contribute code that expresses translations." However, it is possible that an open-source project exists somewhere with a completely untrusted channel for translators.  >     user exposed configuration. One some systems users might be >     permitted to configure some behavior and that might be exposed as >     format strings. In particular I have seen it where users can >     configure notification mails, log message formats or other basic >     templates in web applications.  This one seems completely valid, and might be the primary exploitation scenario for  - --  CVE Assignment Team M/S Burlington Road, Bedford, MA USA [ A PGP key is available for encrypted communications at   http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG v1  =97Au -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      