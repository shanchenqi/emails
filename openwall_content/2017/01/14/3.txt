  oss-security - Apache Groovy Information Disclosure            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Sat, 14 Jan From: Paul King <paulk@...che.org> To: paulk@...che.org Cc: oss-security@...ts.openwall.com, bugtraq@...urityfocus.com Subject: Apache Groovy Information Disclosure  Severity: Important  Vendor: The Apache Software Foundation  Versions Affected:  * Unsupported Codehaus versions of Groovy from to * Apache Groovy to * Fixed in version  Impact:  Remote execution of untrusted code, DoS  Description:  When an application with Groovy on classpath uses standard Java serialization mechanisms, e.g. to communicate between servers or to store local data, it is possible for an attacker to bake a special serialized object that will execute code directly when deserialized. All applications which rely on serialization and do not isolate the code which deserializes objects are subject to this vulnerability. This is similar to but this exploit involves extra wrapping of objects and catching of exceptions which are now safe guarded against.  Mitigation:  Users of Groovy relying on (de)serialization with the affected versions should apply one of the following mitigations:  * Isolate the code doing the (de)serialization * Upgrade to Apache Groovy or later * Users of older versions of Groovy can apply the following patch to the `MethodClosure` class (`src/main/org/codehaus/groovy/runtime/MethodClosure.java`):  ``` public class MethodClosure extends Closure { +    private void readObject(java.io.ObjectInputStream stream) throws IOException, ClassNotFoundException { +        if (ALLOW_RESOLVE) { +            stream.defaultReadObject(); +        } +        throw new UnsupportedOperationException(); +    } ```  Credit:  This vulnerability was discovered by:  * Sam Thomas of Pentest Limited working with Trend Micro's Zero Day Initiative  History:  * Original advisory * Updated information on affected versions  References:  * * http://groovy-lang.org/security.html  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      