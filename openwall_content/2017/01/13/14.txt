  oss-security - Re: Nginx (Debian-based + Gentoo distros) - Root  Privilege Escalation UPDATE]            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Fri, 13 Jan From: Thomas Deutschmann <whissi@...too.org> To: oss-security@...ts.openwall.com Subject: Re: Nginx (Debian-based + Gentoo distros) - Root  Privilege Escalation UPDATE]  On Carlos Alberto Lopez Perez wrote: > /me happy to know that logrotate has a sane behaviour and avoids  > trying to rotate symlinks.  But don't forget hardlinks ...   > So the issue is than when in var/log/nginx/ there are standard logs > (non symlinked) that need to be rotated (appart from the malicious > symlinked one), then logrotate will rotate those ones, finally > running the post-rotate script that send SIGURSR1 to the nginx pid.  Just to be sure that we don't misunderstand each other:  Dawid's advisory only uses logrotate because this is present on most servers and guarantees privilege escalation on a given time which makes it easier to understand.  But escalation happens via nginx master process which is running as root and changes owner of existing files.  Without logrotate you can still exploit any system when you can write to the directory used by nginx for storing log files (and don't forget your vhosts!). The attacker only have to wait an undefined amount of time, i.e. for anyone causing nginx to chown files again. On systems running nginx it is not the question *if* it will happen but only *when*.   --  Regards, Thomas Deutschmann    Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      