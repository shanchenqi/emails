  oss-security - podofo: four null pointer dereference            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Sat, 1 Apr From: "Agostino Sarubbo" <ago@...too.org> To: "oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com> Subject: podofo: four null pointer dereference  Description: podofo is a C++ library to work with the PDF file format.  A fuzz on it through the podofotxtextract command line tool reavealed some NULL dereferences. This post will be forwarded on the upstream mailing list.  The complete ASan output:  # podofotxtextract $FILE AddressSanitizer: SEGV on unknown address (pc bp sp T0) signal is caused by a READ memory access. address points to the zero page.     #0 in PoDoFo::PdfPage::GetFromResources(PoDoFo::PdfName const&, PoDoFo::PdfName const&)     #1 in TextExtractor::ExtractText(PoDoFo::PdfMemDocument*, PoDoFo::PdfPage*)     #2 in TextExtractor::Init(char const*)     #3 in main     #4 in __libc_start_main     #5 in _start  AddressSanitizer can not provide additional info. SUMMARY: AddressSanitizer: SEGV in PoDoFo::PdfPage::GetFromResources(PoDoFo::PdfName const&,  PoDoFo::PdfName const&) Reproducer: CVE:  ##############################################################  # podofotxtextract $FILE AddressSanitizer: SEGV on unknown address (pc bp sp T0) signal is caused by a READ memory access. address points to the zero page.     #0 in PoDoFo::PdfPage::GetFromResources(PoDoFo::PdfName const&, PoDoFo::PdfName const&)     #1 in TextExtractor::ExtractText(PoDoFo::PdfMemDocument*, PoDoFo::PdfPage*)     #2 in TextExtractor::Init(char const*)     #3 in main     #4 in __libc_start_main     #5 in _start  AddressSanitizer can not provide additional info. SUMMARY: AddressSanitizer: SEGV in PoDoFo::PdfPage::GetFromResources(PoDoFo::PdfName const&,  PoDoFo::PdfName const&) Reproducer: CVE:  ##############################################################  # podofotxtextract $FILE AddressSanitizer: SEGV on unknown address (pc bp sp T0) signal is caused by a READ memory access. address points to the zero page.     #0 in PoDoFo::PdfFontFactory::CreateFont(FT_LibraryRec_**, PoDoFo::PdfObject*)     #1 in PoDoFo::PdfFontCache::GetFont(PoDoFo::PdfObject*)     #2 in TextExtractor::ExtractText(PoDoFo::PdfMemDocument*, PoDoFo::PdfPage*)     #3 in TextExtractor::Init(char const*)     #4 in main     #5 in __libc_start_main     #6 in _start  AddressSanitizer can not provide additional info. SUMMARY: AddressSanitizer: SEGV in PoDoFo::PdfFontFactory::CreateFont(FT_LibraryRec_**,  PoDoFo::PdfObject*) Reproducer: CVE:  ##############################################################  # podofotxtextract $FILE AddressSanitizer: SEGV on unknown address (pc bp sp T0) signal is caused by a READ memory access. address points to the zero page.     #0 in PoDoFo::PdfFontFactory::CreateFont(FT_LibraryRec_**, PoDoFo::PdfObject*)     #1 in PoDoFo::PdfFontCache::GetFont(PoDoFo::PdfObject*)     #2 in TextExtractor::ExtractText(PoDoFo::PdfMemDocument*, PoDoFo::PdfPage*)     #3 in TextExtractor::Init(char const*)     #4 in main     #5 in __libc_start_main     #6 in _start  AddressSanitizer can not provide additional info. SUMMARY: AddressSanitizer: SEGV in PoDoFo::PdfFontFactory::CreateFont(FT_LibraryRec_**,  PoDoFo::PdfObject*) Reproducer: CVE:  ##############################################################  Affected version:  Fixed version: N/A  Commit fix: N/A  Credit: These bugs were discovered by Agostino Sarubbo of Gentoo.  Timeline: bug discovered and reported to upstream blog post about the issue CVE assigned  Note: These bugs were found with American Fuzzy Lop.  Permalink:  -- Agostino Sarubbo Gentoo Linux Developer    Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      