  oss-security - Re: CVE Request: podofo: stack overflow in  PoDoFo::PdfParser::ReadDocumentStructure(PdfParser.cpp )            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Mon, 24 Apr From: Andrej Nemec <anemec@...hat.com> To: oss-security@...ts.openwall.com Subject: Re: CVE Request: podofo: stack overflow in  PoDoFo::PdfParser::ReadDocumentStructure(PdfParser.cpp )  Hello Xiaobo,  Unfortunately, CVE assignments are not done through this list anymore. You need to visit [1] and request a CVE by filing out the form. Could you please look at it and let the list know about the assigned CVE?  Thanks!  Best Regards,  [1] https://cveform.mitre.org/  --  Andrej Nemec, Red Hat Product Security A9C3 EFBE D57B 6DDA   On AM, Xiaobo Xiang wrote: > Hi, > > There is a infinite recursion in > PoDoFo::PdfParser::ReadDocumentStructure(PdfParser.cpp ) > In the ReadDocumentStructure function, it calls ReadXRefContents several > time, for exmple in the end of ReadDocumentStructure:. >     try { >         ReadXRefContents( m_nXRefOffset ); >     } catch( PdfError & e ) { >         e.AddToCallstack( __FILE__, __LINE__, "Unable to load xref > entries." ); >         throw e; >     } > > The ReadXRefContents and ReadXRefStreamContents will call each other if it > meet some conditions. Just as below. > > void PdfParser::ReadXRefStreamContents( pdf_long lOffset, bool > bReadOnlyTrailer ) > { >     m_device.Device()->Seek( lOffset ); >     //.... >     if(xrefObject.HasPrevious()) >     { >         try { >             m_nIncrementalUpdates++; > >             // PDFs that have been through multiple PDF tools may have a > mix of xref tables (ISO >             // and XRefStm streams (ISO and in the Prev > chain, >             // so call ReadXRefContents (which deals with both) instead of > ReadXRefStreamContents >             ReadXRefContents( xrefObject.GetPreviousOffset(), > bReadOnlyTrailer ); >         } catch(PdfError &e) { >             //.... >         } >     } > } > > void PdfParser::ReadXRefContents( pdf_long lOffset, bool bPositionAtEnd ) > { >     pdf_int64 nFirstObject = 0; >     pdf_int64 nNumObjects  = 0; > >     if( !this->IsNextToken( "xref" ) ) >     { > //      if( m_ePdfVersion < ePdfVersion_1_5 ) > //        Ulrich Arnold found linearized 1.3-pdf's with > trailer-info in xref-stream >         if( m_ePdfVersion < ePdfVersion_1_3 ) >         { >             PODOFO_RAISE_ERROR( ePdfError_NoXRef ); >         } >         else >         { >             ReadXRefStreamContents( lOffset, bPositionAtEnd ); >             return; >         } >     } > > The crash log is just as follows: > > ./podofofuzzer: Running 1 inputs 1 time(s) each. > Running: > ASAN:DEADLYSIGNAL > ================================================================= > AddressSanitizer: stack-overflow on address > (pc bp sp T0) >     #0  >     #1  >     #2  >     #3  >     #4  > > when debugging with gdb and checking the stack backtrace, it showed the > program runs out of the stack as below : > > in PoDoFo::PdfParser::ReadXRefStreamContents > bReadOnlyTrailer=false) >     at > in PoDoFo::PdfParser::ReadXRefContents > bPositionAtEnd=false) at > > in PoDoFo::PdfParser::ReadXRefStreamContents > bReadOnlyTrailer=false) >     at > in PoDoFo::PdfParser::ReadXRefContents > bPositionAtEnd=false) at > > in PoDoFo::PdfParser::ReadXRefStreamContents > bReadOnlyTrailer=false) >     at > in PoDoFo::PdfParser::ReadXRefContents > bPositionAtEnd=false) at > > in PoDoFo::PdfParser::ReadXRefStreamContents > bReadOnlyTrailer=false) >     at > in PoDoFo::PdfParser::ReadXRefContents > bPositionAtEnd=false) at > > in PoDoFo::PdfParser::ReadXRefStreamContents > bReadOnlyTrailer=false) >     at > in PoDoFo::PdfParser::ReadXRefContents > bPositionAtEnd=false) at > > in PoDoFo::PdfParser::ReadDocumentStructure > at > in PoDoFo::PdfParser::ParseFile > rDevice=..., bLoadOnDemand=true) at > > in PoDoFo::PdfParser::ParseFile > <.str> "tempinput.pdf", > bLoadOnDemand=true) >     at > in PoDoFo::PdfMemDocument::Load > <.str> "tempinput.pdf", > bForUpdate=false) >     at > in PoDoFo::PdfMemDocument::PdfMemDocument > <.str> "tempinput.pdf", > bForUpdate=false) >     at > > Thus,causing denial of service. > ​ >  > > ​ > > Best Regards,​​ > Xiang Xiaobo >    Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      