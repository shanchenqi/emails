  oss-security - elfutils: heap-based buffer overflow in ebl_object_note_type_name (eblobjnotetypename.c)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Mon, 10 Apr From: "Agostino Sarubbo" <ago@...too.org> To: "oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com> Subject: elfutils: heap-based buffer overflow in ebl_object_note_type_name (eblobjnotetypename.c)  Description: elfutils is a set of libraries/utilities to handle ELF objects (drop in replacement for libelf).  A fuzz on eu-readelf showed an heap overflow. Will follow a feedback from upstream:  Nice find. The issue is with notes that have a zero sized name (and also no descriptor data at the end of a note section). “The system reserves note information with no name (namesz==0) and with a zero-length name (name[0]==’\0′) but currently defines no types. All other names must have at least one non-null character.” So we must explicitly check for namesz == 0 before using the name data in the note.  The complete ASan output:  # eu-readelf -a $FILE AddressSanitizer: heap-buffer-overflow on address at pc bp sp READ of size 1 at thread T0     #0      #1 in ebl_object_note_type_name     #2 in handle_notes_data     #3 in handle_notes     #4 in process_elf_file     #5 in process_dwflmod     #6 in dwfl_getmodules     #7 in process_file     #8 in main     #9 in __libc_start_main     #10 in _start  is located 0 bytes to the right of 12-byte region allocated by thread T0 here:     #0 in malloc     #1 in convert_data     #2 in __libelf_set_data_list_rdlock     #3 in __elf_getdata_rdlock     #4 in elf_getdata     #5 in handle_notes     #6 in process_elf_file     #7 in process_dwflmod     #8 in dwfl_getmodules     #9 in process_file     #10 in main     #11 in __libc_start_main  SUMMARY: AddressSanitizer: heap-buffer-overflow  Shadow bytes around the buggy address:   fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa   fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa   fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa   fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa   fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa 00 02 fa fa 00 02 fa fa 00 01   fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa   fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa   fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa   fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa   fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa Shadow byte legend (one shadow byte represents 8 application bytes):   Addressable:           00   Partially addressable: 01 02 03 04 05 06 07    Heap left redzone:       fa   Heap right redzone:      fb   Freed heap region:       fd   Stack left redzone:      f1   Stack mid redzone:       f2   Stack right redzone:     f3   Stack partial redzone:   f4   Stack after return:      f5   Stack use after scope:   f8   Global redzone:          f9   Global init order:       f6   Poisoned by user:        f7   Container overflow:      fc   Array cookie:            ac   Intra object redzone:    bb   ASan internal:           fe   Left alloca redzone:     ca   Right alloca redzone:    cb Affected version:  Fixed version: (not released atm)  Commit fix:  Credit: This bug was discovered by Agostino Sarubbo of Gentoo.  CVE:  Reproducer:  Timeline: bug discovered and reported to upstream blog post about the issue CVE assigned  Note: This bug was found with American Fuzzy Lop.  Permalink:  -- Agostino Sarubbo Gentoo Linux Developer    Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      