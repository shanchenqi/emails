  oss-security - Re: Re: ***UNCHECKED*** UnRAR:  directory traversal + memory safety bugs            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Fri, 18 Aug From: Marcus Meissner <meissner@...e.de> To: oss-security@...ts.openwall.com Subject: Re: Re: ***UNCHECKED*** UnRAR:  directory traversal + memory safety bugs  Quoting from MITRE:  >> There is also a memory overread / corruption issues, are you going to assign >> more CVEs?  Yes, we looked further and it appears that all of the other issues can have CVEs.  Specifically, the UnRAR license says "UnRAR source code may be used in any software to handle RAR archives without limitations free of charge, but cannot be used to develop RAR (WinRAR) compatible archiver and to re-create RAR compression algorithm, which is proprietary." Also, the makefile can be used to build libraries from the code (libunrar.a, etc.). Therefore, someone might have a long-running process executing the UnRAR code, and any arbitrary crash (out-of-bounds read, etc.) could be a denial of service.  Although this scenario may be unlikely, here are the three CVE IDs anyway.   > [Suggested description] > libunrar.a in UnRAR before has an out-of-bounds read in the EncodeFileName::Decode > call within the Archive::ReadHeader15 function. >  > ------------------------------------------ >  > [Additional Information] > Someone else might have requested CVEs. >  > ------------------------------------------ >  > [Vulnerability Type] > memory safety >  > ------------------------------------------ >  > [Vendor of Product] > unrar >  > ------------------------------------------ >  > [Affected Product Code Base] > unrar - >  > ------------------------------------------ >  > [Reference] > >  > ------------------------------------------ >  > [Has vendor confirmed or acknowledged the vulnerability?] > true  Use   > [Suggested description] > libunrar.a in UnRAR before has an out-of-bounds read in the Unpack::Unpack20 > function. >  > ------------------------------------------ >  > [Additional Information] > Someone else might have requested CVEs. >  > ------------------------------------------ >  > [Vulnerability Type] > memory safety >  > ------------------------------------------ >  > [Vendor of Product] > unrar >  > ------------------------------------------ >  > [Affected Product Code Base] > unrar - >  > ------------------------------------------ >  > [Reference] > >  > ------------------------------------------ >  > [Has vendor confirmed or acknowledged the vulnerability?] > true  Use   > [Suggested description] > libunrar.a in UnRAR before has a buffer overflow in the Unpack::LongLZ > function. >  > ------------------------------------------ >  > [Additional Information] > Someone else might have requested CVEs. >  > ------------------------------------------ >  > [Vulnerability Type] > memory safety >  > ------------------------------------------ >  > [Vendor of Product] > unrar >  > ------------------------------------------ >  > [Affected Product Code Base] > unrar - >  > ------------------------------------------ >  > [Reference] > >  > ------------------------------------------ >  > [Has vendor confirmed or acknowledged the vulnerability?] > true  Use  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      