  oss-security - Re: nagios-core privilege escalation  via PID file manipulation            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 18 Aug From: Michael Orlitzky <michael@...itzky.com> To: oss-security@...ts.openwall.com Subject: Re: nagios-core privilege escalation  via PID file manipulation  On PM, Daniel Kahn Gillmor wrote: > On Wed Michael Orlitzky wrote: >> The problem is avoided by creating the PID file as root, before >> dropping privileges. >  > The problem can also be avoided by not using PID files at all, and > relying instead on a service manager that actually keeps track of its > children using more robust means (like wait() and SIGCHLD). >   I'm scared to reply because this is guaranteed to turn into a "you should just use systemd, grandpa" holy war.  If we had it all to do over again, I would probably agree with you. But there are still users with simple init systems, and many of those users are happy (or stuck) that way. If you want to convince upstreams to delete their PID file code and drop support for the associated init systems, you'll have to offer them something to make up for the users they'll lose.  For some projects, "the code gets simpler and to hell with those users" will suffice. But for big projects where actual money is involved, you'll have a harder time.  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      