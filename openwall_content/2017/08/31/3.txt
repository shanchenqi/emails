  oss-security - GraphicsMagick Denial of Service issue in ReadJNXImage() in coders/jnx.c            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Thu, 31 Aug From: "孙浩" <tony.sh@...baba-inc.com> To: "oss-security" <oss-security@...ts.openwall.com> Cc: "Bob Friesenhahn" <bfriesen@...ple.dallas.tx.us>,   "张洪亮(望初)" <wangchu.zhl@...baba-inc.com>,   "曲富平(杭特)" <fuping.qfp@...baba-inc.com> Subject: GraphicsMagick Denial of Service issue in ReadJNXImage() in coders/jnx.c  Hi all. Description:graphicsmagick is a collection of tools and libraries for many image formats. We found a denial of service (DoS) issue in jnx.c at line vulnerable code snippet is shown as for (j = 0; j < JNXLevelInfo[i].TileCount; j++) { PositionList[j].TileBounds.NorthEast.lat = ReadBlobLSBLong(image); PositionList[j].TileBounds.NorthEast.lon = ReadBlobLSBLong(image); PositionList[j].TileBounds.SouthWest.lat = ReadBlobLSBLong(image); PositionList[j].TileBounds.SouthWest.lon = ReadBlobLSBLong(image); PositionList[j].PicWidth = ReadBlobLSBShort(image); PositionList[j].PicHeight = ReadBlobLSBShort(image); PositionList[j].PicSize = ReadBlobLSBLong(image); PositionList[j].PicOffset = ReadBlobLSBLong(image); }When a crafted JNX image file, which claims large TileCount but does not contain sufficient backing data, is provided,the loop at line would consume huge CPU and memroy resources, since there is no EOF (End of File) check inside the loop.In our test, we used a machine with Intel(R) Xeon(R) CPU v3 @ 4 CPU cores and 16GB RAM.This bug caused CPU and up to 4GB RAM consumption.This process lasted for about 4 minutes. Affected version:  Fixed version: N/A  Commit fix: Credit: This bug was discovered by Xiaohei and Wangchu from Alibaba Security Team.  CVE:  Reproducer: https://github.com/shqking/graphicsmagick-poc/blob/master/poc.jnxThe command we was using is     gm convert poc.jnx test.jpg  Timeline: bug discovered and reported to upstream privately upstream released a fix CVE assigned   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      