  oss-security - libfpx: double-free in DfFromLB (docfile.cxx)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Thu, 17 Aug From: "Agostino Sarubbo" <ago@...too.org> To: "oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com> Subject: libfpx: double-free in DfFromLB (docfile.cxx)  Description: libfpx is a library for manipulating FlashPIX images.  Iâm aware that the link to the upstream website does not work. Iâm keeping it as well because in the future the upstream website could appear  again. Libfpx is not actively developed, I contacted the imagemagick project if they were available to patch security issues, but they said the they  are only accepting patches and push new releases. This issue was found using the gm command line tool of graphicsmagick.  The complete ASan output of the issue:  # gm identify $FILE AddressSanitizer: attempting double-free on in thread T0:     #0 in __interceptor_cfree     #1 in DfFromLB(ILockBytes*, unsigned short, unsigned int, unsigned short**, CExposedDocFile**, _XGUID*)     #2 in DfOpenStorageOnILockBytesW(ILockBytes*, IStorage*, unsigned int, unsigned short**, unsigned int, IStorage**, _XGUID*)     #3 in DfOpenStorageOnILockBytes(ILockBytes*, IStorage*, unsigned int, char**, unsigned int, IStorage**, _XGUID*)     #4 in StgOpenStorageOnILockBytes     #5 in StgOpenStorage     #6 in OLEFile::OpenOLEFile(_XGUID&, OLEStorage**, unsigned int)     #7 in OLEFile::GetCLSID(_XGUID*)     #8 in PFlashPixImageView::PFlashPixImageView(FicNom&, char const*, mode_Ouverture, long, PSearchHookObject*, FPXStatus*)     #9 in OpenImageByFilename(FicNom&, char const*, unsigned long, unsigned int*, unsigned int*, unsigned int*, unsigned int*, FPXColorspace*, PFlashPixImageView**)     #10 in FPX_OpenImageByFilename     #11 in ReadFPXImage     #12 in ReadImage     #13 in PingImage     #14 in IdentifyImageCommand     #15 in MagickCommand     #16 in GMCommandSingle     #17 in GMCommand     #18 in __libc_start_main     #19 in _init  is located 0 bytes inside of 16-byte region freed by thread T0 here:     #0 in __interceptor_cfree     #1 in CDFBasis::Release()     #2 in CExposedDocFile::~CExposedDocFile()  previously allocated by thread T0 here:     #0 in malloc     #1 in operator new(unsigned long)  SUMMARY: AddressSanitizer: double-free in __interceptor_cfree  Affected version:  Fixed version: N/A  Commit fix: N/A  Credit: This bug was discovered by Agostino Sarubbo of Gentoo.  CVE:  Reproducer:  Timeline: bug discovered blog post about the issue CVE assigned  Note: This bug was found with American Fuzzy Lop. This bug was identified with bare metal servers donated by Packet. This work is also supported by the Core Infrastructure Initiative.  Permalink:  -- Agostino Sarubbo Gentoo Linux Developer    Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      