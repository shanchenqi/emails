  oss-security - Re: Fw: Security risk of vim swap files            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 31 Oct From: Gordo Lowrey <gordo@...eval.com> To: oss-security@...ts.openwall.com Subject: Re: Fw: Security risk of vim swap files  It's not the fault of the program if an end-user insists upon use of a  stupid configuration. There's no problem with VIM here IMO.  As others have said, your version control should ignore swap files,  first of all, so they are not deployed.  If you do edit a file on the server, directly, then you should ensure  proper configuration, which brings to the second point: you should put  your swap/temp files into a directory that only you can control, like  ~/.vim/{backup/tmp} or ~/.local/tmp, etc...  On Tue, Oct 31, at AM, Solar Designer <solar@...nwall.com>  wrote: > On Tue, Oct 31, at Jakub Wilk wrote: >>  There's another problem with vim swapfiles. >>  >>  If you edit a file directly in /tmp, vim will happily read a  >> swapfile >>  that were planted there by somebody else. Local users could exploit  >> this >>  for denial of service (or maybe worse if there are any swapfile  >> parsing >>  bugs...). >>  >>  Is that a bug in vim? Or is it a user error to edit file directly in >>  /tmp? >  > Almost all manual uses of /tmp are user errors, yet we could want to > harden programs to make such misuses less risky. >  >>  In the latter case, we should fix at least vipe(1) and vidir(1) from >>  moreutils; and run-mailcap(1). >  > Alexander   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      