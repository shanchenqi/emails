  oss-security - Announce: OpenSSH 7.6 released            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Tue, 3 Oct (MDT) From: Damien Miller <djm@...nbsd.org> To: oss-security@...ts.openwall.com Subject: Announce: OpenSSH 7.6 released  OpenSSH 7.6 has just been released. It will be available from the mirrors listed at http://www.openssh.com/ shortly.  OpenSSH is a complete SSH protocol 2.0 implementation and includes sftp client and server support.  Once again, we would like to thank the OpenSSH community for their continued support of the project, especially those who contributed code or patches, reported bugs, tested snapshots or donated to the project. More information on donations may be found at: http://www.openssh.com/donations.html  Potentially-incompatible changes ================================  This release includes a number of changes that may affect existing configurations:   * ssh(1): delete SSH protocol version 1 support, associated    configuration options and documentation.   * ssh(1)/sshd(8): remove support for the MAC.   * ssh(1)/sshd(8): remove support for the arcfour, blowfish and CAST    ciphers.   * Refuse RSA keys bits in length and improve reporting for keys    that do not meet this requirement.   * ssh(1): do not offer CBC ciphers by default.  Changes since OpenSSH 7.5 =========================  This is primarily a bugfix release. It also contains substantial internal refactoring.  Security --------   * sftp-server(8): in read-only mode, sftp-server was incorrectly    permitting creation of zero-length files. Reported by Michal    Zalewski.  New Features ------------   * ssh(1): add RemoteCommand option to specify a command in the ssh    config file instead of giving it on the client's command line. This    allows the configuration file to specify the command that will be    executed on the remote host.   * sshd(8): add ExposeAuthInfo option that enables writing details of    the authentication methods used (including public keys where    applicable) to a file that is exposed via a $SSH_USER_AUTH    environment variable in the subsequent session.   * ssh(1): add support for reverse dynamic forwarding. In this mode,    ssh will act as a SOCKS4/5 proxy and forward connections    to destinations requested by the remote SOCKS client. This mode    is requested using extended syntax for the -R and RemoteForward    options and, because it is implemented solely at the client,    does not require the server be updated to be supported.   * sshd(8): allow LogLevel directive in sshd_config Match blocks;      * ssh-keygen(1): allow inclusion of arbitrary string or flag    certificate extensions and critical options.   * ssh-keygen(1): allow ssh-keygen to use a key held in ssh-agent as    a CA when signing certificates.   * ssh(1)/sshd(8): allow IPQoS=none in ssh/sshd to not set an explicit    ToS/DSCP value and just use the operating system default.   * ssh-add(1): added -q option to make ssh-add quiet on success.   * ssh(1): expand the StrictHostKeyChecking option with two new    settings. The first "accept-new" will automatically accept    hitherto-unseen keys but will refuse connections for changed or    invalid hostkeys. This is a safer subset of the current behaviour    of StrictHostKeyChecking=no. The second setting "off", is a synonym    for the current behaviour of StrictHostKeyChecking=no: accept new    host keys, and continue connection for hosts with incorrect    hostkeys. A future release will change the meaning of    StrictHostKeyChecking=no to the behaviour of "accept-new".   * ssh(1): add SyslogFacility option to ssh(1) matching the equivalent    option in sshd(8).  Bugfixes --------   * ssh(1): use HostKeyAlias if specified instead of hostname for    matching host certificate principal names;   * sftp(1): implement sorting for globbed ls;   * ssh(1): add a user@...t prefix to client's "Permission denied"    messages, useful in particular when using "stacked" connections    (e.g. ssh -J) where it's not clear which host is denying.   * ssh(1): accept unknown EXT_INFO extension values that contain \0    characters. These are legal, but would previously cause fatal    connection errors if received.   * ssh(1)/sshd(8): repair compression statistics printed at    connection exit   * sftp(1): print '?' instead of incorrect link count (that the    protocol doesn't provide) for remote listings.   * ssh(1): return failure rather than fatal() for more cases during    session multiplexing negotiations. Causes the session to fall back    to a non-mux connection if they occur.   * ssh(1): mention that the server may send debug messages to explain    public key authentication problems under some circumstances;   * Translate OpenSSL error codes to better report incorrect passphrase    errors when loading private keys;   * sshd(8): adjust compatibility patterns for WinSCP to correctly    identify versions that implement only the legacy DH group exchange    scheme.   * ssh(1): print the "Killed by signal 1" message only at LogLevel    verbose so that it is not shown at the default level; prevents it    from appearing during ssh -J and equivalent ProxyCommand configs.      * ssh-keygen(1): when generating all hostkeys (ssh-keygen -A), clobber    existing keys if they exist but are zero length. zero-length keys    could previously be made if ssh-keygen failed or was interrupted part    way through generating them.   * ssh(1): fix pledge(2) violation in the escape sequence "~&" used to    place the current session in the background.   * ssh-keyscan(1): avoid double-close() on file descriptors;   * sshd(8): avoid reliance on shared use of pointers shared between    monitor and child sshd processes.   * sshd_config(8): document available AuthenticationMethods;   * ssh(1): avoid truncation in some login prompts;   * sshd(8): Fix various compilations failures, inc   * ssh(1): make "--" before the hostname terminate argument processing    after the hostname too.   * ssh-keygen(1): switch from to for encrypting    new-style private keys. Fixes problems related to private key    handling for no-OpenSSL builds.   * ssh(1): warn and do not attempt to use keys when the public and    private halves do not match.   * sftp(1): don't print verbose error message when ssh disconnects    from under sftp.   * sshd(8): fix keepalive scheduling problem: activity on a forwarded    port from preventing the keepalive from being sent;   * sshd(8): when started without root privileges, don't require the    privilege separation user or path to exist. Makes running the    regression tests easier without touching the filesystem.   * Make integrity.sh regression tests more robust against timeouts.      * ssh(1)/sshd(8): correctness fix for channels implementation: accept    channel IDs greater than 0x7FFFFFFF.  Portability -----------   * sshd(9): drop two more privileges in the Solaris sandbox:    PRIV_DAX_ACCESS and PRIV_SYS_IB_INFO;   * sshd(8): expose list of completed authentication methods to PAM    via the SSH_AUTH_INFO_0 PAM environment variable.   * ssh(1)/sshd(8): fix several problems in the tun/tap forwarding code,    mostly to do with host/network byte order confusion.   * Add --with-cflags-after and --with-ldflags-after configure flags to    allow setting CFLAGS/LDFLAGS after configure has completed. These    are useful for setting sanitiser/fuzzing options that may interfere    with configure's operation.   * sshd(8): avoid Linux seccomp violations on ppc64le over the    socketcall syscall.   * Fix use of ldns when using ldns-config;   * configure: set cache variables when cross-compiling. The cross-    compiling fallback message was saying it assumed the test passed,    but it wasn't actually set the cache variables and this would    cause later tests to fail.   * Add clang libFuzzer harnesses for public key parsing and signature    verification.  Checksums: ==========   - SHA1 (openssh-7.6.tar.gz) =  - SHA1 =   - (openssh-7.6.tar.gz) =  - =  Please note that the signatures are base64 encoded and not hexadecimal (which is the default for most checksum tools). The PGP key used to sign the releases is available as RELEASE_KEY.asc from the mirror sites.  Reporting Bugs: ===============  - Please read http://www.openssh.com/report.html   Security bugs should be reported directly to openssh@...nssh.com  OpenSSH is brought to you by Markus Friedl, Niels Provos, Theo de Raadt, Kevin Steves, Damien Miller, Darren Tucker, Jason McIntyre, Tim Rice and Ben Lindstrom.  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      