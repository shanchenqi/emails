  oss-security - [SECURITY ADVISORY] curl: FTP PWD response parser out of bounds  read            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Wed, 4 Oct (CEST) From: Daniel Stenberg <daniel@...x.se> To: curl security announcements -- curl users <curl-users@...l.haxx.se>,         curl-announce@...l.haxx.se,         libcurl hacking <curl-library@...l.haxx.se>,         oss-security@...ts.openwall.com Subject: [SECURITY ADVISORY] curl: FTP PWD response parser out of bounds  read  FTP PWD response parser out of bounds read ==========================================  Project curl Security Advisory, October 4th -  VULNERABILITY -------------  libcurl may read outside of a heap allocated buffer when doing FTP.  When libcurl connects to an FTP server and successfully logs in (anonymous or not), it asks the server for the current directory with the `PWD` command. The server then responds with a response containing the path, inside double quotes. The returned path name is then kept by libcurl for subsequent uses.  Due to a flaw in the string parser for this directory name, a directory name passed like this but without a closing double quote would lead to libcurl not adding a trailing NUL byte to the buffer holding the name. When libcurl would then later access the string, it could read beyond the allocated heap buffer and crash or wrongly access data beyond the buffer, thinking it was part of the path.  A malicious server could abuse this fact and effectively prevent libcurl-based clients to work with it - the PWD command is always issued on new FTP connections and the mistake has a high chance of causing a segfault.  The simple fact that this issue has remained undiscovered for this long could suggest that malformed PWD responses are rare in benign servers.  We are not aware of any exploit of this flaw.  INFO ----  This bug was introduced in commit March  In libcurl version the parser always zero terminates the string but also rejects it if not terminated properly with a final double quote.  The Common Vulnerabilities and Exposures (CVE) project has assigned the name to this issue.  AFFECTED VERSIONS -----------------  - Affected versions: libcurl 7.7 to and including - Not affected versions: libcurl < 7.7 and >=  curl is used by many applications, but not always advertised as such.  THE SOLUTION ------------  A [patch for is available.  RECOMMENDATIONS ---------------  We suggest you take one of the following actions immediately, in order of preference:    A - Upgrade curl to version    B - Apply the patch to your version and rebuild    C - Switch off FTP in `CURLOPT_PROTOCOLS`  TIME LINE ---------  It was reported to the curl project on September 24,  We contacted distros@...nwall on September 25.  curl was released on October 4 coordinated with the publication of this advisory.  CREDITS -------  Reported by Max Dymond. Patch by Daniel Stenberg.  Thanks a lot!  --     / daniel.haxx.se  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      