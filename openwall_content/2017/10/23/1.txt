  oss-security - [SECURITY ADVISORY] curl: IMAP FETCH response out of bounds read            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Mon, 23 Oct (CEST) From: Daniel Stenberg <daniel@...x.se> To: curl security announcements -- curl users <curl-users@...l.haxx.se>,         curl-announce@...l.haxx.se,         libcurl hacking <curl-library@...l.haxx.se>,         oss-security@...ts.openwall.com Subject: [SECURITY ADVISORY] curl: IMAP FETCH response out of bounds read  IMAP FETCH response out of bounds read ======================================  Project curl Security Advisory, October 23rd -  VULNERABILITY -------------  libcurl contains a buffer overrun flaw in the IMAP handler.  An IMAP FETCH response line indicates the size of the returned data, in number of bytes. When that response says the data is zero bytes, libcurl would pass on that (non-existing) data with a pointer and the size (zero) to the deliver-data function.  libcurl's deliver-data function treats zero as a magic number and invokes strlen() on the data to figure out the length. The strlen() is called on a heap based buffer that might not be zero terminated so libcurl might read beyond the end of it into whatever memory lies after (or just crash) and then deliver that to the application as if it was actually downloaded.  We are not aware of any exploit of this flaw.  INFO ----  This bug was introduced in commit December when the initial support for IMAP was introduced.  The Common Vulnerabilities and Exposures (CVE) project has assigned the name to this issue.  AFFECTED VERSIONS -----------------  - Affected versions: libcurl to and including - Not affected versions: libcurl < and >=  curl is used by many applications, but not always advertised as such.  THE SOLUTION ------------  In libcurl version a zero bytes response is not passed on.  A [patch for is available.  RECOMMENDATIONS ---------------  We suggest you take one of the following actions immediately, in order of preference:    A - Upgrade curl to version    B - Apply the patch to your version and rebuild    C - Switch off IMAP in `CURLOPT_PROTOCOLS`  TIME LINE ---------  It was reported to the curl project on October 6,  We contacted distros@...nwall on October 17.  curl was released on October 23 coordinated with the publication of this advisory.  CREDITS -------  Reported by Brian Carpenter, Geeknik Labs and Also independently detected by and reported by the OSS-Fuzz project. Patch by Daniel Stenberg.  Thanks a lot!  --     / daniel.haxx.se  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      