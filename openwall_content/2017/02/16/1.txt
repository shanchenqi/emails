  oss-security - Linux: Incomplete fix for perf/core:  Fix concurrent sys_perf_event_open() vs. 'move_group' race            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Thu, 16 Feb From: Salvatore Bonaccorso <carnil@...ian.org> To: OSS Security Mailinglist <oss-security@...ts.openwall.com> Cc: Ben Hutchings <benh@...ian.org> Subject: Linux: Incomplete fix for perf/core:  Fix concurrent sys_perf_event_open() vs. 'move_group' race  Hi  The original fix for ws incomplete. Upstream has commited   which is in (and also backported to 4.9.x in This has been assigned a new CVE identifier: (assigned via -> https://cveform.mitre.org/).  Commit message reads as:  > commit > Author: Peter Zijlstra <peterz@...radead.org> > Date:   Wed Jan 11 >  >     perf/core: Fix concurrent sys_perf_event_open() vs. 'move_group' race >      >     Di Shen reported a race between two concurrent sys_perf_event_open() >     calls where both try and move the same pre-existing software group >     into a hardware context. >      >     The problem is exactly that described in commit: >      >       ("perf: Fix event->ctx locking") >      >     ... where, while we wait for a ctx->mutex acquisition, the event->ctx >     relation can have changed under us. >      >     That very same commit failed to recognise sys_perf_event_context() as an >     external access vector to the events and thereby didn't apply the >     established locking rules correctly. >      >     So while one sys_perf_event_open() call is stuck waiting on >     mutex_lock_double(), the other (which owns said locks) moves the group >     about. So by the time the former sys_perf_event_open() acquires the >     locks, the context we've acquired is stale (and possibly dead). >      >     Apply the established locking rules as per perf_event_ctx_lock_nested() >     to the mutex_lock_double() for the 'move_group' case. This obviously means >     we need to validate state after we acquire the locks. >      >     Reported-by: Di Shen (Keen Lab) >     Tested-by: John Dias <joaodias@...gle.com> >     Signed-off-by: Peter Zijlstra (Intel) <peterz@...radead.org> >     Cc: Alexander Shishkin <alexander.shishkin@...ux.intel.com> >     Cc: Arnaldo Carvalho de Melo <acme@...nel.org> >     Cc: Arnaldo Carvalho de Melo <acme@...hat.com> >     Cc: Jiri Olsa <jolsa@...hat.com> >     Cc: Kees Cook <keescook@...omium.org> >     Cc: Linus Torvalds <torvalds@...ux-foundation.org> >     Cc: Min Chong <mchong@...gle.com> >     Cc: Peter Zijlstra <peterz@...radead.org> >     Cc: Stephane Eranian <eranian@...gle.com> >     Cc: Thomas Gleixner <tglx@...utronix.de> >     Cc: Vince Weaver <vincent.weaver@...ne.edu> >     Fixes: ("perf: Fix event->ctx locking") >     Link: >     Signed-off-by: Ingo Molnar <mingo@...nel.org>  Regards, Salvatore  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      