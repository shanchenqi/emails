  oss-security - ntfs-3g: modprobe influence vulnerability via  environment variables            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Wed, 01 Feb From: "Laszlo Boszormenyi (GCS)" <gcs@...ian.org> To: oss security list <oss-security@...ts.openwall.com> Subject: ntfs-3g: modprobe influence vulnerability via  environment variables  Hi,  Jann Horn, Project Zero (Google) discovered that ntfs-3g, a read-write NTFS driver for FUSE does not not scrub the environment before executing modprobe to load the fuse module. This influence the behavior of modprobe (MODPROBE_OPTIONS environment variable, --config and --dirname options) potentially allowing for local root privilege escalation if ntfs-3g is installed setuid. This is the case for Debian, Ubuntu and probably Gentoo.  This problem is in the source since maybe before. The fix is easy, use execle instead of execl and pass NULL as environment variables. -- cut -- --- +++ @@ @@         struct stat st;         pid_t pid;         const char *cmd = "/sbin/modprobe"; +       char *env = (char*)NULL;         struct timespec req = { 0, };   /* msec */         fuse_fstype fstype;          if (!stat(cmd, &st) && !geteuid()) {                 pid = fork();                 if (!pid) { -                       execl(cmd, cmd, "fuse", NULL); +                       execle(cmd, cmd, "fuse", NULL, &env);                         _exit(1);                 } else if (pid != -1)                         waitpid(pid, NULL, 0); --- +++ @@ @@         struct stat st;         pid_t pid;         const char *cmd = "/sbin/modprobe"; +       char *env = (char*)NULL;         struct timespec req = { 0, };   /* msec */         fuse_fstype fstype;          if (!stat(cmd, &st) && !geteuid()) {                 pid = fork();                 if (!pid) { -                       execl(cmd, cmd, "fuse", NULL); +                       execle(cmd, cmd, "fuse", NULL, &env);                         _exit(1);                 } else if (pid != -1)                         waitpid(pid, NULL, 0); -- cut --  is assigned to this issue by Salvatore Bonaccorso, Debian Security Team.  Regards, Laszlo/GCS Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      