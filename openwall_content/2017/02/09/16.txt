  oss-security - zziplib: NULL pointer dereference in prescan_entry (fseeko.c)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Thu, 09 Feb From: Agostino Sarubbo <ago@...too.org> To: oss-security@...ts.openwall.com Subject: zziplib: NULL pointer dereference in prescan_entry (fseeko.c)  Description: zziplib is an intentionally lightweight library that offers the ability to  easily extract data from files archived in a single zip file.  The unzzipcat-seeko utility provided by the package, by default, without any  crafted zip shows a NULL pointer access. For completeness Iâm attaching my  reproducer.  The complete ASan output:  # unzzipcat-seeko $FILE AddressSanitizer: SEGV on unknown address (pc  bp 0xbebebebebebebeae sp T0)                                                                                                                                          signal is caused by a READ memory access.                                                                                                                                                                                                                           address points to the zero page.                                                                                                                                                                                                                                      #0 in __asan::Allocator::Reallocate(void*, unsigned long,  __sanitizer::BufferedStackTrace*)                                                               #1 in __asan::asan_realloc(void*, unsigned long,  __sanitizer::BufferedStackTrace*)                                                                        #2 in __interceptor_realloc                                                                                                                             #3 in prescan_entry                                                                                                                                                           #4 in zzip_entry_findfirst /tmp/portage/dev-                                                                                                                                                       #5 in main                                                                                                                                                                  #6 in __libc_start_main /var/tmp/portage/sys-                                                                                                                                                             #7 in _init                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    AddressSanitizer can not provide additional info.                                                                                                                                                                                                                               SUMMARY: AddressSanitizer: SEGV in  __asan::Allocator::Reallocate(void*, unsigned long,  __sanitizer::BufferedStackTrace*)                                            Affected version:  Fixed version: N/A  Commit fix: N/A  Credit: This bug was discovered by Agostino Sarubbo of Gentoo.  CVE: N/A  Reproducer:  Timeline: bug discovered and poked upstream blog post about the issue  Note: This bug was found with Address Sanitizer.  Permalink:  --  Agostino Sarubbo Gentoo Linux Developer  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      