  oss-security - Multiple XMPP Clients User Impersonation Vulnerability            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Thu, 9 Feb From: Georg Lukas <lukas@...solutions.de> To: "'bugtraq@...urityfocus.com'" <bugtraq@...urityfocus.com>, 	"oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com> CC: "jdev@...ber.org" <jdev@...ber.org> Subject: Multiple XMPP Clients User Impersonation Vulnerability  Summary -------  An incorrect implementation of Message Carbons[0] in multiple XMPP clients allows a remote attacker to impersonate any user, including contacts, in the vulnerable application's display. This allows for various kinds of social engineering attacks.  Classification --------------    - Missing Critical Step in Authentication   - Improper Verification of Source of a Communication Channel   - CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:H/A:N (score 7.1)  Affected Applications ---------------------    - yaxim and Bruno - Android)   - ChatSecure - only iOS) and Zom (all versions up to only iOS)   - poezio (0.8 -   - profanity -   - Psi+ -   - jappix to   - Jitsi -   - mcabber -   - Movim (0.8 -   - Xabber (only if manually enabled: VIP, beta - Android)   - Converse.js - -  Affected Libraries ------------------    - SleekXMPP unknown up to   - Slixmpp all versions up to  Details -------  The XMPP protocol extension Message Carbons"[0] allows a user to run multiple clients on their XMPP account by sending "carbon copies" of outgoing and incoming messages to the user's other devices (besides the one that directly sent or received the original message).  This feature must be supported by the user's server and must be explicitly enabled by the client. Carbon copies are always generated by the user's server and originate from the user's bare JID (their account address).  For example, the following is message "Hi!", sent by Alice (`alice@...p.example`) to Bob's client 1 (`bob@...p.example/client1`):  	<message from="alice@...p.example" to="bob@...p.example/client1"> 	    <body>Hi!</body> 	</message>  Bob is also logged in with carbons-enabled client 2, which receives the following carbon-copy of the message:  	<message from="bob@...p.example" to="bob@...p.example/client2"> 	    <received xmlns='urn:xmpp:carbons:2'><forwarded xmlns='urn:xmpp:forward:0'> 		<message from="alice@...p.example" to="bob@...p.example/client1"> 		    <body>Hi!</body> 		</message> 	    </forwarded></received> 	</message>  Now, client 2 can extract the original message from the carbon copy and display it accordingly. The "Security Considerations" section of explicitly states that:  | Any forwarded copies received by a Carbons-enabled client MUST be from | that user's bare JID; any copies that do not meet this requirement | MUST be ignored.  The Carbons implementation in the affected clients was lacking this test. It simply checked all incoming messages for presence of a Carbon element (`<received/>` or `<sent/>`), extracted and parsed it like a regular message.  Therefore, it was possible for Mallory to send the following specially crafted message to Bob:  	<message from="mallory@...l.example" to="b@...p.example"> 	    <received xmlns='urn:xmpp:carbons:2'><forwarded xmlns='urn:xmpp:forward:0'> 		<message from="alice@...p.example" to="bob@...p.example/client1"> 		    <body>Please come to Creepy Valley tonight, alone!</body> 		</message> 	    </forwarded></received> 	</message>  This would appear as an authentic message from Alice, including Alice' proper screen name, allowing Mallory to perform social engineering attacks on Bob.  Mitigation ----------  While the attacker can send messages in the name of somebody else, they can not see your responses. Therefore, if you receive a phony message while using an affected client, reinsure with the message sender by either challenging them with a question that can not be guessed by the attacker, or by using out-of-band means.  Xabber: disable the experimental Carbons feature in the app settings.  yaxim: Disabling Message Carbons under "Settings" / "Edit account" / "Message Carbons will not solve the problem, as the malicious messages still will be interpreted.  Timeline --------    - Discovery of vulnerability   - - 26 Notification of developers   - Release of ChatSecure     fix commit:   - Release of jappix     fix commit: 91af   - Release of Psi+     fix commit:   - Release of profanity     fix commit:   - Release of mcabber     fix commit:   - Release of poezio with slixmpp     slixmpp fix commit:   - Release of yaxim and Bruno     fix commit: 9f   - Release of Movim     fix commit: b   - Notification of Debian Security Team   - Release of profanity and (backports of the fix)   - Release of Converse.js and     fix commit:   - Release of Jitsi     fix commit: 15   - Release of Zom     fix commit: d3   - Publication of this advisory  Acknowledgements ----------------    - Daniel Gultsch for Gajim Roster Push Attack / Message     Interception[1]   - Sam Whited for (same as above in mcabber)[2]   - Thijs Alkemade for being an awesome XMPP security researcher (and     for proof-reading this)[3]  Links -----  [0] [1] https://gultsch.de/gajim_roster_push_and_message_interception.html [2] [3] https://blog.thijsalkema.de/  HTML version of advisory: PDF version of advisory: s.pdf   --  Dr.-Ing. Georg Lukas rt-solutions.de GmbH Oberländer Ufer Köln  Tel. : 16 Fax : 50 Mobil: Web : www.rt-solutions.de rt-solutions.de experts you can trust.  Sitz der Gesellschaft: Köln Eingetragen beim Amtsgericht Köln: HRB Geschäftsführer: Prof. Dr. Ralf Schumann, Dr. Stefan Schemmer  Download attachment "smime.p7s" of type "application/pkcs7-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      