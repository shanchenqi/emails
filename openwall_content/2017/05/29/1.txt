  oss-security - FreeRADIUS TLS resumption authentication bypass            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Mon, 29 May (CEST) From: Pavel Kankovsky <peak@...o.troja.mff.cuni.cz> To: oss-security@...ts.openwall.com Subject: FreeRADIUS TLS resumption authentication bypass  Vendor: The FreeRADIUS Project  Product: FreeRADIUS server   Affected Versions:  2.2.x (EOL but still found in some Linux distros): All versions.  3.0.x (stable): All versions before  3.1.x and 4.0.x (development): All versions before   Description:  The implementation of TTLS and PEAP in FreeRADIUS skips inner authentication when it handles a resumed TLS connection. This is a feature but there is a critical catch: the server must never allow resumption of a TLS session until its initial connection gets to the point where inner authentication has been finished successfully.  Unfortunately, affected versions of FreeRADIUS fail to reliably prevent resumption of unauthenticated sessions unless the TLS session cache is disabled completely and allow an attacker (e.g. a malicious supplicant)  to elicit EAP Success without sending any valid credentials.   Mitigation:  (a) Disable TLS session caching. Set enabled = no in the cache subsection  of eap module settings (raddb/mods-enabled/eap in the standard  v3.0.x-style layout).  (b) Upgrade to version   Credits:  Stefan Winter of the RESTENA Foundation (initial discovery)  Luboš Pavlíček of the University of Economics, Prague (independent  rediscovery)   Timeline:  "a few months" ago: Vulnerability discovered and reported by Stefan Winter.  The first (and mostly ineffective) attempt to fix the vulnerability in v3.0.x branch (commits and  Vulnerability fixed in v3.1.x and v4.0.x branches (commits and respectively).  Version released without any explicit indication that it was supposed to fix a serious vulnerability (but it was probably better that way because the vulnerability was not really fixed).  Vulnerability rediscovered by Luboš Pavlíček.  PoC exploit developed and used to confirm is still vulnerable. Vulnerability reported... again.  The second (and hopefuly final) attempt to fix the vulnerability in v3.0.x (commits and  Version released.   References:  [1] <http://freeradius.org/security.html> [2]  --  Pavel Kankovsky aka Peak                      "Que sçay-je?"  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      