  oss-security - Re: global buffer overflow in III_i_stereo  (layer3.c)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Tue, 11 Jul From: "Dr. Thomas Orgis" <thomas.orgis@...-hamburg.de> To: Jonas Thiem <jonas@...em.email> Cc: oss-security@...ts.openwall.com Subject: Re: global buffer overflow in III_i_stereo  (layer3.c)  Am Tue, 11 Jul schrieb Jonas Thiem <jonas@...em.email>:  > On Dr. Thomas Orgis wrote: > > My program accesses memory that belongs > > to my program … unless the compiler inserts forbidden zones in there.   >  > So why do you know for sure that no program would store private keys or > other sensitive data there? Or is this only static data by the mp3 > library itself?  I am speaking of memory allocated for static variables inside the library we are talking about. This is in a source file of the lib:  static real   struct bandInfoStruct {         unsigned short longIdx[23];         unsigned char longDiff[22];         unsigned short shortIdx[14];         unsigned char shortDiff[13]; };  static const struct bandInfoStruct bandInfo[9] = {{   The bug is that accesses to the pow arrays, at worst pow_2_2, can happen with 31 in the last index instead of 15. You squarely land up to bytes (for real==float) into the bandInfo array. Not sure if one could trigger a floating point exception with the values of bandInfo (I see only floating point representatiosn of zero in there with a qick test) … but I do not see disclosure of any secrets.  Anyhow, we're generating lots of noise over an issue that of course is fixed now with the released Regardless on how serious you think it is, the upgrade is of course encouraged. Moving on to new bugs …   Alrighty then,  Thomas  --  Dr. Thomas Orgis Universität Hamburg RRZ / Basis-Infrastruktur / HPC Schlüterstr. 70 Hamburg Tel.: Fax: 38  Download attachment "smime.p7s" of type "application/pkcs7-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      