  oss-security - Re: Linux kernel: scsi: nlmsg is not  properly parsed in iscsi_if_rx()            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 25 Sep (EDT) From: Vladis Dronov <vdronov@...hat.com> To: oss-security@...ts.openwall.com Subject: Re: Linux kernel: scsi: nlmsg is not  properly parsed in iscsi_if_rx()  heololo,  an additional research shows that the very latest kernels are not showing a crash with a reproducer. git bisect showed that:  commit (between and is the first commit a crash is not reproduced with:  commit Author: Steffen Klassert <steffen.klassert@...unet.com> Date:   Sat Apr 8 skbuff: Extend gso_type to unsigned int.  i.e. this is commit which fixed the crash. checking the code, it looks like struct skb_shared_info's fields were reordered, so a field which overwrite was causing a panic has been moved. nevertheless, the buffer overwrite is still there, so a suggested patch (or its later version) is still needed.  for a proof compare a flaw description:  > ev = nlmsg_data(nlh) will acutally get skb_shinfo(SKB) instead and set a > new value to skb_shinfo(SKB)->nr_frags by ev->type.  and the commit message:  >    The remaining two byte hole is moved to the >    beginning of the structure, this protects us >    from immediate overwites on out of bound writes >    to the sk_buff head. >  >    Structure layout on before the change: >  >    struct skb_shared_info { >            unsigned char              nr_frags; >            __u8                       tx_flags; >  >    Structure layout on after the change: >  >    struct skb_shared_info { >            short unsigned int         _unused; >            unsigned char              nr_frags; >            __u8                       tx_flags;  Best regards, Vladis Dronov | Red Hat, Inc. | Product Security Engineer  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      