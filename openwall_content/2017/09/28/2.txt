  oss-security - OpenVPN remote buffer overflow            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Thu, 28 Sep From: Guido Vranken <guidovranken@...il.com> To: oss-security@...ts.openwall.com Subject: OpenVPN remote buffer overflow  This concerns a remote buffer overflow vulnerability in OpenVPN. It has been fixed in OpenVPN and released on 26 Sept It is suspected that only a small number of users is vulnerable to this issue, because it requires having explicitly enabled the outdated ‘key method 1’.  The OpenVPN advisory can be found here:  In ssl.c, key_method_1_read() calls read_key() which doesn’t perform adequate bounds checks. cipher_length and hmac_length are specified by the peer:  uint8_t cipher_length; uint8_t hmac_length; CLEAR(*key); if (!buf_read(buf, &cipher_length, 1)) {     goto read_err; } if (!buf_read(buf, &hmac_length, 1)) {     goto read_err; }  And this many bytes of data are then read into key->cipher and key->hmac:  if (!buf_read(buf, key->cipher, cipher_length)) {     goto read_err; } if (!buf_read(buf, key->hmac, hmac_length)) {     goto read_err; }  In other words, it’s a classic example of bounds check resulting in a buffer overflow.  Like my previous set of OpenVPN vulnerabilities, this issue was also found with fuzzing.  Guido  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      