  oss-security - Re: unrar-free/unrar-gpl: directory traversal and  other issues            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Mon, 4 Sep From: Salvatore Bonaccorso <carnil@...ian.org> To: oss-security@...ts.openwall.com Subject: Re: unrar-free/unrar-gpl: directory traversal and  other issues  Hi  FTR three CVEs were assigned, and for Debian I raised the question if unrar-free should be removed from the archive via:   On Sun, Aug 20, at Hanno Bรถck wrote: > Issue 1: Directory Traversal >  > Creating a rar v2 archive with path names of the form ../[filename] > will unpack them into the upper directory.  This was assigned  > Issue 2: Stack overread >  > A malformed archive can cause a stack overread, detectable with asan. > This issue doesn't happen reliably, I haven't investigated further. >  > AddressSanitizer: stack-buffer-overflow on address at pc bp sp > READ of size at thread T0 >     #0 in __interceptor_strchr.part.33 >     #1 in stricomp >     #2 in ExtrFile >     #3 in urarlib_get >     #4 in unrar_extract_file >     #5 in unrar_extract >     #6 in main >     #7 in __libc_start_main >     #8 in _start >  > Address is located in stack of thread T0 at offset in frame >     #0 in stricomp >  >   This frame has 2 object(s): >     [32, 'S1' >     'S2' <== Memory access at offset partially >     underflows this variable  This was assigned  > Issue 3: Null pointer >  > A malformed input file can cause a null pointer read. >  > AddressSanitizer: SEGV on unknown address (pc bp sp T0) > signal is caused by a READ memory access. > address points to the zero page. >     #0 in DecodeNumber >     #1 in Unpack >     #2 in ExtrFile >     #3 in urarlib_get >     #4 in unrar_extract_file >     #5 in unrar_extract >     #6 in main >     #7 in __libc_start_main >     #8 in _start  This was assigned  Regards, Salvatore  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      