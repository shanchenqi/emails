  oss-security - Linux kernel: packet: buffer overflow in  tpacket_rcv()            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Mon, 18 Sep (EDT) From: Vladis Dronov <vdronov@...hat.com> To: oss-security@...ts.openwall.com Subject: Linux kernel: packet: buffer overflow in  tpacket_rcv()  Heololo,  > [Suggested description] > The tpacket_rcv() function in 'net/packet/af_packet.c' file in the Linux > kernel before mishandles vnet headers, which might allow local users > to cause a denial of service (buffer overflow, and disk and memory corruption) > or possibly have unspecified other impact via crafted system calls. > > ------------------------------------------ > > [Additional Information] > A buffer overflow was discovered in tpacket_rcv() function in the > Linux kernel since through A number of socket-related > syscalls can be made to set up a configuration when each packet > received by a network interface can cause writing up to 10 bytes to a > kernel memory outside of a kernel buffer. This can cause unspecified > kernel data corruption effects, including damage of in-memory and > on-disk XFS data.  An upstream commit which introduced the flaw is the flaw was fixed by  > our research shows: > > - a reproducer run as root makes the issue apparent (detected via >   KASAN). That is, writing up to 10 bytes to an unallocated kernel >   memory per each packet sent to a network interface on the host. > > - while having a reproducer running as root, it can corrupt xfs root >   filesystem by flooding the test machine with packets while doing a >   rsync of high number of small files. after corrupting the in-memory >   XFS data (and subsequent XFS self-unmount), the on-disk layout is >   damaged too.  An attacker can exploit the flaw if granted root permissions in a user+net namespace, i.e. with an ability to open PF_PACKET+SOCK_RAW sockets:  [REGULAR USER] <= not vulnerable, expected  $ ./vnethdr socket(): create raw packet socket failed: Operation not permitted  [ROOT] <= vulnerable, expected  # ./vnethdr  socket() fd=3 setsockopt() ret=0 mmap() bind() ret=0  [ROOT IN JUST USER-NS] <= not vulnerable, expected  $ unshare -U -r # ./vnethdr socket(): create raw packet socket failed: Operation not permitted  [ROOT IN USER+NET NS] <= vulnerable, bad!  $ unshare -U -r -n # ./vnethdr socket() fd=3 setsockopt() ret=0 mmap() bind() ret=0  > There are still points which are open in the assessment: > >  - whether we are effectively able to spray the heap with a shellcode >    (and gain root access) from the host itself > >  - whether we are effectively able to spray the heap with a shellcode >    from outside, by crafting packets > > ------------------------------------------ > > [Vulnerability Type] > Buffer Overflow > > ------------------------------------------ > > [Vendor of Product] > kernel.org: Linux kernel > > ------------------------------------------ > > [Affected Product Code Base] > Linux kernel - since through > > ------------------------------------------ > > [Affected Component] > Linux kernel, net/packet/af_packet.c file, tpacket_rcv() function > > ------------------------------------------ > > [Attack Type] > Local > > ------------------------------------------ > > [Impact Denial of Service] > true > > ------------------------------------------ > > [CVE Impact Other] > Data corruption > > ------------------------------------------ > > [Attack Vectors] > a number of socket-related syscalls can be made to set up a > configuration when each packet received by a network interface can > cause writing up to 10 bytes to a kernel memory outside of a kernel > buffer > > ------------------------------------------ > > [Reference] > > > > > > ------------------------------------------ > > [Has vendor confirmed or acknowledged the vulnerability?] > true > > ------------------------------------------ > > [Discoverer] > Benjamin Poirier <bpoirier@...e.com> > > Use  [Proof of the flaw presence]  ================================================================== BUG: KASAN: use-after-free in at addr Write of size 10 by task swapper/1/0 count:2 mapcount:1 mapping:          (null) index:0x0 flags: raw: raw: page dumped because: kasan: bad access detected CPU: 1 PID: 0 Comm: swapper/1 Not tainted #36 Hardware name: QEMU Standard PC + PIIX, BIOS Call Trace:  <IRQ>    ?      ?  ?   ?  ?  ?  ?  ?   ?   ?  ?  ?  ?   [virtio_net]  ?  ? [virtio_net]  ?  ?  ?  ?  [virtio_net]   ?  ?  ?     RIP: RSP: EFLAGS: ORIG_RAX: ffffffffffffff3e RAX: RBX: RCX: RDX: RSI: RDI: RBP: R08: R09: R10: R11: R12: R13: R14: R15:  </IRQ>  ?  ?       ?  ?   ?  Memory state around the buggy address:  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff                    ^  ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff  Best regards, Vladis Dronov | Red Hat, Inc. | Product Security Engineer  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      