  oss-security - Re: is insufficient for  password hashing            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 18 Sep From: Jeremy Stanley <fungi@...goth.org> To: oss-security@...ts.openwall.com Subject: Re: is insufficient for  password hashing  On Solar Designer wrote: [...] > the wording of the advisory and in the discussion at > is weird. >  > I assume that refers to the algorithm introduced in > glibc 2.7 and now used by many Linux distros and more. It is > typically called without the underscore. I also assume > that refers to  Yes, or more specifically these:  https://passlib.readthedocs.io/en/stable/lib/passlib.hash.pbkdf2_digest.html  > "computational cost factor" is tunable, and > isn't quicker to crack than when both are tuned for > the same defensive running time and use implementations optimized to a > similar extent.  However, PBKDF2-HMAC has worse missed optimization > pitfalls, so highly unoptimal implementations of PBKDF2 are very common: >  >  Thanks for the pointer! I wasn't familiar with the fastpbkdf2 talk, definitely some helpful research there.  > Obviously, password crackers may use more optimal implementations. >  > I guess the names with underscores are some specific instantiations with > fixed cost factors?  I guess bcrypt and scrypt referred to here are also > specific instantiations with fixed cost factors?  Then the wording would > start to make sense.  For completeness, what are the specific cost > factors used for each of those four? >  > Reading the discussion on relevant Bug entries and proposed commits, it > appears that was recently introduced under the flawed > understanding that is considered insufficient (even with > significant rounds) in comparison to bcrypt, or scrypt for > password hashing."  While the references to bcrypt and scrypt are > correct, the reference to (presumably) is wrong.  It > is in the same category with  As it is, might > very well allow for quicker cracking than does.  Without > knowing the specific settings and efficiency of implementations, we > can't tell. [...] > I don't recommend any further code changes at this time.  Rather, I > recommend that the confusion be dealt with: clarify the settings used, > don't refer to as a clear improvement upon  I must admit, the confusion was probably primarily mine. When asked for feedback on the earlier bug report, I mistook the description at face value assuming that based password hashing" referred to a raw one-way hash function along the lines of and spouted the usual recommendation for using a KDF instead of a bare hash:   Had I instead taken the time to look at the existing implementation in the source tree (as I would have done were it flagged for a formal advisory) I would have probably noticed that it already was using a KDF... tunnel vision on my part perhaps. I've added a comment to this effect on the bug report linked from the security note and will write up some appropriate errata to accompany it.  Thanks for noticing and pointing out this error, and my apologies for any inconvenience my lack of attention may have caused. --  Jeremy Stanley  Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      