  oss-security - Xen Security Advisory - x86: insufficient reference counts  during shadow emulation            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Tue, 20 Jun From: Xen.org security team <security@....org> To: xen-announce@...ts.xen.org, xen-devel@...ts.xen.org,  xen-users@...ts.xen.org, oss-security@...ts.openwall.com CC: Xen.org security team <security-team-members@....org> Subject: Xen Security Advisory - x86: insufficient reference counts  during shadow emulation  -----BEGIN PGP SIGNED MESSAGE----- Hash:                      Xen Security Advisory                               version 2          x86: insufficient reference counts during shadow emulation  UPDATES IN VERSION 2 ====================  Public release.  Add caveat about exploitability by a single HVM guest, to Impact.  ISSUE DESCRIPTION =================  When using shadow paging, writes to guest pagetables must be trapped and emulated, so the shadows can be suitably adjusted as well.  When emulating the write, Xen maps the guests pagetable(s) to make the final adjustment and leave the guest's view of its state consistent.  However, when mapping the frame, Xen drops the page reference before performing the write.  This is a race window where the underlying frame can change ownership.  One possible attack scenario is for the frame to change ownership and to be inserted into a PV guest's pagetables.  At that point, the emulated write will be an unaudited modification to the PV pagetables whose value is under guest control.  IMPACT ======  A malicious pair of guests may be able to elevate their privilege to that of Xen.  We have not ruled out the possibility that a single malicious HVM guest may be able to elevate their privilege to that of Xen.  VULNERABLE SYSTEMS ==================  All versions of Xen are vulnerable.  Only x86 systems are affected.  ARM systems are not vulnerable.  HVM guests using shadow mode paging can exploit this vulnerability.  HVM guests using Hardware Assisted Paging (HAP) cannot exploit this vulnerability.  To discover whether your HVM guests are using HAP, or shadow page tables: request debug key `q' (from the Xen console, or with `xl debug-keys q').  This will print (to the console, and visible in `xl dmesg'), debug information for every domain, containing something like this:    (XEN) General information for domain 2:   (XEN)     refcnt=1 dying=2 pause_count=2   (XEN)     nr_pages=2 xenheap_pages=0 shared_pages=0 paged_pages=0 dirty_cpus={}   (XEN)       (XEN)     paging assistance: hap refcounts translate external                                ^^^ The presence of `hap' here indicates that the host is not vulnerable to this domain.  For an HVM domain the presence of `shadow' indicates that the domain can exploit the vulnerability.  Xen 4.6 and later have the option to compile-out shadow paging support.  (The default is to compile with shadow paging support).  If Xen is built without shadow support, it is not vulnerable.  Exploiting this race condition requires coordination between an x86 HVM guest using shadow paging, and a PV guest.  Running only HVM guests avoids the vulnerability, unless stub device models are in use (since stub device models are PV domains, each controlled by the corresponding guest).  Running only PV guests avoids the vulnerability.  MITIGATION ==========  Where the HVM guest is explicitly configured to use shadow paging (eg via the `hap=0' xl domain configuration file parameter), changing to HAP (eg by setting `hap=1') will avoid exposing the vulnerability to those guests.  HAP is the default (in upstream Xen), where the hardware supports it; so this mitigation is only applicable if HAP has been disabled by configuration.  (This mitigation is not applicable to PV guests.)  CREDITS =======  This issue was discovered by Andrew Cooper of Citrix.  RESOLUTION ==========  Applying the appropriate attached patch resolves this issue.            xen-unstable       Xen 4.8, 4.7       Xen 4.6       Xen 4.5, 4.4  $     $  DEPLOYMENT DURING EMBARGO =========================  Deployment of the patches and/or mitigations described above (or others which are substantially similar) is permitted during the embargo, even on public-facing systems with untrusted guest users and administrators.  But: Distribution of updated software is prohibited (except to other members of the predisclosure list).  Predisclosure list members who wish to deploy significantly different patches and/or mitigations, please contact the Xen Project Security Team.   (Note: this during-embargo deployment notice is retained in post-embargo publicly released Xen Project advisories, even though it is then no longer applicable.  This is to enable the community to have oversight of the Xen Project Security Team's decisionmaking.)  For more information about permissible uses of embargoed information, consult the Xen Project community's agreed Security Policy:   http://www.xenproject.org/security-policy.html -----BEGIN PGP SIGNATURE----- Version: GnuPG v1  =Eoho -----END PGP SIGNATURE-----  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      