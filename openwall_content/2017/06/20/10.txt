  oss-security - Xen Security Advisory - x86: PKRU and BND* leakage between vCPU-s            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Tue, 20 Jun From: Xen.org security team <security@....org> To: xen-announce@...ts.xen.org, xen-devel@...ts.xen.org,  xen-users@...ts.xen.org, oss-security@...ts.openwall.com CC: Xen.org security team <security-team-members@....org> Subject: Xen Security Advisory - x86: PKRU and BND* leakage between vCPU-s  -----BEGIN PGP SIGNED MESSAGE----- Hash:                      Xen Security Advisory                               version 2                 x86: PKRU and BND* leakage between vCPU-s  UPDATES IN VERSION 2 ====================  Public release.  ISSUE DESCRIPTION =================  Memory Protection Extensions (MPX) and Protection Key (PKU) are features in newer processors, whose state is intended to be per-thread and context switched along with all other XSAVE state.  Xen's vCPU context switch code would save and restore the state only if the guest had set the relevant XSTATE enable bits.  However, surprisingly, the use of these features is not dependent (PKU) or may not be dependent (MPX) on having the relevant XSTATE bits enabled.  VMs which use MPX or PKU, and context switch the state manually rather than via XSAVE, will have the state leak between vCPUs (possibly, between vCPUs in different guests).  This in turn corrupts state in the destination vCPU, and hence may lead to weakened protections  Experimentally, MPX appears not to make any interaction with BND* state if BNDCFGS.EN is set but XCR0.BND{CSR,REGS} are clear.  However, the SDM is not clear in this case; therefore MPX is included in this advisory as a precaution.  IMPACT ======  There is an information leak, of control information mentioning pointers into guest address space; this may weaken address space randomisation and make other attacks easier.  When an innocent guest acquires leaked state, it will run with incorrect protection state.  This could weaken the protection intended by the MPX or PKU features, making other attacks easier which would otherwise be excluded; and the incorrect state could also cause a denial of service by preventing legitimate accesses.  VULNERABLE SYSTEMS ==================  Xen 4.4 and earlier are not vulnerable, as they do not use or expose MPX or PKU to guests.  Xen 4.5 and later expose MPX to guests.  Xen 4.7 and later expose PKU to guests.  Therefore, Xen 4.5 and later are vulnerable.  Only x86 hardware implementing the MPX or PKU features is vulnerable. At the time of writing, these are Intel Skylake (and later) processors for MPX, and Intel Skylake Server (and later) processors for PKU.  ARM hardware is not vulnerable.  The vulnerability is only exposed to HVM guests.  PV guests cannot exploit the vulnerability.  Vulnerable guest operating systems - ----------------------------------  Guests which use XSAVE for context switching PKU and MPX state are not vulnerable to inbound corruption caused by another malicious domain.  With respect to PKU, the remaining outbound information leak is of no conceivable consequence.  And, experimentally, MPX does not appear to have a real vulnerability, even though the CPU documentation is not clear.  Therefore we think that these guests (those which use XSAVE) are not vulnerable.  Linux uses XSAVE, so is therefore not vulnerable.  MITIGATION ==========  Passing "pku=0" on the hypervisor command line will avoid the PKU vulnerability (by not advertising the feature to guests).  There is no corresponding option for the probably-theoretical MPX vulnerability.  CREDITS =======  This issue was discovered by Andrew Cooper of Citrix.  RESOLUTION ==========  Applying the appropriate attached patch resolves this issue.            xen-unstable       Xen 4.8       Xen 4.7       Xen 4.6       Xen 4.5  $      $  DEPLOYMENT DURING EMBARGO =========================  Deployment of the patches and/or mitigations described above (or others which are substantially similar) is permitted during the embargo, even on public-facing systems with untrusted guest users and administrators.  But: Distribution of updated software is prohibited (except to other members of the predisclosure list).  Predisclosure list members who wish to deploy significantly different patches and/or mitigations, please contact the Xen Project Security Team.   (Note: this during-embargo deployment notice is retained in post-embargo publicly released Xen Project advisories, even though it is then no longer applicable.  This is to enable the community to have oversight of the Xen Project Security Team's decisionmaking.)  For more information about permissible uses of embargoed information, consult the Xen Project community's agreed Security Policy:   http://www.xenproject.org/security-policy.html -----BEGIN PGP SIGNATURE----- Version: GnuPG v1  =c/uv -----END PGP SIGNATURE-----  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      