  oss-security - Linux kernel to infoleak due to a data race in ALSA timer            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Mon, 12 Jun From: Alexander Potapenko <glider@...gle.com> To: oss-security@...ts.openwall.com Cc: Dmitriy Vyukov <dvyukov@...gle.com>, Kostya Serebryany <kcc@...gle.com>, Takashi Iwai <tiwai@...e.de>,  	Andrey Konovalov <andreyknvl@...gle.com> Subject: Linux kernel to infoleak due to a data race in ALSA timer  Hi all,  Until recently, /dev/snd/timer driver was prone to a data race, which led to uninitialized memory from the kernel heap being copied to the userspace. KernelMemorySanitizer (http://github.com/google/kmsan) reported it as follows (line numbers relative to  ================================================================== BUG: KMSAN: use of uninitialized memory in CPU: 0 PID: Comm: probe Not tainted Hardware name: QEMU Standard PC + PIIX, BIOS Bochs Call Trace:  __dump_stack lib/dump_stack.c:16  lib/dump_stack.c:52    copy_to_user   do_loop_readv_writev   do_readv_writev  vfs_readv     RIP: RSP: EFLAGS: ORIG_RAX: RAX: ffffffffffffffda RBX: RCX: RDX: RSI: RDI: RBP: R08: R09: R10: R11: R12: R13: R14: R15: origin:   kmsan_save_stack_with_flags     kmalloc  snd_timer_user_tselect  __snd_timer_user_ioctl   vfs_ioctl fs/ioctl.c:45     ==================================================================  The above means that the heap buffer allocated in snd_timer_user_tselect() while handling ioctl(fd, SNDRV_TIMER_IOCTL_SELECT, ...) sometimes remains uninitialized till it's being copied to user space by a readv() call.  The bug allows a local user having access to /dev/snd/timer to sniff data belonging to other users, if that data was previously copied to the kernel space.  Takashi Iwai has fixed the issue in the upstream kernel in the following commits:  I'll be disclosing the PoC exploit for this bug on Tuesday, June 20, CEST, unless other exploits for the same issue appear earlier.  --  Alexander Potapenko Software Engineer  Google Germany GmbH Erika-Mann-Straße, 33 München  Geschäftsführer: Matthew Scott Sucherman, Paul Terence Manicle Registergericht und -nummer: Hamburg, HRB Sitz der Gesellschaft: Hamburg  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      