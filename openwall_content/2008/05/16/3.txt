  oss-security - Re: OpenSSH key blacklisting            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 16 May From: Solar Designer <solar@...nwall.com> To: oss-security@...ts.openwall.com Subject: Re: OpenSSH key blacklisting  On Fri, May 16, at Craig Edwards (Brain) wrote: > I havent been following this debacle too closely as i dont have much to  > do with debian, however, wouldnt such a system be vulnerable to false  > positives if you are just going to hash partial fingerprints rather than  > whole fingerprints?  Such a system would have a higher likelihood of false positives, yes. However, it would not exactly be "vulnerable" to them - or at least, the worst-case impact (depending on server settings) is a DoS for a given user's ability to login.  With 48-bit partial fingerprints, there may be like one such false positive in the entire world, or none.  If we go down to 40 bits, it's less than one in a million of different keys. (I am assuming a blacklist size of around partial fingerprints.)  In fact, the Debian/Ubuntu patch already uses partial fingerprints based on my earlier suggestion, but I was more conservative at the time, so I suggested 80 bits.  Willy Tarreau has since convinced me that even as low as 40 bits is reasonable.  Oh, and we are not "hashing" fingerprints, we're merely matching them.  Alexander  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      