  oss-security - Re: CVE Request (nagios)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 10 Dec From: Andreas Ericsson <ae@....se> To: Eygene Ryabinkin <rea-sec@...elabs.ru> CC: oss-security@...ts.openwall.com, jlieskov@...hat.com,   coley@...re.org Subject: Re: CVE Request (nagios)  Eygene Ryabinkin wrote: > Andreas, good day. >  > Will you be able to clarify two things. >  > Mon, Dec 08, at Eygene Ryabinkin wrote: >> So >>   >> just completely closes the processing of these commands from the >> Nagios side.  May be this was the fix for the case when the evil >> contents from the command file were still floating around but the >> upgraded Nagios won't process them because they could go from the >> previous successful attack but are lying unprocessed? >  > Do you think it is really so? >   Umm... I can't parse the above paragraph. In short though, the removed commands are removed *from the cgi's* because it's far too dangerous to allow such things over the web. Nagios will still process them if they are submitted to the command-pipe, but the CGI's can no longer write such commands to said pipe.  >>> It is a bit strange that it was done after (CSRF was documented in >>> release notes), but...  By the way, entry for speaks >>> about as about the vulnerable to the CSRF and it is inconsistent >>> with the release notes at >>>   http://www.nagios.org/development/history/nagios-3x.php. >> So I feel the the CSRF was "somehow closed" in and CVE entry may >> need fixing.  The remains from this bug that could migrate from to >> (but not in the functional sense, only via the unprocessed command >> file) were "fixed" in >  > really speaks about as about vulnerable to CSRF.  At > least CHANGE_ commands were closed in and were (presumably) > additionally closed at the Nagios server side in  So either > is vulnerable too, is not vulnerable to CSRF or I am missing > something.  What to choose? >   is vulnerable to CSRF. (which adds in-form session tokens to cmd.cgi, which processes all commands from the web-forms), is not vulnerable to CSRF.  fixes the authorization bypass discussed in where an authenticated user can submit commands he/she was not supposed to be able to submit. However, by blocking the CHANGE_ set of commands, the worst-case impact of the CSRF was drastically reduced, and the change to blocking those commands was also a part of  I'm afraid Ethan (the Nagios maintainer) got it wrong in the changelog, which is why, I presume, there's so much confusion right now.  I wrote the patches for it though, so I think it's safe to say I know what patch (and version) fixed what.  --  Andreas Ericsson                   andreas.ericsson@....se OP5 AB                             www.op5.se Tel: +46                  Fax: +46  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      