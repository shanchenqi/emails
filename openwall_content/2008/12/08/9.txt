  oss-security - Re: CVE Request (nagios)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 8 Dec From: Eygene Ryabinkin <rea-sec@...elabs.ru> To: oss-security@...ts.openwall.com, jlieskov@...hat.com Cc: coley@...re.org Subject: Re: CVE Request (nagios)  Mon, Dec 08, at Eygene Ryabinkin wrote: > Hmm, this seems to be unrelated to but it may be the > upstream fix for CSRF: judging by the contents of >   > the original patch from Tim Starling should introduce at least 'csrf' word > into cgi/cmd.c.  And I am failing to find one in the latest version, >   >  > So either it was fixed in the completely different way or it is the > quick fix to prevent CSRFs for the eventhandler mangling commands.  Uhm, the fix for the CSRF was in the but it was really simple (and not very complete -- not every Nagios command was blocked ;): ----- cgi/cmd.c static int cmd_submitf(int id, const char *fmt, ...) { 	char cmd[MAX_EXTERNAL_COMMAND_LENGTH]; 	const char *command; 	int len, len2; 	va_list ap;  	command = extcmd_get_name(id);  	/* 	 * We disallow sending 'CHANGE' commands from the cgi's 	 * until we do proper session handling to prevent cross-site 	 * request forgery 	 */ 	if (!command || (strlen(command) > 6 && !memcmp("CHANGE", command, 6))) 		return ERROR; ----- So   just completely closes the processing of these commands from the Nagios side.  May be this was the fix for the case when the evil contents from the command file were still floating around but the upgraded Nagios won't process them because they could go from the previous successful attack but are lying unprocessed?  > It is a bit strange that it was done after (CSRF was documented in > release notes), but...  By the way, entry for speaks > about as about the vulnerable to the CSRF and it is inconsistent > with the release notes at >   http://www.nagios.org/development/history/nagios-3x.php.  So I feel the the CSRF was "somehow closed" in and CVE entry may need fixing.  The remains from this bug that could migrate from to (but not in the functional sense, only via the unprocessed command file) were "fixed" in --  Eygene  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      