  oss-security -  Re: Re: CVE Request - roundcubemail            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date:  Tue, 16 Dec From:  Raphael Geissert <atomo64+debian@...il.com> To: oss-security@...ts.openwall.com Subject:  Re: Re: CVE Request - roundcubemail  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  Christian Hoffmann wrote:  > On Florian Weimer wrote: >> Nowhere in the documentation it says that "" quotes are unsafe when >> combined with a sufficiently general capture pattern. > Well yes, it would probably be better to have a big warning at this > place, because this flag is very dangerous unless used properly and all > use cases should be expressable through preg_replace_callback as well, > which is hard to use improperly from a syntax point of view, as no > evaluation of user-supplied data is ever going to happen. :) > But I would not say that PHP or its docs are wrong because of this.  IMHO the docs are lacking a very important bit of information.   > I cannot think of a case where single quotes could be easily > circumvented somehow, but I'd never claim to be perfectly right here. > Upstream added a perfectly fine fix, they replaced the /e usage by > preg_replace_callback, so I don't see a reason why you would want to > apply a different fix. >   Of course, no different fix was planned (on roundcube). We were actually looking for something in PHP itself that could be treated as the origin of all those security issues. We have been thinking about disabling support for the e modifier, but that requires collaboration with upstreams (PHP and script writers) and looking for incompatibilities in existing software. Maybe it could be dropped from PHP6, now that register_globals, safe_mode, magic_quotes_gpc, and friends are being dropped as well.  Cheers, - --  Raphael Geissert - Debian Maintainer www.debian.org - get.debian.net  -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux)  =wbnP -----END PGP SIGNATURE-----   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      