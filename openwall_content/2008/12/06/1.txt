  oss-security - Fwd: multiple listen()s on same socket corrupts the vcc table            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Sat, 6 Dec From: "Eugene Teo" <eugeneteo@...nel.sg> To: oss-security@...ts.openwall.com Subject: Fwd: multiple listen()s on same socket corrupts the vcc table  Take note of this bug. You can find out more at:  Thanks, Eugene  ---------- Forwarded message ---------- From: Hugo Dias <hdias@...chlabs.com> Date: Fri, Dec 5, at AM Subject: multiple listen()s on same socket corrupts the vcc table To: bugtraq@...urityfocus.com, vuln@...unia.com, ssynchron@...il.com   -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  multiple listen()s on same socket corrupts the vcc table  Release Date:  I. Impact  Local Denial of Service on Linux kernel 2.6.x   II. Description  A vulnerabilty exists in Linux Kernel which can be exploited by malicious users to cause a Denial of Service.  It seems that calling the svc_listen function in 'net/atm/svc.c' twice on same socket, will create unassigned PVC/SVC entries, despite returning EUNATCH.  This entries are visible using proc filesystem.  #cat /proc/net/atm/vc  Address  Itf ... Unassigned   ... Unassigned   ... Unassigned   ... .......  The code in 'net/atm/proc.c', responsible for displaying this info, can't handle the unassigned entries. Kernel will freeze with infinite loop in 'proc.c' if we cat '/proc/net/atm/pvc'  :   net/atm/proc.c:  static inline int compare_family(struct sock *sk, int family) {         return !family || (sk->sk_family == family); }  try_again:         for (; sk; sk = sk_next(sk)) {                 l -= compare_family(sk, family); <<<<<<<<<                 if (l < 0)                         goto out;         }   IV. Patch   V. Credit  Hugo Dias - hdias [at] synchlabs [dot] com   VI. History  - Vulnerability Discovered - Reported to vendor - Vendor Released Patch -----BEGIN PGP SIGNATURE----- Version: GnuPG (MingW32) Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org  =9Qis -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      