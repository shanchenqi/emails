  oss-security - Re: Links < 2.1 security issue            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Mon, 28 Jul From: Nico Golde <oss-security+ml@...lde.de> To: oss-security@...ts.openwall.com Subject: Re: Links < 2.1 security issue  Hi Steven, * Steven M. Christey <coley@...us.mitre.org> > On Sun, 27 Jul Pierre-Yves Rofes wrote: >  > > Anyone investigated this, or even has a clue on the potential impact? > > Not sure if a CVE can be assigned, since this is very (too?) vague... >  > We operate on the assumption that if a developer says it's a security > issue, it's worth assigning a CVE for. >  > But you wind up with uninformative descriptions like the one below :-/  As far as I understand the patch fixes two problems: diff -ur upstream/links-2.1/url.c ---   +++ upstream/links-2.1/url.c    @@ @@         int allow_post;         int bypasses_socks;  } protocols[]= { -               {"file", 0, file_func, NULL,            1, 1, 0, 0, 0}, +               {"file", 0, file_func, NULL,            1, 1, 0, 0, 1},                 {"https", https_func, NULL,        0, 1, 1, 1, 0},                 {"http", 80, http_func, NULL,           0, 1, 1, 1, 0},                 {"proxy", proxy_func, NULL,       0, 1, 1, 1, 0},  This does nothing more than setting the socks bypass option to 1 allowing links to not use the socks proxy for local file urls.  The second part seems to be the actual security issue: diff -ur upstream/links-2.1/session.c ---       +++ upstream/links-2.1/session.c        @@ @@         if (a->accept_http && !strcasecmp(proto, "http")) ret = 1;         if (a->accept_ftp && !strcasecmp(proto, "ftp")) ret = 1;         mem_free(proto); +       if (proxies.only_proxies) ret = 0;         return ret;  }  Before the patch this set ses->tq_prog_flag_direct to 1 which causes the continue_download() function to pass the url to an external program (after links identified the file type) and thus bypassing the socks proxy (e.g. tor) even if you have configured links to never use anything else than the proxy (proxies.only_proxies). This should be a problem for example if you rely on the anonymity you don't have in this case.  Cheers Nico --  Nico Golde - http://www.ngolde.de - nion@...ber.ccc.de - GPG: For security reasons, all text in this mail is double-rot13 encrypted.  Content of type "application/pgp-signature" skipped  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      