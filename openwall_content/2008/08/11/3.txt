  oss-security - Multiple CVE Request (ruby)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Mon, 11 Aug From: Jan Lieskovsky <jlieskov@...hat.com> To: coley@...re.org Cc: oss-security@...ts.openwall.com Subject: Multiple CVE Request (ruby)  Hello Steve,    Ruby upstream has announced multiple vulnerabilities  present in Ruby code (even with testcases).  All of these issues responsibly reported at the following URL:    Could you please allocate a CVE id for each of the following:  * untrace_var is permitted at safe level 4.  * $PROGRAM_NAME may be modified at safe level 4.  * Insecure methods may be called at safe level 1-3.  * Syslog operations are permitted at safe level 4.  * DoS vulnerability in WEBrick  * Lack of taintness check in dl  * DNS spoofing vulnerability in resolv.rb -- already seems to   have assigned   All of these issues exploitable by a normal unprivileged user (slightly testcases / exploits modification is needed in some cases).   For further reference about the features allowed at different $SAVE levels in Ruby, please have a look at:  http://www.rubycentral.com/book/taint.html (part "Definition of the safe levels")  Please do not hesitate to ask for any further information related with each of these issues and / or their test cases.  Thank you in advance.  Kind regards Jan iankko Lieskovsky RH Security Response Team   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      