  oss-security - Re: CVE request: overflow issues            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 8 Aug From: Joe Orton <jorton@...hat.com> To: oss-security@...ts.openwall.com Cc: jorton@...hat.com Subject: Re: CVE request: overflow issues  On Fri, Aug 08, at Christian Hoffmann wrote: >   * Overflow in ext/gd's imageloadfont() function [1] [2] [3] >   * Overflow in php's internal memnstr() function which is exposed >     to userspace as "explode()" [1] [2] [4] [5] > > As those functions might take user-supplied data in certain webapps   > (which is a valid use case at least in case of explode()), those issues   > should probably expected to be remotely exploitable.  The explode() bug could only be triggered if a script passed a delimiter  from untrusted script input without sanitizing/checking it first, which  is fairly pathological behaviour.  I would call that a script bug, not  an issue in the PHP interpreter.  e.g looking through the first ~80 hits from:  http://www.google.com/codesearch?hl=en&q=+lang:php+explode\+*\(&start=70&sa=N  as expected, every explode() call uses a constant/trusted delimiter.  Regards, Joe (please CC me on replies)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      