  oss-security - Re: update: kernel: sctp: fix random  memory dereference with SCTP_HMAC_IDENT option            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 26 Sep (EDT) From: "Steven M. Christey" <coley@...us.mitre.org> To: oss-security@...ts.openwall.com cc: coley@...re.org Subject: Re: update: kernel: sctp: fix random  memory dereference with SCTP_HMAC_IDENT option   On Thu, 25 Sep Eugene Teo wrote:  > Hi Steve, > > The first three references to are incorrect. Please > update the CVE with the following references: > > > > > [1]  This was in reference to the advisory.  I guess the question becomes - talks about separate issues, one involving crashes by calling the API functions when SCTP-AUTH is disabled and another involving SCTP_HMAC_IDENT and a length value for sctp_getsockopt_hmac_ident.  is anchored on what's specified in    The Linux Kernel contains an information disclosure vulnerability while   parsing the IOCTL SCTP_HMAC_IDENT...    if (get_user(len, optlen)) <-- [1]     ...    retval = sctp_getsockopt_hmac_ident(sk, len, optval, optlen); <-- [2]   which seems different from this one:       "The number of identifiers needs to be checked against the option    length.  Also, the identifier index provided needs to be verified    to make sure that it doesn't exceed the bounds of the array."  and this one:       The bonds check to prevent buffer overlflow was not exactly   right.  It still allowed overflow of up to 8 bytes which is   sizeof(struct sctp_authkey)."   So Eugene, it sounds like the issues that you found were variants of the issue reported for the sctp_getsockopt_hmac_ident (a different function) by for  Do we need new CVE identifiers?  Or am I missing something?  - Steve  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      