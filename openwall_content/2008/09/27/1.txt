  oss-security - Re: update: kernel: sctp: fix random  memory dereference with SCTP_HMAC_IDENT option            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Sat, 27 Sep From: Eugene Teo <eteo@...hat.com> To: oss-security@...ts.openwall.com CC: coley@...re.org Subject: Re: update: kernel: sctp: fix random  memory dereference with SCTP_HMAC_IDENT option  Hi Steve,  Steven M. Christey wrote: > On Thu, 25 Sep Eugene Teo wrote: >> The first three references to are incorrect. Please >> update the CVE with the following references: >> >> >> >> >> [1] >  > This was in reference to the advisory. >  > I guess the question becomes - talks about separate issues, > one involving crashes by calling the API functions when SCTP-AUTH is > disabled and another involving SCTP_HMAC_IDENT and a > length value for sctp_getsockopt_hmac_ident.  I see what the confusion is now.  mentioned two separate, but related issues. The second issue that the advisory mentioned is an example of a function that may have two possible consequences, and it all depends on whether SCTP authentication is enabled or not.  The patch[2] that addressed these issues mentioned only one of them in the changelog description, even though it appears to be fixing possibly more than two issues.  Should this be assigned with just one CVE name instead of two?  [1] [2]  The sctp_setsockopt_hmac_ident() bug I found was reported around the same time as Tobias. More on this below.  > which seems different from this one: >  >   [...] > and this one: >  >   [...] > So Eugene, it sounds like the issues that you found were variants of the > issue reported for the sctp_getsockopt_hmac_ident (a different function) > by for  The sctp_setsockopt_hmac_ident() bug I found has a user-controllable hmacs->shmac_num_idents. There is no sanity check for id in sctp_auth_ep_set_hmacs(), and the check for has_sha1 can be bypassed, so it is possible that memcpy copies a little more than it should. It depends on sctp_getsockopt_hmac_ident() to read the data structure back to the user-space. When I reported this, sctp_getsockopt_hmac_ident() problem as reported in was not fixed yet. We probably need a CVE name for this.  Thanks for clearing up the confusion.  Eugene --  Eugene Teo / Red Hat Security Response Team  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      