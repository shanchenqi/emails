  oss-security - Re: CVE request: ClamAV vulnerabilities            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 11 Dec (EST) From: cve-assign@...re.org To: pinkbyte@...too.org Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: CVE request: ClamAV vulnerabilities  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  > CVE for two vulnerabilities, that present in ClamAV before >  > 1) A double-free error exists within the "unrar_extract_next_prepare()" > function (libclamunrar_iface/unrar_iface.c) when parsing a RAR file. >  > 2) An unspecified error within the "wwunpack()" function > (libclamav/wwunpack.c) when unpacking a WWPack file can be exploited to > corrupt heap memory. >  > [1] -  There are several aspects of this situation that are potentially misleading.  First, ClamAV was announced on with a mention of:    "ClamAV addresses several reported potential security bugs.    Thanks to Felix Groebert, Mateusz Jurczyk and Gynvael Coldwind of the    Google Security Team for finding and reporting these issues."  (note that the announcement mentions "Sorry this is late," suggesting that had been released for a while before it was announced there - the actual release date seems to be  Separately, in     Jan Lieskovsky sent a message about "Further issue details about flaws corrected in upstream ClamAV version" and referred to commits and Note that this message does not directly comment on whether those commits made it into version Furthermore, one of the commits has a "cid" number. This often means that the issue was identified by the Coverity Scan service, and perhaps was not also identified by a human researcher.  The posted details were:      cid - fix double free     Fixed heap corruption in wwunpack.c     Then, on was published, stating:    Two vulnerabilities with an unknown impact have been reported in   ClamAV.    1) A double-free error exists within the      "unrar_extract_next_prepare()" function      (libclamunrar_iface/unrar_iface.c) when parsing a RAR file.    2) An unspecified error within the "wwunpack()" function      (libclamav/wwunpack.c) when unpacking a WWPack file can be      exploited to corrupt heap memory.    The vulnerabilities are reported in version Prior versions   may also be affected.    Solution:   Update to version    Provided and/or discovered by:   The vendor credits Felix Groebert, Mateusz Jurczyk, and Gynvael   Coldwind, Google Security Team.   Here's where it becomes potentially misleading. The first issue apparently refers to:        from https://github.com/vrtadmin/clamav-devel/commits/master/libclamunrar_iface/unrar_iface.c  in which a "free(comment);" line was removed. This commit did occur before the date of the release. However, anyone can download version from      and verify that this line is still present in version This would suggest that version is not actually a "Solution" for this issue. Actually, the libclamunrar_iface/unrar_iface.c file is identical between version and version Also, because this is not an issue fixed in the attribution of "The vendor credits Felix Groebert, Mateusz Jurczyk, and Gynvael Coldwind, Google Security Team" doesn't seem to apply to this specific issue.  The second issue apparently refers to:        from https://github.com/vrtadmin/clamav-devel/commits/master/libclamav/wwunpack.c  in which input validation was added. This commit did make it into (and it's not in It is also apparently discussed in Comment 2.  Based on the post, the other issues fixed in include:     possible buffer overflow      For example, libclamav/yc.c in has the max_emu variable that is   apparently involved in preventing the overflow. libclamav/yc.c in   does not have the max_emu variable at all.  and     dbg_printhex possible information leak    We don't know the commit for this, but libclamav/pdf.c in has   'dbg_printhex("md5", result, 32)' whereas libclamav/pdf.c in   has 'dbg_printhex("md5", result, 16)' instead. We realize that the   security impact might occur in very limited situations (e.g., the   debug output is given to an untrusted person and the 16 extra bytes   are somehow sensitive data). But the vendor describes it as "The   vulnerability is merely debug-level printing" and the word   "vulnerability" is enough for us in this context.   Some Linux distributions have already processed a subset of the above information, e.g., see the discussion.  So, unless there are further corrections, MITRE will make three CVE assignments:  (1) (2) (3) the dbg_printhex issue with 32 instead of 16  The relevance of all this depends on the interaction between open-source partial-disclosure approaches and the patch-backporting mechanism. The originally questioned combination of and is apparently not a complete/correct reflection of the vulnerability fixes. If someone just directly uses the upstream distribution (i.e., upgrades from to then it's perhaps not critical. If something was fixed, they get the fix. A problem would have occurred if a distribution decided to stay with the codebase (for "stability" reasons) and only backport and We don't know if that happened. In a number of cases, it did not happen - the distribution simply moved to the codebase (e.g., see and  For MITRE is generally uncomfortable with assigning CVE IDs on the basis of someone noticing a Coverity Scan CID number in a changelog, even if the changelog seems to use vulnerability-style terminology such as "double free," if the vendor isn't identifying that issue as a vulnerability. Novell/SUSE bug (mentioned earlier) had a similar reaction in a related context: "So far no actual security issues have been identified, just various Coverity hardening issues were fixed." If a person would like to produce an actual RAR file that exploits the issue, we would of course give you a CVE ID. Otherwise, if nothing else, adding CVE mappings based solely on Coverity Scan CID numbers is a huge scalability issue for us. Also, the ClamAV git apparently has several other cases where a Coverity Scan CID number was associated with removing a "free" call, and the others don't have CVE IDs.  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  =e+6t -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      