  oss-security - Re: CVE already assigned for            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 19 Dec From: Murray McAllister <mmcallis@...hat.com> To: oss-security@...ts.openwall.com CC: cve-assign@...re.org, krahmer@...e.de Subject: Re: CVE already assigned for  On AM, Vincent Danen wrote: >  > On Dec 18, at PM, cve-assign@...re.org wrote: >  >> Signed PGP part >> raises the >> question of whether there is a CVE assignment in >> already, in order >> to avoid a duplicate assignment. Our guess is that security issues >> tracked privately by Red Hat typically do have pre-assigned CVE IDs, >> so MITRE will delay a CVE assignment indefinitely. >> >> Although it would be great to know what CVE ID you have assigned, >> replying with something like "yes, it has a CVE ID, but it's only >> being shared with the embargo audience" would be quite useful as well. >  > There is a CVE assigned to this, but based on what Sebastian wrote, I can’t tell if it’s the same issue so I’m hesitant to say what the CVE is in case it does end up being different. >  > Sebastian, can you give me access to your bug?  Or did you intend to make it public?  I’m assuming that since you are asking about a CVE here, you maybe did not mean to keep it private?  Your other message said your bug contained upstream URLs (so maybe even pasting those here would be helpful). >  > Once I can look at it, I can let you know for sure whether or not it is the same issue (and should then use the same CVE). >  > Thanks. >  > —  > Vincent Danen / Red Hat Security Response Team >   Hi all,  Sorry for the poor handling here on my part, the build in Fedora took me by surprise...There are two pywbem CVEs (assigned by Red Hat):  is about pywbem doing an SSL connection with verification enabled, closing it, and doing the real data transfer over another connection with verification disabled.  is about pywbem failing to verify the URI matches the Subject of the certificate (missing hostname check).  According to both of these CVEs are fixed by the following patch:   However, I don't think that is the final fix, and I'm in the wrong timezone to ask :( so I'm just going to paste the comments from a bug I won't be able to open:  "" +        for path in ( +                '/etc/pki/tls/certs', +                '/etc/ssl/certs', +                '/etc/ssl/certificates'): +            if os.path.exists(path): +                get_default_ca_certs._path = path +                break  I'm not sure if this works because the /etc/pki/tls/certs directory does not contain individual PEM certificate files under special hashed file names, which is what SSL_CTX_load_verify_locations expects.  +            ctx = SSL.Context('sslv3')  The above results in an SSL 3.0 client hello:          Handshake Protocol: Client Hello             Handshake Type: Client Hello (1)             Length:             Version: SSL 3.0             Random                 gmt_unix_time: Dec 17, CET                 random_bytes: xxx             Session ID Length: 0  You need to use 'sslv23' to get the most recent protocol version. ""  "" I've gathered some information about the paths you mentioned. I agree this approach is not correct. Perhaps this is better:          for path in (                 # newer distributions using update-ca-trust                 '/etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt',                 # use these directories as a fallback                 '/etc/ssl/certs',                 '/etc/ssl/certificates'):             if os.path.exists(path):                 get_default_ca_certs._path = path                 break  On f19+, update-ca-trust is used to regenerate ca bundles under /etc/pki/ca-trust/extracted directory. As you say it's wrong to use directory path here, since cacertdir_rehash is not used to make symlinks with hashes. On f18 and older, '/etc/ssl/certs' is used with symlinks created by cacertdir_rehash.  If '/etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt' does not exist, the '/etc/ssl/certs' will be used as a fallback. ""  I will open our bugs soon and  Apologies again for the mess here and lack of a heads up before it went public.  -- Murray McAllister / Red Hat Security Response Team  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      