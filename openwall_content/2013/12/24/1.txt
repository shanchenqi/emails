  oss-security - Re: CVE request: denial of service in Nagios (process_cgivars())            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Tue, 24 Dec (EST) From: cve-assign@...re.org To: vdanen@...hat.com Cc: cve-assign@...re.org, oss-security@...ts.openwall.com, carnil@...ian.org Subject: Re: CVE request: denial of service in Nagios (process_cgivars())  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  >  > Can you please advise if any additional CVE(s) will be assigned to > this commit in Nagios then?  The situation is a bit complicated but it appears that the best choice is to add one CVE assignment.  As mentioned in the post, is for the report. This mentions specific affected Icinga files. The issue in the same files in Nagios has this same CVE ID.  Nagios changed two other files. The first file is contrib/daemonchk.c. This is a fix for the same type of off-by-one issue covered by but it was announced at a different time and therefore is assigned a different CVE ID, for Nagios. Our information from Icinga upstream is that the contrib/daemonchk.c code isn't exposed to untrusted input with the Icinga distribution as shipped, and would only be exposed if the user decides to change the build/installation process. Therefore, Icinga upstream is not accepting this as an Icinga vulnerability.  Another observation about contrib/daemonchk.c is that the process_cgivars function apparently accomplishes nothing, and the call and the code itself (with the originally erroneous length checking) could perhaps just be omitted, because the variables[x] values are never used. However, later use of the variables[x] values is irrelevant to the reported attack possibility.  The second file is cgi/statuswml.c. Here, the Nagios commit adds a block of new code -- this isn't an off-by-one change like the other cases. As far as we can tell, this block of new code doesn't correct any exploitable vulnerability and thus there won't be any associated CVE ID. The code might be a good idea for consistency reasons, but we didn't notice any viable attack that would involve long variables[x] values.  Finally (although it's not directly relevant to CVE assignment), Icinga does not use the cgi/statuswml.c code and is no longer even shipping it.  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  iQEcBAEBAgAGBQJSuaVyAAoJEKllVAevmvmsE/sIALIOCCsIyfU4kDVoQOjB2FYC =onXN -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      