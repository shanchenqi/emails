  oss-security - Re: Possibly insecure permissions on sshd_config in  Debian-based distros            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Thu, 22 Aug From: Kurt Seifried <kseifried@...hat.com> To: Daniel Kahn Gillmor <dkg@...thhorseman.net> CC: oss-security@...ts.openwall.com, Andrey Korolyov <andrey@...l.ru> Subject: Re: Possibly insecure permissions on sshd_config in  Debian-based distros  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  On PM, Daniel Kahn Gillmor wrote: > On PM, Andrey Korolyov wrote: >> On Fri, Aug 23, at AM, Kurt Seifried >> <kseifried@...hat.com> wrote: >  >>> Well the default file config would of course be known. I'm >>> reading the man page and nothing super secret pops out, e.g. no >>> passwords get embedded. Can you give an example of sensitive >>> information in sshd_config? >>  >> AllowUsers/AllowGroups/PermitEmptyPasswords >>  >> Obtaining such information can shorten time of bruteforce remote >> attacks. >  > I don't think these rise to the level of being worth hiding at > all. >  > PermitEmptyPasswords is one additional password to test against > each user account, which i don't think is significant.  And a user > with local access to the machine can already radically shorten > bruteforce enumeration of possible accounts with just with "getent > passwd".  the gap from there to AllowUsers isn't particularly > significant by comparison. >  > I don't know of any history of any serious high-entropy secrets  > (passphrases, secret keys, etc) being stored in sshd_config, and i > would imagine the ssh developers would resist any configuration > that encourages that sort of thing. >  > Having your config files world-readable by default eases debugging, > and can communicate to savvy users what your policies are without > needing to exchange e-mail or chat. >  > Administrators who want to make that tradeoff are free to make it, > of course, but if a proposal was made within debian to do something > like "chmod go-r sshd_config",  i would object to it. >  > This doesn't warrant a CVE. >  > --dkg  Yup, the information would help a bit, but not enough to warrant a CVE I think. Unless someone comes up with something new for this no CVE.    - --  Kurt Seifried Red Hat Security Response Team (SRT) PGP: A90B 66BF -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux)  =/Yx9 -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      