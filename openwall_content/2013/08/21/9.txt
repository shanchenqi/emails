  oss-security - Re: PoC: Function Pointer Protection in C Programs            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 21 Aug From: Ondřej Bílka <neleai@...nam.cz> To: Stephen Röttger <stephen.roettger@...il.com> Cc: oss-security@...ts.openwall.com, gcc@....gnu.org Subject: Re: PoC: Function Pointer Protection in C Programs  On Wed, Aug 21, at Stephen Röttger wrote: > Hi everyone, >  > I'd like to present you my master's thesis "Malicious Code Execution > Prevention through Function Pointer Protection" [0] and its > proof-of-concept implementation [1] for the gcc+glibc and would > appreciate some feedback. >   >  > Performance: > Though my PoC implementation is not free of bugs, I was able to compile > an nginx webserver and have it serve static websites, which I used for a > performance evaluation. On my test system, the number of requests per > second that the nginx could was reduced to 96% compared to a nginx > without the scheme. Handling of a single request included 71 function > pointer calls in this case. (More details can be found in my thesis [0]) >  What is performance impact for program that just qsorts big array? It looks like worst case scenario for me.  Well now when gcc-4.7 can resolve function pointers it is possible to create header to inline comparison but still.  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      