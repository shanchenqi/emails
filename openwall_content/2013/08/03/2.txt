  oss-security - Re: Rgpg Ruby Gem Remote Command Injection (CVE Request)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Fri, 02 Aug From: Kurt Seifried <kseifried@...hat.com> To: oss-security@...ts.openwall.com CC: "Larry W. Cashdollar" <larry0@...com> Subject: Re: Rgpg Ruby Gem Remote Command Injection (CVE Request)  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  On AM, Larry W. Cashdollar wrote: > Title: *Rgpg Ruby Gem Remote Command Injection* >  >  > Date: >  >  > Advisory Author: Larry W. Cashdollar, @_larry0 >  >  > CVE: TBD >  >  > Download: https://rubygems.org/gems/rgpg >  >  > Description: >  >  > "A simple Ruby wrapper around gpg command for file encryption. >  > rgpg is a simple API for interacting with the gpg tool. It is  > specifically designed to avoid altering global keyring state by > creating temporary public and secret keyrings on the fly for > encryption and decryption." >  >  > Vulnerability: >  >  > The following code snippet does not sanitize user supplied input > before passing it to the System () function for execution. If this > API is used in the context of a rails application remote commands > can be injected into the shell if the user supplies shell meta > characters like ; and &. >  > in lib/rgpg/gpg_helper.rb: >  > 68       begin 69         output/file.close 70         result = > system("#{command/line} > #{output_file.path} 2>&1") 71 > ensure >  > Author: Notified >  >  > Fixed: in >  >  > Greets to all@...CON21. >   Please use for this issue.  - --  Kurt Seifried Red Hat Security Response Team (SRT) PGP: A90B 66BF -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux)  RgKNyJnxWZPPEFf/XkUM =KV4E -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      