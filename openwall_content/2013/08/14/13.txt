  oss-security - CVE Request: linux-kernel priviledge escalation on ARM/perf            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Wed, 14 Aug (EDT) From: Vince Weaver <vincent.weaver@...ne.edu> To: oss-security@...ts.openwall.com Subject: CVE Request: linux-kernel priviledge escalation on ARM/perf  Hello  I'm not really a security researcher, so hopefully I'm reporting this in  the proper way.  I have a fuzzer tool for the perf_event_open() syscall that found a few oopses on the ARM platform, which I reported to lkml a week ago.  One of the oopses can lead to a local privilege escalation on ARM-perf. This fix can be found here:   The discussion thread is:     The hope is this appears in but my attempts to get the people at  security@...r.kernel.org to take this seriously didn't really go very  well.  I do have code that will exploit the kernel and give me a root shell on an ARM Pandaboard machine running  The exploit is a bit  fragile though:   + Only works on ARM   + Elevates from normal user to root, no special config required.     perf_event syscalls run as regular users, not sure why some     think you need root.   + It does need a user-mappable address at an exact byte offset     from a pmu_struct in memory.  This limits things somewhat; in     my testing kernels have INT_MIN at exactly the right place      but the exploit doesn't work on a kernel,     it just oopses or crashes the machine.  Thanks,  Vince  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      