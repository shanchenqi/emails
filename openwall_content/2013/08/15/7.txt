  oss-security - Re: HTTPS            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 15 Aug From: Kurt Seifried <kseifried@...hat.com> To: oss-security@...ts.openwall.com CC: gremlin@...mlin.ru Subject: Re: HTTPS  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  On AM, gremlin@...mlin.ru wrote: > On Kurt Seifried wrote: >  >> everyone should be enabling HTTPS where possible, >  > Very dangerous mistake. HTTPS should be used only for > non-anonymous access, otherwise plain HTTP is preferred. In any > case, let the users choose whether they want to use it.  This is literally the first time I've ever heard anyone say this, I'm curious though, can you explain your reasoning/evidence for this statement? You do realize HTTPS can be just as "anonymous" (ignoring the fact you have the persons IP/time stamp, browser string, etc =) as normal HTTP.  > Compare to FTP vs SCP/SFTP: first is for getting files from anyone  > (into /incoming) and giving files for everyone (from /pub), second  > is for transferring your own files. Obviously, I presume FTP > daemon to be configured for anonymous-only access.  Now I'm just confused.  >> intercepting and modifying HTTP is trivial. >  > Yes. But intercepting and modifying HTTPS requires just an ability  > to issue client-trusted certificates (sufficient for 99% of HTTPS  > applications), so the content signing should always be preferred  > over distributor validation.  And now I'm seriously confused. For clients that do not validate hostnames it would be true that you could get an HTTPS cert for any domain name and use it, this would also work for the case where you first use HTTP to get a redirect to HTTPS (the attacker intercepts the HTTP and sends you to an attacker controlled HTTPS). Hence ALWAYS using HTTPS!  I really suspect you have misunderstood what encrypted network protocols are for. Typically they address three major problems: integrity (attackers modifying traffic en route), confidentiality (by encrypting it) and as an offshoot of these two properties, and the magic of key exchanges you can also handle authentication securely, if desired.   - --  Kurt Seifried Red Hat Security Response Team (SRT) PGP: A90B 66BF -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux)  6aSxSVbOoCC0Yg/JjUdL =8cIv -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      