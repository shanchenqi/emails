  oss-security - Re: HTTPS (was: rubygems insecure download (and other problems))            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 15 Aug From: Donald Stufft <donald@...fft.io> To: oss-security@...ts.openwall.com Subject: Re: HTTPS (was: rubygems insecure download (and other problems))   On Aug 15, at AM, gremlin@...mlin.ru wrote:  > On Kurt Seifried wrote: >  >> everyone should be enabling HTTPS where possible, >  > Very dangerous mistake. HTTPS should be used only for non-anonymous > access, otherwise plain HTTP is preferred. In any case, let the users > choose whether they want to use it.  Why would HTTP be preferred? There's practically no downside to using HTTPS always.  >  > Compare to FTP vs SCP/SFTP: first is for getting files from anyone > (into /incoming) and giving files for everyone (from /pub), second > is for transferring your own files. Obviously, I presume FTP daemon > to be configured for anonymous-only access. >  >> intercepting and modifying HTTP is trivial. >  > Yes. But intercepting and modifying HTTPS requires just an ability > to issue client-trusted certificates (sufficient for 99% of HTTPS > applications), so the content signing should always be preferred > over distributor validation.  Security is always a game of margins. The set of people who can issue a certificate for a domain they don't own AND are in a position to exploit a user trying to install something is far smaller than the set of people who are in a position to exploit a HTTP connection.  Content signing is preferred but that is a much harder problem to solve in general for a repository like Rubygems than simple using TLS which is a pretty good approximation.  >  >  > --  > Alexey V. Vissarionov aka Gremlin from Kremlin <gremlin ПРИ gremlin ТЧК ru> > GPG key ID: keyserver: hkp://subkeys.pgp.net > GPG key fingerprint: FE9F 8AC9 6E4E AC45 EF3B 1FA8   ----------------- Donald Stufft PGP: // 7C6B 7C5D 5E2B F04F 6E3C BCE9 DCFA   Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      