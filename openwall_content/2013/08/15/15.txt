  oss-security - Re: HTTPS            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 15 Aug From: Kurt Seifried <kseifried@...hat.com> To: oss-security@...ts.openwall.com CC: gremlin@...mlin.ru Subject: Re: HTTPS  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  Ah you appear to be making two classical mistakes. You are confusing technical means for enforcing policy (e.g. security policy, privacy policy) with the actual policy itself. You are also making the second classical mistake of "one size fits all", what you see as valid security policy (anonymous access must be unencrypted, login access MUST be encrypted) is what you think the entire world should use.  This is obviously not the case. Some organizations may be very concerned with availability and exfiltration of data and ban ANY encryption, some sites may be very concerned with the privacy and integrity of their data and require mandatory encryption of their data in transit, at rest, and so on. Who is right? Both are.  Technical measures like encryption are simply a means of enforcing policy/laws/etc, First you decide on your policy (and take into account any laws/etc.), then you find technical means to achieve that policy. Not the other way around.  So in this case the policy can probably be stated as:  "When someone downloads a ruby gem via the rubygems.org system we want to ensure they get the gem they requested, and not one that an attacker has modified."  So one way to achieve this policy would be gem code signing. Several efforts to implement this started and failed due to lack of community support/etc., due in large part to people confusing technical measures with policy, e.g. people were arguing the use of various cryptographic primitives before they'd answered questions like "do we require end developers to participate in this, or do we just involve rubygems.org? do we want end to end signing?" and so on.  Obviously none of this progressed. So now I think the best option is to harden the existing system as best we can to protect users.  - --  Kurt Seifried Red Hat Security Response Team (SRT) PGP: A90B 66BF -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux)  =wzAD -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      