  oss-security - Re: PostgreSQL insecure install via yum (multiple  problems)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 19 Aug From: Kurt Seifried <kseifried@...hat.com> To: oss-security@...ts.openwall.com CC: "Eric H. Christensen" <echriste@...hat.com>, security@...tgresql.org,         kevin@...ye.com Subject: Re: PostgreSQL insecure install via yum (multiple  problems)  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  On PM, Eric H. Christensen wrote: > On Mon, Aug 19, at Kurt Seifried wrote: >> Signing RPM's isn't very useful if you never make the signing >> key available! >  > You mean like this: > > >  I'm pretty sure pgp.mit.edu isn't the best source for PGP keys any > longer, unfortunately.  Dunno who to ask, so adding Scrye: can we make sure Google indexes the Fedora key server? This actually raises a good point, what are the key servers now? The big 3 used to be:  http://pgp.mit.edu/ http://keyserver.pgp.com/ http://sks-keyservers.net/  and it's not on any of them =( Even if the key is uploaded PostgreSQL doesn't list the key fingerprint anywhere securely, the key ID can be spoofed, so yeah there might be keys with the ID but I got no clue if they're legitimate or not =(.  Really all we need is an HTTPS server (easy) and a web page listing the key/fingerprint, ideally the full text of the key. I understand small projects may not do this, but PostgreSQL is pretty big and professional.  > -- Eric  - --  Kurt Seifried Red Hat Security Response Team (SRT) PGP: A90B 66BF -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux)  QhFEfUq2ycyncMChZDnl =UiGf -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      