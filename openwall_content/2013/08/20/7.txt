  oss-security - Re: PostgreSQL insecure install via yum (multiple  problems)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 20 Aug From: Moritz Naumann <info@...itz-naumann.com> To: oss-security@...ts.openwall.com Subject: Re: PostgreSQL insecure install via yum (multiple  problems)  -----BEGIN PGP SIGNED MESSAGE----- Hash:  Eric H. Christensen: > On Mon, Aug 19, at Kurt Seifried wrote: >> Signing RPM's isn't very useful if you never make the signing >> key available! >  > You mean like this:  >  Still >  plain HTTP there (on a somewhat unrelated site), also: * short key ID (no fingerprint) listed on http://yum.postgresql.org * DSA-1 key: 3 don'ts in a row.  The situation is a bit better for the APT repository: http://wiki.postgresql.org/wiki/Apt  * RSA key * instructs to download key from same site - using plain http   (but HTTPS is available - GoDaddy CA domain control validated) * (short key ID used in documentation only)  In contrary to the Yum repository signing key this OpenPGP key is signed by someone else, notably a Debian developer, so verifying it via the web of trust / strong set /may/ succeed.  Maybe a new policy document would solve it... http://wiki.postgresql.org/wiki/Policies http://wiki.postgresql.org/wiki/ReleasePrep  This said, I'm glad that the Postgresql Global Development Group do provide us with these repositories.  Moritz -----BEGIN PGP SIGNATURE-----  fLjFCmkLsxdq1/uvirjljscYYyIGWnDdAYURfXQgDslG4uRAOBH/JUJqN/NnAHra =mzCS -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      