  oss-security - Re: Requesting CVE-ID(s) for Python's pip            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Thu, 1 Aug From: Jeremy Stanley <fungi@...goth.org> To: oss-security@...ts.openwall.com Subject: Re: Requesting CVE-ID(s) for Python's pip  On isis agora lovecruft wrote: > On Jul 30, at AM, Kurt Seifried <kseifried@...hat.com> wrote: > [...] > > I'm not sure in this case MD5 alone is a security vulnerability, > > I think previously it had been decided that just because it uses > > MD5 wasn't ernough to get a CVE, it had to have some specific > > use that made MD5 a problem. [...] > Marc Stevens recently published a paper on using probabilistic > conditionals to control differential computation for two-block MD5 > collisions [...]  But as we discussed the last time this came up, realistic attack vectors like "pad my malicious payload so that it hashes to the same value as the official uploaded content from the real author" require a second preimage attack. The paper you cited is merely about improving the time needed to mount a collision attack (picking two datasets which hash to the same value).      https://en.wikipedia.org/wiki/Preimage_attack  So the worst exploit I can envision from this is that a malicious author constructs two programs. One is benign, and gets code reviewed and uploaded. Then at some point the second, which is malicious in nature, is surreptitiously uploaded in place of the first and nobody notices the switch. --  { PGP( ); FINGER( fungi@...ulhu.yuggoth.org ); WWW( http://fungi.yuggoth.org/ ); IRC( fungi@....yuggoth.org#ccl ); WHOIS( STANL3-ARIN ); MUD( ); }  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      