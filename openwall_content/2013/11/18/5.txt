  oss-security - Re: CVE request: RubyGem omniauth-facebook access token security vulnerability            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 18 Nov From: Josef Šimánek <josef.simanek@...il.com> To: oss-security@...ts.openwall.com Subject: Re: CVE request: RubyGem omniauth-facebook access token security vulnerability  Sorry for bumping, but is there any problem with this CVE request?  Fix is here and release is prepared. We're waiting for CVE only.  regards Josef  Josef Šimánek <josef.simanek@...il.com>: > # RubyGem omniauth-facebook access token security vulnerability > > There is a security vulnerability in the omniauth-facebook <= > >     Versions affected: <= >     Fixed versions:    >= > > ## Impact > > Because omniauth-facebook <= supports passing an access token > directly in the URL, an attacker may be able to authenticate as > another user by passing a valid access token obtained from Facebook > for another app. > > If you're currently using this feature, and passing the access token > directly, you should change your integration to use one of the secure > methods using either a signed request or the code flow. These secure > methods are default, so unless you are explicitly passing an access > token you should not need to make any integration changes to upgrade > to > > All users running an affected release should upgrade to >= > > ## Releases > > The releases is available at the normal locations. > > ## Workarounds > > None. > > ## Credits > > Egor Homakov (@homakov)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      