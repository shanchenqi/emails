  oss-security - Re: Requesting four (4) CVE identifiers for GitLab            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Mon, 18 Nov From: Jacob Vosmaer <jacob@...lab.com> To: oss-security@...ts.openwall.com Subject: Re: Requesting four (4) CVE identifiers for GitLab  -----BEGIN PGP SIGNED MESSAGE----- Hash:  Hi Kurt,  Thanks for assigning the identifiers and thanks for the hint. I have included the updated blog post below.  ### Multiple critical vulnerabilities in GitLab New critical vulnerabilities recently discovered in GitLab enable unauthenticated API access, remote code execution, local file inclusion and unauthorized access to private repositories. All users should update GitLab and gitlab-shell immediately.  _Update (18 November added CVE numbers._  <!--more-->  ### Releases GitLab and GitLab CE are available from https://gitlab.com/gitlab-org/gitlab-ce and https://github.com/gitlabhq/gitlabhq; update instructions can be found in https://github.com/gitlabhq/gitlabhq/blob/master/doc/update/patch_versions.md. For more information about GitLab EE see [our blog post on GitLab.com]( ).  Gitlab-shell is available from https://gitlab.com/gitlab-org/gitlab-shell and https://github.com/gitlabhq/gitlab-shell . To upgrade gitlab-shell it suffices to run `sudo su git -c 'git fetch && git checkout in /home/git/gitlab-shell .  ### Credits Thanks to joernchen of [Phenoelit](http://www.phenoelit.org/) for reporting these vulnerabilities to us.  # Unauthenticated API access to GitLab when using MySQL There is an unauthenticated API access vulnerability in all version of GitLab. This vulnerability has been assigned CVE identifier  Versions affected: all  Fixed versions: Community Edition Enterprise Edition  ### Impact On GitLab installations which use MySQL as their database backend it is possible for an attacker to assume the identity of any existing GitLab user in certain API calls. This attack can be performed by unauthenticated users.  This vulnerability has been fixed in GitLab GitLab Community Edition and GitLab Enterprise Edition  ### Workarounds If you are unable to upgrade you should apply the following patch and restart GitLab.  <pre> - --- a/lib/api/helpers.rb +++ b/lib/api/helpers.rb @@ @@ module API      SUDO_PARAM = :sudo       def current_user - -      @current_user ||= User.find_by_authentication_token(params[PRIVATE_TOKEN_PARAM] || env[PRIVATE_TOKEN_HEADER]) +      private_token = (params[PRIVATE_TOKEN_PARAM] || env[PRIVATE_TOKEN_HEADER]).to_s +      @current_user ||= User.find_by_authentication_token(private_token)        identifier = sudo_identifier() </pre>  # Remote code execution vulnerability via Git SSH access in GitLab There is a remote code execution vulnerability via Git SSH access in GitLab. This vulnerability has been assigned CVE identifier  Versions affected: 5.0 and newer  Not affected: 4.2 and older  Fixed versions: Community Edition Enterprise Edition (running gitlab-shell  ### Impact In affected versions an attacker can execute arbitrary code on a GitLab server by pushing carefully crafted changes via Git over SSH. This attack requires a GitLab user with an associated SSH key.  This vulnerability has been fixed in gitlab-shell which is known to work with GitLab 5.4 and newer. All users should update gitlab-shell to version immediately.  ### Workarounds If you are unable to upgrade, please apply the following patch in `/home/git/gitlab-shell`. <pre> - --- a/lib/gitlab_config.rb +++ b/lib/gitlab_config.rb @@ @@ class GitlabConfig      if redis.empty?        # Default to old method of connecting to redis        # for users that haven't updated their configuration - -      "env -i redis-cli" +      %W(env -i redis-cli)      else        if redis.has_key?("socket") - -        "#{redis['bin']} -s #{redis['socket']}" +        %W(#{redis['bin']} -s #{redis['socket']})        else - -        "#{redis['bin']} -h #{redis['host']} -p #{redis['port']}" +        %W(#{redis['bin']} -h #{redis['host']} -p #{redis['port']})        end      end    end  - --- a/lib/gitlab_update.rb +++ b/lib/gitlab_update.rb @@ -1,5 +1,6 @@  require_relative 'gitlab_init'  require_relative 'gitlab_net' +require 'json'   class GitlabUpdate    attr_reader :config @@ @@ class GitlabUpdate    end     def update_redis - -    command = "#{config.redis_command} rpush '#{config.redis_namespace}:queue:post_receive' '{\"class\":\"PostReceive\",\"args\":[\"# - -    system(command) +    queue = "#{config.redis_namespace}:queue:post_receive" +    msg = JSON.dump({'class' => 'PostReceive', 'args' => [@repo_path, @oldrev, @newrev, @refname, @key_id]}) +    system(*config.redis_command, 'rpush', queue, msg, err: '/dev/null', out: '/dev/null')    end  end </pre>  # Local file inclusion vulnerability in GitLab There is a local file inclusion vulnerability in GitLab. This vulnerability has been assigned CVE identifier  Versions affected: 5.0 and newer  Not affected: 4.2 and older  Fixed versions: Community Edition Enterprise Edition (running gitlab-shell  ### Impact In affected versions an attacker can include the contents of a local file in the metadata of a Git repository hosted on the server via the GitLab web interface. This vulnerability can only be exploited by authenticated GitLab users.  This vulnerability has been fixed in gitlab-shell which is known to work with GitLab 5.4 and newer. All users should update gitlab-shell to version immediately.  ### Workarounds If you are unable to upgrade you should apply the following patch in `/home/git/gitlab-shell`.  <pre> - --- a/lib/gitlab_projects.rb +++ b/lib/gitlab_projects.rb @@ @@ class GitlabProjects    def create_branch      branch_name = ARGV.shift      ref = ARGV.shift || "HEAD" - -    cmd = %W(git --git-dir=#{full_path} branch #{branch_name} #{ref}) +    cmd = %W(git --git-dir=#{full_path} branch -- #{branch_name} #{ref})      system(*cmd)    end  @@ @@ class GitlabProjects    def create_tag      tag_name = ARGV.shift      ref = ARGV.shift || "HEAD" - -    cmd = %W(git --git-dir=#{full_path} tag #{tag_name} #{ref}) +    cmd = %W(git --git-dir=#{full_path} tag -- #{tag_name} #{ref})      system(*cmd)    end  @@ @@ class GitlabProjects    def import_project      @source = ARGV.shift      $logger.info "Importing project #{@...ject_name} from <#{@...rce}> to <#{full_path}>." - -    cmd = %W(git clone --bare #{@...rce} #{full_path}) +    cmd = %W(git clone --bare -- #{@...rce} #{full_path})      system(*cmd) && create_hooks(full_path)    end  @@ @@ class GitlabProjects      end       $logger.info "Forking project from <#{full_path}> to <#{full_destination_path}>." - -    cmd = %W(git clone --bare #{full_path} #{full_destination_path}) +    cmd = %W(git clone --bare -- #{full_path} #{full_destination_path})      system(*cmd) && create_hooks(full_destination_path)    end  </pre>  # Repository access privilege escalation vulnerability in GitLab There is a repository access privilege escalation vulnerability in GitLab. This vulnerability has been assigned CVE identifier  Versions affected: 5.0 and newer  Not affected: 4.2 and older  Fixed versions: Community Edition Enterprise Edition (running gitlab-shell  ### Impact In affected versions a GitLab user can escalate their repository access privileges and clone a repository that they should not have access to via Git SSH access. This vulnerability can only be exploited by authenticated GitLab users.  This vulnerability has been fixed in gitlab-shell which is known to work with GitLab 5.4 and newer. All users should update gitlab-shell to version immediately.  ### Workarounds If you are unable to upgrade you should apply the following patch in `/home/git/gitlab-shell`.  <pre> - --- a/lib/gitlab_shell.rb +++ b/lib/gitlab_shell.rb @@ @@ class GitlabShell    def parse_cmd      args = Shellwords.shellwords(@origin_cmd)      @git_cmd = args[0] - -    @repo_name = args[1] +    @repo_name = escape_path(args[1])    end     def git_cmds @@ @@ class GitlabShell    def log_username      @config.audit_usernames ? username : "user with key #{@..._id}"    end + +  def escape_path(path) +    if File.absolute_path(path, repos_path) == File.join(repos_path, path) +      path +    else +      raise "Wrong repository path" +    end +  end  end  </pre>  -----BEGIN PGP SIGNATURE----- Comment: GPGTools - https://gpgtools.org  =Lrou -----END PGP SIGNATURE-----   Best regards,  Jacob Vosmaer GitLab.com   Kurt Seifried <kseifried@...hat.com>  > -----BEGIN PGP SIGNED MESSAGE----- > Hash: SHA1 > > On AM, Jacob Vosmaer wrote: > > We have just released a new security advisory for GitLab at > > http://blog.gitlab.org/multiple-critical-vulnerabilities-in-gitlab/, > > > > > concerning the following four vulnerabilities: > > > > - Unauthenticated API access to GitLab when using MySQL - Remote > > code execution vulnerability via Git SSH access in GitLab - Local > > file inclusion vulnerability in GitLab - Repository access > > privilege escalation vulnerability in GitLab > > > > We would like to request four CVE identifiers for these issues. > > > Nice blog write up, one note if you can post a copy with emails it's > better in case the URL ever dies or something. > > GitLab Unauthenticated API access to GitLab when using MySQL > > GitLab Remote code execution vulnerability via Git SSH > access in GitLab > > GitLab Local file inclusion vulnerability in GitLab > > GitLab Repository access privilege escalation > vulnerability in GitLab > > > > Thanks to joernchen of http://www.phenoelit.org/ for reporting > > these issues to us. > > > > > > Best regards, > > > > Jacob Vosmaer GitLab.com > > > > - -- > Kurt Seifried Red Hat Security Response Team (SRT) > PGP: A90B 66BF > -----BEGIN PGP SIGNATURE----- > Version: GnuPG (GNU/Linux) > > > > > > > > > > > > > > =DKCL > -----END PGP SIGNATURE----- >   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      