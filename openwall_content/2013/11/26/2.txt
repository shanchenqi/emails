  oss-security - Re: CVE request: Kernel MSM - Memory leak in  drivers/base/genlock.c            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 25 Nov From: Seth Arnold <seth.arnold@...onical.com> To: "Christey, Steven M." <coley@...re.org> Cc: "oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com> Subject: Re: CVE request: Kernel MSM - Memory leak in  drivers/base/genlock.c  On Tue, Nov 26, at Christey, Steven M. wrote: > Kurt said: >  > >> The Genlock driver does not properly initialize all members of a > >> structure before copying it to user space. This allows a local > >> attacker to obtain potentially sensitive information from kernel > >> stack memory via ioctl system calls. > > > >This should be classified as Information Disclosure, "memory > >leak" refers to memory being used and not released properly, resulting > >in out of memory conditions. >  > In CWE, we discourage the "memory leak" term because it has multiple > meanings and interpretations: (1) that memory is allocated but never > released, or (2) that sensitive portions of memory are accidentally > disclosed to untrusted parties. >  > This request sounds like variant (2) of the varying uses of the "memory > leak" term, although Kurt's interpretation seems to be that it's about > variant (1), which further reinforces my personal desire to see that > term go away forever.  I wrote a response to Kurt, suggesting that he had mis-diagnosed the problem but did not send my response when I found that his message said the same thing mine said once you replace his first ',' with a ';'. Try this instead:  > >This should be classified as Information Disclosure; "memory > >leak" refers to memory being used and not released properly, resulting > >in out of memory conditions.  [Kurt's words with the first comma replaced with a semicolon.]  It's amazing what a difference two pixels can make. :)  > Anyway... Note that, as this issue is described, "information > disclosure" actually results from a root cause in which certain > locations are not properly initialized.  Thus Improper > Initialization (or its child Use of Uninitialized Variable) are > probably more appropriate characterizations of the core issue; in this > case, it happens to lead to memory disclosure, but in other cases, it > might lead to privilege escalation or other consequences (depending on > how the uninitialized data is used.)  I came up with CWE before I properly parsed Kurt's mail: Improper Cross-boundary Removal of Sensitive Data  With so much to chose from it's surprising the fix is one line of code. :)   Thanks  Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      