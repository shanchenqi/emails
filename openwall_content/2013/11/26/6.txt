  oss-security - kernel: uio: [was: Re: some unstracked  linux kernel security fixes]            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 26 Nov From: Petr Matousek <pmatouse@...hat.com> To: Greg Kroah-Hartman <gregkh@...uxfoundation.org>,         "Hans J. Koch" <hjk@...sjkoch.de> Cc: Nico Golde <oss-security+ml@...lde.de>, oss-security@...ts.openwall.com,         security@...nel.org, Dan Carpenter <dan.carpenter@...cle.com> Subject: kernel: uio: [was: Re: some unstracked  linux kernel security fixes]  Adding Greg as he's also UIO maintainer (at least according to MAINTAINERS).  On Thu, Nov 14, at Petr Matousek wrote: > On Thu, Nov 14, at Dan Carpenter wrote: > > On Thu, Nov 14, at Petr Matousek wrote: > > > On Tue, Nov 12, at Petr Matousek wrote: > > > > Hi, > > > >  > > > > On Sun, Nov 03, at Nico Golde wrote: > > > > > drivers/uio/uio.c: mapping of physical memory to user space without proper size check > > > > > > > > >  > > > > there is a size check in uio_mmap() (the only caller of uio_mmap_physical()): > > > >  > > > >         requested_pages = vma_pages(vma); > > > >         actual_pages = ((idev->info->mem[mi].addr & ~PAGE_MASK) > > > >                         + idev->info->mem[mi].size + PAGE_SIZE -1) >> PAGE_SHIFT; > > > >         if (requested_pages > actual_pages) > > > >                 return -EINVAL; > > > >  > > > > why it wasn't sufficient? > > >  > > > Apparently there was a CVE split [1] and this is now > > >  > > >   > > >  > > > I still think this is a non-issue based on the above mentioned size > > > check. Can I please get second opinion from someone more knowledgeable > > > on this? > > >  > > > > >  > > Added Hans to the CC list since he's the maintainer.  Petr is asking if > > the size checks in uio_mmap() and uio_mmap_physical() are duplicative. > >  > > > Isn't the size check redundant because of  > > >  > > >         requested_pages = vma_pages(vma); > > >         actual_pages = ((idev->info->mem[mi].addr & ~PAGE_MASK) > > >                         + idev->info->mem[mi].size + PAGE_SIZE -1) >> PAGE_SHIFT; > > >         if (requested_pages > actual_pages) > > >                 return -EINVAL; > >  > > That check is worrying requested_pages is rounded down to the nearest > > page >  > Is there any rounding down happening? I would expect both vma->vm_start > and vma->vm_end to be page aligned. >  > > but actual_pages is rounded up. I don't understand why we are > > adding "(mem[mi]addr % PAGE_SIZE)" to the pre rounded up actual_pages. >  > Imagine addr and size are not page aligned and > ((addr & ~PAGE_MASK) + (size & ~PAGE_MASK)) > PAGE_SIZE. > We need to round up two pages instead of one in that case. >  > > So, yeah, it seems like we do check the size twice now except the first > > time we do it wrong. >  > With unaligned addr and/or size we can end up with mapping memory  > not belonging to the UIO_MEM_PHYS registered region, but that is something > you expect when using this interface from the drivers and/or userspace, > because you want access to the whole region to properly handle the > device, no? >  > IOW, with the current changes, isn't the functionality broken for > non page-aligned addr and/or size?  --  Petr Matousek / Red Hat Security Response Team PGP: AF16 F9AF  77CA  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      