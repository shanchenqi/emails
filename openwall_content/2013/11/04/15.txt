  oss-security - Remote code execution vulnerability in the SSH key  upload feature of GitLab            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Mon, 4 Nov From: Jacob Vosmaer <jacob@...lab.com> To: oss-security@...ts.openwall.com Subject: Remote code execution vulnerability in the SSH key  upload feature of GitLab  -----BEGIN PGP SIGNED MESSAGE----- Hash:  # Remote code execution vulnerability in the SSH key upload feature of GitLab  There is a remote code execution vulnerability in the SSH key upload feature of GitLab. This vulnerability has been assigned the CVE identifier  Versions affected: 5.0, 5.1, 5.2, 5.3, 5.4, 6.0, 6.1, 6.2  Not affected: 4.2 and earlier  Fixed versions:  ### Impact The gitlab-shell SSH access endpoint manages the authorized_keys file for the git user. When a user adds a public key using the GitLab web interface a gitlab-shell command is invoked to add the public key to authorized_keys. In affected versions, the public key text entered by the user is exposed to the Bourne shell in a way that can be exploited to achieve code execution as the git user. Only authenticated users can upload an SSH key.  All users running an affected release should upgrade gitlab-shell immediately.  ### Releases Gitlab-shell available from https://github.com/gitlabhq/gitlab-shell, fixes the vulnerability and has been tested with GitLab and GitLab  ### Workarounds If you are using GitLab 5.0 or newer and you cannot upgrade to GitLab or GitLab you should apply the following edit to gitlab-shell.  - --- a/lib/gitlab_keys.rb +++ b/lib/gitlab_keys.rb @@ @@ class GitlabKeys    def add_key      $logger.info "Adding key #{@..._id} => #{@....inspect}"      cmd = "command=\"#{ROOT_PATH}/bin/gitlab-shell #{@..._id}\",no-port-forwarding,no-X11-forwarding,no-agent-forwarding,no-pty #{@...}" - -    cmd = "echo \'#{cmd}\' >> #{auth_file}" - -    system(cmd) +    open(auth_file, 'a') { |file| file.puts(cmd) }    end     def rm_key  ### Credits Thanks to Nigel Kukard of http://www.allworldit.com/ for reporting the vulnerability to us.  -----BEGIN PGP SIGNATURE----- Comment: GPGTools - https://gpgtools.org  =UL60 -----END PGP SIGNATURE-----  Best regards,  Jacob Vosmaer GitLab.com   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      