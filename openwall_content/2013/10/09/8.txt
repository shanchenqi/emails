  oss-security - Re: Source of bad password hashing practices? MySQL  manual...            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 9 Oct From: Seth Arnold <seth.arnold@...onical.com> To: Rich Felker <dalias@...ifal.cx> Cc: oss-security@...ts.openwall.com Subject: Re: Source of bad password hashing practices? MySQL  manual...  On Tue, Oct 08, at Rich Felker wrote: > It's come to my attention recently that the MySQL reference manual is > recommending very poor password hashing practices as part of its > security guidelines: >  >   "Do not store cleartext passwords in your database. If your computer >   becomes compromised, the intruder can take the full list of >   passwords and use them. Instead, use SHA2(), SHA1(), MD5(), or some >   other one-way hashing function and store the hash value." >  >   (http://dev.mysql.com/doc/refman/5.7/en/security-guidelines.html) >  > With MySQL being one of the major traditional "LAMP stack" components, > I wonder if this is the source from which many web developers are > getting their ideas on how to do password hashing. What is the proper > procedure for publicizing documentation bugs like this which are > leading to poor security practice, and for getting them fixed?  I don't know if we can realistically assign a CVE number to bad advice on the Internet :) , but it would be immensely useful if this paragraph could be updated to say:     "Do not store cleartext passwords in your database. If your computer    becomes compromised, the intruder can take the full list of    passwords and use them. Instead, use PBKDF2, bcrypt, or scrypt to    compute unique hash values suitable for storing in the database."  A further change that might be nice would change "If your computer becomes compromised ..." to "When your computer becomes compromised ..." but I could understand if the MySQL team doesn't share my pessimism and choses to ignore this small change.  But please, MySQL team, feel free to use my proposed paragraph under whatever license you wish. The old one has to go.  Thanks  Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      