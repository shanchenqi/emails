  oss-security - Re: CVE request for saltstack minion identity usurpation            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 16 Oct From: Kurt Seifried <kseifried@...hat.com> To: oss-security@...ts.openwall.com, Michael Scherer <mscherer@...hat.com>,         info@...tstack.com Subject: Re: CVE request for saltstack minion identity usurpation  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  On PM, Kurt Seifried wrote: > On PM, Michael Scherer wrote: >> Hi, >  >> While looking for saltstack issues on github, i stumbled on this  >> pull request : >  >> It seems that saltstack, a client/server configuration system (  >> like puppet, chef, cfengine ) allowed to have any minions ( >> agent on the server to be configured ) to masquerade itself as >> any others agents when requesting stuff from the master ( ie, >> main server ). While I didn't fully check, this would permit a >> compromised server to request data from another server, thus >> leading to potential informations leak ( like passwword, etc ). >  >> Can a CVE be assigned, and I will pass it to upstream on the bug >>  report ? >  > Ok mmcallis@ researched these and found: >  > saltstack Insufficient argument validation in > several modules >  > saltstack MITM ssh attack on salt-ssh >  > saltstack Insecure usage of a predictable directory > in /tmp and on minion (CVE MERGE of two tmp issues) >  > saltstack pillar.ext or qemu_nbd.clear yaml string > RCE  Argh. The above are currently embargoed, I misunderstood and thought they were public (along with the following one). My apologies, especially to upstream and users of saltstack. Adding saltstack info@ to the CC (can't find a security address).  > saltstack minion identity usurpation    - --  Kurt Seifried Red Hat Security Response Team (SRT) PGP: A90B 66BF -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux)  =nPX+ -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      