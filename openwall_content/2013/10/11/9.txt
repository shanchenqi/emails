  oss-security - Re: [pulseaudio-discuss] Vulnerability in Webkit-GTK and PulseAudio  volume handling            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 11 Oct From: Xabier RodrĂ­guez Calvar <calvaris@...il.com> To: General PulseAudio Discussion <pulseaudio-discuss@...ts.freedesktop.org> Cc: oss-security@...ts.openwall.com, webkit-gtk@...ts.webkit.org Subject: Re: [pulseaudio-discuss] Vulnerability in Webkit-GTK and PulseAudio  volume handling  O Xov, ĂĄs Colin Guthrie escribiu: > It's certainly an interesting issue and your code highlights the > problem > quite well. >  > I'm not sure I consider it a technical vulnerability tho' (just my > personal opinion) but I do appreciate the damage to both h/w and > hearing > that could result and thus I won't argue about classifying it as such. >  > What would be more interesting to me would be how the same code works > on > Windows 7 which I believe also implements a flat volume scheme (not > sure > about Win 8) and how it handles stream volumes in this context > (background: >  For Colin to know, before touching anything in WebKitGtk+ the behavior was that the volume was ramping up to with every website regardless their volume control.  I met Slomo and Lennart at GUADEC and we thought that the best was letting the sink, pulsesink in this case, set the volume and we would just get that for the slider, regardless the volume model applied. This was supposed to be a good compromise for the different situations (using PA with or without flat volumes, using another sink) as volume wouldn't ramp up to always.  There are some other restrictions we have to observe, though:       1. We want to be agnostic of the GStreamer sink used and of course,         to the volume model used by pulse, because we don't know it.      2. We want to allow audio passthrough when possible.      3. We want to be coherent with the rest of GNOME apps, and the         volume model they are using.      4. We have to comply with the HTML5 W3C standard that says that         volume will be by default, though user agents can decide to         restore former volume (perfect if we let pulse decide it).  We would easily add a GStreamer volume element and solve what Alexander says, buy we would be breaking 2 and 3 rules and to fulfill 3 and 4, I actually tested that with the proposed fix, the volume could still ramp up to because in our opinion, it is up to the web developer to sanitize their volume management or up to the user to change the volume model.  Best regards.    Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      