  oss-security - qpdf has some security fixes            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Fri, 18 Oct From: Jay Berkenbilt <ejb@...org> To: oss-security@...ts.openwall.com Subject: qpdf has some security fixes  I have released qpdf today.  This release includes some security fixes and hardening changes as suggested by Florian Weimer of Red Hat. Red Hat's security team analyzed the software and decided that there were no issues serious enough to warrant issuing any CVEs or creating any embargoed issues, so all the fixes are published on https://github.com/qpdf/qpdf  Here are the commits that are relevant:  Security: replace operator[] with at Security: use a secure random number generator Security: avoid pre-allocating vectors based on file data Security: sanitize /W in xref stream Security: better bounds checks for linearization data Security: handle empty name in normalizeName Security: fix potential multiplication overflow Security: keep cur_byte pointing into bytes array  and earlier used random() or rand() from the standard library for random numbers, but the TODO file for qpdf had mentioned this from the beginning.  qpdf uses /dev/urandom on Linux MS Windows Crypto on Windows, and tries to find a suitable random device for other platforms.  It can fall back to insecure random only when configured with --enable-insecure-random.  Since there are no CVEs issued for this, I have not provided backports to other versions that some distributions may contain, but I was able to backport the changes into the 2.x releases in a throw-away branch.  The "replace operator[] with at" change was programmatically generated and wouldn't make sense to backport.  Instead, it could be regenerated for older versions.  If any distributions decide that they want to issue security bulletins for any of these issues, I can assist with doing backports.  To my knowledge, qpdf is a leaf node in every distribution that carries any version older than which is the first version that was a dependency of open printing.  Most of the issues found in the qpdf code were in parts of the code that are not used by open printing. That said, the changes can be relatively easily backported to versions as recent as that.  For any debian security team members who may receive this, I have already upload qpdf to debian unstable.  --  Jay Berkenbilt <ejb@...org>  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      