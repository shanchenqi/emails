  oss-security - Re: CVE Requests (maybe): Linux kernel: various info  leaks, some NULL ptr derefs            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 6 Mar From: Mathias Krause <minipli@...glemail.com> To: Kurt Seifried <kseifried@...hat.com> Cc: oss-security@...ts.openwall.com, Solar Designer <solar@...nwall.com> Subject: Re: CVE Requests (maybe): Linux kernel: various info  leaks, some NULL ptr derefs  On Wed, Mar 6, at AM, Kurt Seifried <kseifried@...hat.com> wrote: > -----BEGIN PGP SIGNED MESSAGE----- > Hash: SHA1 > > On PM, Mathias Krause wrote: >> Hi Kurt, >> >> I don't care much about info leaks beyond merely fixing them. But >> Alexander asked me to request a CVE ID for the recent crypto fix >> of mine and as I did quite a few of such fixes in the recent past, >> I'll just list them all here. The information might be a bit scarce >> for a CVE ID request but as I don't expect any CVE IDs anyway, I >> didn't wanted to do too much unnecessary work. ;) > > CVE ID's prompt people to back port these security fixes which is a > good thing indeed =).  M'kay. Might be the case for the crypto fix as it wasn't Cc'ed to stable, albeit I asked Herbert for it :/ (see  >> crypto: user - fix info leaks in report API gitweb:  >> xfrm_user: ensure user supplied esn replay window is valid gitweb:  >> xfrm_user: fix info leak in copy_to_user_tmpl() gitweb:  >> xfrm_user: fix info leak in copy_to_user_policy() gitweb:  >> xfrm_user: fix info leak in copy_to_user_state() gitweb:  >> xfrm_user: fix info leak in copy_to_user_auth() gitweb:  >> net: fix info leak in compat dev_ifconf() gitweb:  >> ipvs: fix info leak in getsockopt(IP_VS_SO_GET_TIMEOUT) gitweb:  >> dccp: fix info leak via getsockopt(DCCP_SOCKOPT_CCID_TX_INFO) gitweb:  >> llc: fix info leak via getsockname() gitweb:  >> l2tp: fix info leak via getsockname() gitweb:  >> Bluetooth: L2CAP - Fix info leak via getsockname() gitweb:  >> Bluetooth: RFCOMM - Fix info leak via getsockname() gitweb:  >> Bluetooth: RFCOMM - Fix info leak in ioctl(RFCOMMGETDEVLIST) gitweb:  >> Bluetooth: RFCOMM - Fix info leak in getsockopt(BT_SECURITY) gitweb:  >> Bluetooth: HCI - Fix info leak via getsockname() gitweb:  >> Bluetooth: HCI - Fix info leak in getsockopt(HCI_FILTER) gitweb:  >> atm: fix info leak via getsockname() gitweb:  >> atm: fix info leak in getsockopt(SO_ATMPVC) gitweb:  >> net/tun: fix ioctl() based info leaks gitweb:  >> udf: avoid info leak on export gitweb:  >> isofs: avoid info leak on export gitweb:  >> xfrm_user: return error pointer instead of NULL gitweb:  >> dccp: check ccid before dereferencing gitweb:  > can you provide the full git id/link to these?  Links are inlined above. The pattern how to create web-links is pretty obvious, though.  > Also were they all > discovered by the same researcher?  All of the bugs were discovered and fixed by me. But I'm no researcher. It's more a hobby of mine ;)  >> While we are at it: Do we care about getting CVE IDs for info >> leaks? If so, all of them or only for the ones with leaks above a >> certain threshold (>= 16 bytes, e.g.)? > > Yes please. Much like DNA fragments you can potentially string them > together to reveal larger things.  Okay. I'll continue posting my findings, then.   Regards, Mathias  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      