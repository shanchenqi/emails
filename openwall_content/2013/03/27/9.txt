  oss-security - Re: Security vulnerability tools            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 27 Mar From: Corey Bryant <coreyb@...ux.vnet.ibm.com> To: Russ Allbery <rra@...nford.edu> CC: oss-security@...ts.openwall.com Subject: Re: Security vulnerability tools    On PM, Russ Allbery wrote: > Corey Bryant <coreyb@...ux.vnet.ibm.com> writes: > >> Clang >> ----- >> Static analysis tool for C/C++ > > Clang is, properly speaking, a compiler.  It happens to also have a static > analyzer available as part of the same code base. > > If you're going to mention Clang, it's probably also pointing out that > good old GCC has very extensive warning flags that can, among other > things, find possible security vulnerabilities by locating variables that > are used before being set, dangerous printf formats, mismatches between > printf formats and arguments, and so forth.  For example, I currently use: > > WARNINGS = -g -O -D_FORTIFY_SOURCE=2 -Wall -Wextra -Wendif-labels           \ >          -Wformat=2 -Winit-self -Wswitch-enum -Wdeclaration-after-statement  \ >          -Wshadow -Wpointer-arith -Wbad-function-cast -Wcast-align           \ >          -Wwrite-strings -Wjump-misses-init -Wlogical-op                     \ >          -Wstrict-prototypes -Wmissing-prototypes -Wredundant-decls          \ >          -Wnested-externs -Werror > > with GCC (4.6 or later) with all of my software.  Many of those are not > security-related, of course, but -Wformat=2 certainly is, and some of the > -Wall and -Wextra warnings are as well. >  Great, thanks for the input.  I don't see any reason to not include gcc  warning options.  --  Regards, Corey Bryant   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      