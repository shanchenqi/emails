  oss-security - Re: Linux kernel race condition with PTRACE_SETREGS            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Sat, 16 Mar From: Solar Designer <solar@...nwall.com> To: oss-security@...ts.openwall.com Subject: Re: Linux kernel race condition with PTRACE_SETREGS  On Wed, Feb 20, at Solar Designer wrote: > On Tue, Feb 19, at Julien Tinnes wrote: > > The good news is that the race is not trivial to win in an exploit. It > > also requires access to ptrace() (but unfortunately most distros don't > > limit ptrace()). >  > Yeah.  To clarify why the vulnerability looks so bad to me: for our > kernel builds and usage, it appears to be the worst since > (compat_alloc_user_space() missing sanity checks), although it is > probably trickier to exploit in the wild (due to the race).  There were > other local vulnerabilities in the Linux kernel discovered in those ~2.5 > years, but they were in more obscure subsystems (which we generally > don't expose) or/and they required that the local attacker would execute > a SUID/SGID program.  This one, however, is in an (almost) core kernel > component and is self-contained (no dependency on the userland being > non-perfect), which makes it almost as bad as except that > it's a race.  On the other hand, did not affect 32-bit > only kernel builds, whereas this new vulnerability probably does.  There's now a non-free exploit for the PTRACE_SETREGS vulnerability that is reported to work on Linux on in VMs (failing to win the race on bare metal?)   "We do have a 32 bit version and a 2.x version which we'll finish testing and release at some point in the near future. And we'll try to fix the 64 bit version to work on non-VM's."  Since the (in)security community only got this far in 1 month, probably I have somewhat overestimated the severity of this bug.  Formally, its prerequisites are minimal and the impact is grave, but the difficult to win race presumably happened to give a grace period of 1+ month for everyone to patch... which, of course, most sysadmins did not do yet, although updates from major distro vendors are now available.  Of course, it is entirely possible that more powerful exploits are already being used privately, but I have not heard of any yet.  Alexander  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      