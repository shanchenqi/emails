  oss-security - Re: Reverse lookup issue in Net::Server            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 13 Mar From: Salvatore Bonaccorso <carnil@...ian.org> To: oss-security@...ts.openwall.com, kseifried@...hat.com Cc: Russ Allbery <rra@...nford.edu>, 	Remi Gacogne <rgacogne-bugs@...edump.fr> Subject: Re: Reverse lookup issue in Net::Server  Hi  On Mon, Mar 11, at Kurt Seifried wrote: > -----BEGIN PGP SIGNED MESSAGE----- > Hash: SHA1 >  > On PM, Russ Allbery wrote: > > Remi Gacogne <rgacogne-bugs@...edump.fr> writes: > >  > >> I think there is a security issue in the way the access control > >> feature of Net::Server > >> (http://search.cpan.org/perldoc?Net%3A%3AServer) works.  > >> Net::Server is used by various projects including Munin, Postgrey > >> and SQLgrey. > >  > >> The issue lies in the fact that the allow / deny access control > >> does not perform a valid DNS check when given a hostname > >> parameter and the 'reverse_lookups' option is enabled.  The > >> current code only checks that the incoming connection source IP > >> address has a reverse DNS matching the given hostname, but does > >> not check that the hostname resolves back to this source IP > >> address (see how the $prop->{'peerhost'} property is set in > >> get_client_info(), then used in > >> allow_deny(),  As it is trivial for an > >> attacker to be able to set his own source IP's reverse DNS, the > >> current check is not safe (this probably matches > >> Reliance on Untrusted Inputs in a Security Decision). > >  > > This is a very weak security measure, but yes, the need to check > > the reverse DNS results with a forward DNS query to make the > > security check at all useful has been well-known going all the way > > back to the days when TCP wrappers was the UNIX firewalling system > > of choice.  I remember discussion of this in security contexts in > > and I'm sure it was an old discussion even then. >  > Yup. Please use for this issue.  Thank you Kurt for assinging the CVE. Upstream already answered on this on the request tracker[1] and Paul mentions they will add an option to do the forward lookup.   [1]:  Regards, Salvatore  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      