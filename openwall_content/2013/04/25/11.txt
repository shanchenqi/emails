  oss-security - Re: upstream source code authenticity checking            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 25 Apr From: nicolas vigier <boklm@...s-attacks.org> To: oss-security@...ts.openwall.com Subject: Re: upstream source code authenticity checking  On Wed, 24 Apr Eric H. Christensen wrote:  > On Sun, Apr 21, at Solar Designer wrote: > > i just found this recent blog post by Allan McRae of Arch Linux: > >  > > >  > This is a great article and I really appreciate the work that went into the research. >  > > I think that placing both "MD5 checksum provided on same site as > > download" and "PGP signature, key difficult to verify" in the same > > "yellow" category is inconvenient for us.  "MD5 checksum provided on > > same site as download" only helps verify downloads from mirrors against > > the master site, whereas "PGP signature, key difficult to verify" > > achieves a lot more - once a distro is already including the package > > (and has already taken the risk of it having been tampered with), then > > verifying further updates to the package becomes almost as reliable as > > it would have been with proper signing (with a "readily verifiable" key). > > So we need four categories, or simply "MD5 checksum provided on same > > site as download" should be in "red", not in "yellow". >  > This is a good discussion to have.  I've recently started working on "best practices" articles at Red Hat and feel this would make an excellent article on how we can all improve the security of our source code that inevitably gets pushed into the various distributions.   >  > What is really the best, most proper way of desiminating releases?  I really don't like the use of MD5 for checksums (I'd prefer something out of the SHA-2 or SHA-3 family of hashing algorithms) and I really *do* like the use of PGP for signing the code.  I do foresee some practices within the use of PGP that might not be great, though. >  > So what is the best way of authenticating the source code?  The good thing about PGP signed tarballs is that an automated check could be integrated in package build, with some standard macros or script to make it easy to check signature from a specific key. If it's easy and does not cost time then more packagers will do it.   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      