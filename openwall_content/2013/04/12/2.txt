  oss-security - Re: Remote command injection in Ruby Gem kelredd-pruview             Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Fri, 12 Apr From: Kurt Seifried <kseifried@...hat.com> To: oss-security@...ts.openwall.com CC: "Larry W. Cashdollar" <larry0@...com> Subject: Re: Remote command injection in Ruby Gem kelredd-pruview   -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  On PM, Larry W. Cashdollar wrote: >  > Remote command injection in Ruby Gem kelredd-pruview >  > ------------------------------------------------------------------------ > >  Larry W. Cashdollar @_larry0 >  > *Description*: "A gem to ease generating image previews > (thumbnails) of various files." >  > https://rubygems.org/gems/kelredd-pruview >  > Remote commands can be executed if the file name contains shell > meta characters. >  > >  > In the following code snippet, we see the user input isn't > sanitized for shell metacharacters. A malicious file with special > characters in the filename could be used to execute commands as the > local user. >  > 69       run_system_command("convert -format jpg \"{source}[0]\" > \"{@...pfile.path}\"", "Error processing postscript document") 85 > colorspace = run_system_command("identify #{GLOBAL_CMD_ARGS} > -format \"%r\" #{image.path}", "Error reading document > colorspace") >  > function run_system_comand() passes user supplied input to the > command line. >  >     def run_system_command(command, error_message) > output = `{command}`       raise "{error_message}: error given > {$?}\n{output}" if $? != 0       return output     end >  > In Also the video > encoding and scaling features are vulnerable as well: >  > 27       run("#{FLVTOOL} -U #{target}", "Unable to add meta-data > for #{target}.") >  > 51       run(build_command(@source, target, width, height, > get_info(info_yml), scale_static), "Una    ble to convert > #{@...rce} to #{target}.") >  > Run is defined as: >  >     def run(command, error_message = "Unknown error.") > raise "Ffmpeg error: " + error_message + " - command: '#{command}'" > if !system(command)     end >  > User controlled data is being sent to the command line with out > any shell meta charatcers being escaped. >  > In >  > 13       run(build_command(source, "-ss * 0.1}", > 'mjpeg', target), "Unable to get     preview image for #{target}") >  > 30 def self.build_command(source, time_str, format, target) 31 > command = %Q{#{Video::FFMPEG} -i "#{source}"} 32 command += " > #{time_str}" 33 command += " -f #{format}" if !format.empty? 34 > command += " -an -y #{target}" 35 end >  > where function run() is defined as: >  > 37     def self.run(command, error_message = "Unknown error.") 38 > raise "Ffmpeg error: " + error_message + " - command: '#{command}'" > if !system(command) 39     end >  > In line 38 user supplied data is passed to the command line. This > vulnerability doesn't have a CVE assigned yet. >  > http://vapid.dhs.org/advisories/kelredd-pruview-cmd-inject.html >   Please use for this issue.   - --  Kurt Seifried Red Hat Security Response Team (SRT) PGP: A90B 66BF -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux)  =0xtR -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      