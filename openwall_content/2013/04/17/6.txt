  oss-security - Re: debian: gpg --verify suggests entire file was  verified, even if file contains auxiliary data            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 17 Apr From: Kurt Seifried <kseifried@...hat.com> To: oss-security@...ts.openwall.com CC: Thomas Biege <thomas@...e.de> Subject: Re: debian: gpg --verify suggests entire file was  verified, even if file contains auxiliary data  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  On AM, Thomas Biege wrote: > Hi, this might possibly need a CVE-ID.  >  > >  >  > Itself it might be no issue but in conjunction with other > applications this could become a vulnerability. >  > Bye, Thomas  I've run into this before, sadly enigmail (Thunderbird gpg plugin) displays the same green bar for message signed ok, but displays the text as "Part of the message signed" so unless you're really paying attention, you'll miss it.  My thinking is this:  1) It's pretty easy to find signed content for people using GPG 2) It's pretty easy to append/embed signed content into a larger message  So the attack would be: create malicious content/email, embed/append a valid message harvested from somewhere. Send to user. The user verifies then reads the message, unless they are really paying attention they probably won't notice that the content isn't signed properly (e.g. have an email, ton of whitespace, then the signed message). Personally I'm inclined to assign a CVE, enigmail for example does mostly the right thing (makes a distinction between fully signed and partially signed). I think GPG should too. Thoughts/comments before I assign this?    - --  Kurt Seifried Red Hat Security Response Team (SRT) PGP: A90B 66BF -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux)  =WY9K -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      