  oss-security - Re: CVE Request: kernel information leak in  fs/compat_ioctl.c VIDEO_SET_SPU_PALETTE            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 9 Apr (IST) From: P J P <ppandit@...hat.com> To: Dan Carpenter <dan.carpenter@...cle.com> cc: oss security list <oss-security@...ts.openwall.com> Subject: Re: CVE Request: kernel information leak in  fs/compat_ioctl.c VIDEO_SET_SPU_PALETTE  +-- On Mon, 8 Apr Dan Carpenter wrote --+ | I'm confused why you are using the word "always" and "Unless | `access_ok()' in `__get_user' returns 0".  I don't understand what | you are saying.    Well, always because __access_ok as defined in include/asm-generic/uaccess.h  always returns true.  === static inline int __access_ok(unsigned long addr, unsigned long size) {         return 1; } ===   | Anyway, the bottom line is that the x86 version of get_user() | doesn't have an info leak and the asm-generic version does.    I see, that's when asm-generic _access_ok is overridden by another  definition?  Thank you. -- Prasad J Pandit / Red Hat Security Response Team DB7A D3F9 7CD1 B5EB   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      