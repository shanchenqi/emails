  oss-security - Re: CVE Request: pwgen            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 24 May From: Kurt Seifried <kseifried@...hat.com> To: coley@...us.mitre.org, oss-security@...ts.openwall.com,         security@...ntu.com Subject: Re: CVE Request: pwgen  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  On PM, Seth Arnold wrote: > Hello Kurt, Steve, all, >  > Do these issues deserve CVE numbers? >  > A user reported to launchpad [1] that pwgen will use /dev/urandom > or /dev/random if it can, but will silently fall back to using > drand48() or random() if the device files fail to open. The report > also mentions that when the device files are available, the output > is biased by too-simple use of the modulo operator to scale the > output to 0 <= n < max. There are further complaints about the poor > use of available entropy when seeding the weaker algorithms. >  > A potentially related complaint is in Debian's BTS [2]: in this > bug report, the user wanted a way to force use of /dev/random even > if /dev/urandom is available. >  > I've pasted the relevant source to pastebin.ubuntu.com [3]. >  > Are any of these worthy of a CVE number? >  > - silent fall-back to weak algorithms - biased output due to poor > use of modulo operations - poor seeding of weak algorithms  Is any of this behaviour documented, or is it only "documented" in the source code (I'm guessing source code only)? Also I'm trying to think of situations where /dev/random and urandom are not available, AND the system is otherwise working ok and nothing comes to mind. The fall back is definitely sub-optimal, but can it be triggered in any meaningful way.  >  > Thank you >  > 1: 2: > 3: > >    - --  Kurt Seifried Red Hat Security Response Team (SRT) PGP: A90B 66BF -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux)  =TmgN -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      