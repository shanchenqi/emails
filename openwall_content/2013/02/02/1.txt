  oss-security - A small backlog of vulnerabilities in Chicken Scheme            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Sat, 2 Feb From: Peter Bex <Peter.Bex@...all.nl> To: Open Source Security <oss-security@...ts.openwall.com> Subject: A small backlog of vulnerabilities in Chicken Scheme  Hello all,  Recently a handful of security bugs have been found and fixed in the Chicken Scheme compiler (http://www.call-cc.org).  We (the core team) have decided we'd like to start using CVE identifiers for the benefit of our users and distributions.  I'd like to request CVEs for the currently known security bugs:  * POSIX select() buffer overrun, fixed on in Chicken (development snapshot) by switching to POSIX poll() on platforms where supported. This is also fixed in (stability release).  Original announcement, with workaround (followed by preliminary patch): Final patch:  * Poisoned NUL byte injection due to incomplete protection by missing checks in some procedures, fixed in Chicken  * Broken randomization procedure on 64-bit platforms (it returned a constant value).  This function wasn't used for security purposes (and is advertised as being unsuitable), so I'm unsure a CVE is needed: Fixed in  * Vulnerability to algorithmic complexity attacks due to hash table collisions.  Fixed in First public confirmation of the issue, with preliminary (broken) patch: Proper fix:  Please let me know if more info is required or if this is even the proper way to request CVEs.  I'd also like to know if it's possible to get CVE numbers assigned *before* issuing a security advisory, but without immediate full disclosure, so an initial advisory can be complete with CVE number. The CVE can be updated afterwards with the link to the advisory when it is issued.  This should make it easier for users to find information about the bug.  This list's Openwall wiki seems to imply that it's only possible to request a CVE for an issue given all the information immediately, but a recent message from Kurt Seifried in a thread about Jenkins says that it can be done.  If it's indeed okay to e-mail Kurt directly, it would be helpful to include this in the documentation wiki.  Finally, how do CVE entries in MITRE and/or the NVD get updated? I couldn't find anything about this in the FAQ.  For example, if we find and fix a noncritical vulnerability but the fix is rather complicated and needs to be thoroughly tested, the fix might appear in a release after CVE and advisory are issued.  How will this be reflected in the information once the version in which the fix appears is finally known?  Cheers, Peter Bex (on behalf of the Chicken core team)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      