  oss-security - Re: CVE request - Linux kernel: VFAT slab-based buffer  overflow            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 28 Feb (CET) From: Jiri Kosina <jikos@...os.cz> To: oss-security@...ts.openwall.com Subject: Re: CVE request - Linux kernel: VFAT slab-based buffer  overflow  On Wed, 27 Feb Greg KH wrote:  > > May I just bluntly call out shenanigans here? Yes, some bugs are > > esoteric and it's not immediately obvious that they are security > > related. But there are so many bugs that are _clearly_ > > security-related. >  > Really?  Ok then, please go ahead and try doing this yourself if you > feel it is so "obvious" to do.  What Jason is asking for (at least to my understanding) is that if we are  fixing a bug from a known-to-automatically-be-security-issue, we let the  world know explicitly. We are not pro-actively doing that now, are we?  Yes, there are going to be lots and lots of bugs which turn out to be  security issues once analyzed by super-smart guys wearing their  darker-coloured hats, and that's unavoidable. Killing all the efforts that try to mitigate this effect with as little  investments as possible seems to be slightly counter-productive though.  We are not going to be perfect at it, ever, sure. Perfect is the enemy of  good. Also, defining the list in a sensible way is challenging of course, but  let's have this for starters:  - use-after-free - null(+epsilon) pointer dereference - array access overflow - signedness problem in sizeof() with argument coming from userspace - operating VMAs without mmap_sem - ...  Hmm?  --  Jiri Kosina  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      