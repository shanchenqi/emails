  oss-security - Handling CVEs for the XML entity expansion issues            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Wed, 20 Feb From: Kurt Seifried <kseifried@...hat.com> To: "oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com>,         Steven Christey <coley@...re.org> Subject: Handling CVEs for the XML entity expansion issues  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  https://bitbucket.org/tiran/defusedxml  So two generic vulnerabilities have been found in XML libraries/parsers:  1) Unrestricted entity expansion induces DoS vulnerabilities in Python XML libraries (XML bomb) - - this can be referred to as the billion laughs / exponential entity expansion, but can also be done linearly and still impact the system. For example libxml fixed the billion laughs attack version of this, but linear expansion (that eats up say a few hundred k of ram per second) will still cause problems. This issue will not be CVE split however since it's the same issue (expansion of entities).  For Python XML parsing this was assigned   2) External entity expansion in Python XML libraries inflicts potential security flaws and DoS vulnerabilities - - XML documents can include references to external entities, e.g. http:// resources: <!ENTITY ee SYSTEM "http://www.example.org/some.xml">  For Python XML parsing this was assigned  So questions: ======================  We need more CVE's, I think for each XML prasing library/etc we should obviously assign a CVE (e.g. libxml, expat, internal Python parsers), obviously fixing it at the root is ideal, but disabling external entities for example in the library for all things using that library is not possible.  But then we run into the issue where we can fix this issue within the application (OpenStack, using Python):  +PARSER = etree.XMLParser( +    resolve_entities=False, +    remove_comments=True, +    remove_pis=True) + +# NOTE(dolph): lxml.etree.Entity() is just a callable that currently returns an +# lxml.etree._Entity instance, which doesn't appear to be part of the +# public API, so we discover the type dynamically to be safe +ENTITY_TYPE = type(etree.Entity('x')) +  - -        dom = etree.fromstring(xml_str.strip()) +        dom = etree.fromstring(xml_str.strip(), PARSER)  Which disables entity parsing in the application thus avoiding all the entity expansion problems. Now I'm inclined in this case to say no CVE (I had earlier, erroneously assigned CVE's for these fixes in OpenStack). But now I'm not as sure, if an underlying library has an unsafe/insecure behaviour that is on by default, BUT can be disabled easily then does that vulnerability count as being in the library? If not then I'd be inclined to say we need CVE's for all the vulnerable applications, but in this case that's thousands (millions?) of applications.  So Steve, I think we need some guidance on how to assign the CVEs here. - --  Kurt Seifried Red Hat Security Response Team (SRT) PGP: A90B 66BF  -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux)  =V2n9 -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      