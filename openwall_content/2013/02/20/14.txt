  oss-security - Re: RE: Handling CVEs for the XML entity expansion  issues            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 20 Feb From: Kurt Seifried <kseifried@...hat.com> To: oss-security@...ts.openwall.com CC: Tim <tim-security@...tinelchicken.org> Subject: Re: RE: Handling CVEs for the XML entity expansion  issues  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  On AM, Tim wrote: >  > Hi Kurt and Steve, >  > I have been investigating XXE issues and how they may be exploited > off and on for the last year.  Most modern/maintained XML libraries > enable parsing of inline DTDs (in DOCTYPE headers), as well as > external entities defined there, by default.  Indeed, this is > something that the XML standard includes > (http://www.w3.org/TR/REC-xml/) and I'm guessing library > implementors have a strong desire to comply. >  > This is stupid, on two levels: >  > - Most applications that actually apply DTD or schema validation > will be working from a predefined definition.  Many applications > don't bother to do any up-front validation.  In either case, what > is the point in allowing a DTD (or schema) to be defined *within* > the document that is being supplied?  From a security perspective, > this is like say "Hey Mallory, I need to validate that search > string input field.  Could you supply me with the regex so I can > validate your data?"  I'm sure there are some odd contexts where > XML developers find this feature useful, but I'm pretty sure they > are few and far between. DTDs should be ignored by default by > libraries unless supplied separately through the API. >  > - External entities are a pretty dumb idea indeed.  I mean, I  > understand why someone might want them.  Makes it easy to stitch  > together multiple documents.  But in the vast majority of cases > I've discussed XXE with developers, they have no idea that you can > even define custom XML entities, let alone external ones.  These, > too, should be off by default.  Docbook uses it quite a bit, e.g. each chapter is a file, then you use external entities to put them all together, also for graphics/etc. Breaking Docbook would make me a sad panda.  > Kurt, in regard to your question, my current opinion is that if an > XML library doesn't make it easy/possible to disable these > features, then yes they should be hit with a CVE.  But if they do > make it possible, then it is the application developer's > responsibility to turn these things off explicitly.  No, this isn't > a good long-term solution, but it doesn't make sense to slap a CVE > on a library that at least gives you the option.  I tend to agree, however for the billion laughs/linear attack that can be somewhat addressed, libxml for example addressed it by stopping all non linear expansion a few years ago, so while still vulnerable they are less vulnerable.  > HTH, tim   - --  Kurt Seifried Red Hat Security Response Team (SRT) PGP: A90B 66BF  -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux)  FylXLZxER+fg8u/mN3FJ =Bc6o -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      