  oss-security - RDoc through XSS Exploit            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Wed, 6 Feb From: Eric Hodel <drbrain@...ment7.net> To: oss-security@...ts.openwall.com Subject: RDoc through XSS Exploit  RDoc documentation generated by rdoc through rdoc and prereleases up to rdoc are vulnerable to an XSS exploit.  This exploit may lead to cookie disclosure to third parties.  The exploit exists in darkfish.js which is copied from the RDoc install location to the generated documentation.  RDoc is a static documentation generation tool.  Patching the library itself is insufficient to correct this exploit.  Those hosting rdoc documentation will need to apply the following patch.  If applied while ignoring whitespace, this patch will correct all affected versions:    diff --git darkfish.js darkfish.js   index   --- darkfish.js   +++ darkfish.js   @@ @@ function hookSearch() {    function highlightTarget( anchor ) {      console.debug( "Highlighting target '%s'.", anchor );       -  $("a[name=" + anchor + "]").each( function() {   -    if ( !$(this).parent().parent().hasClass('target-section') ) {   -      console.debug( "Wrapping the target-section" );   -      $('div.method-detail').unwrap( 'div.target-section' );   -      $(this).parent().wrap( '<div class="target-section"></div>' );   -    } else {   -      console.debug( "Already wrapped." );   +  $("a[name]").each( function() {   +    if ( $(this).attr("name") == anchor ) {   +      if ( !$(this).parent().parent().hasClass('target-section') ) {   +        console.debug( "Wrapping the target-section" );   +        $('div.method-detail').unwrap( 'div.target-section' );   +        $(this).parent().wrap( '<div class="target-section"></div>' );   +      } else {   +        console.debug( "Already wrapped." );   +      }        }      });    };  You can find this commit at:     RDoc and RDoc and newer are not vulnerable to this exploit.  This exploit was discovered by Evgeny Ermakov <corwmh@...il.com>.  This vulnerability has been assigned the CVE identifier    Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      