  oss-security - Re: A small backlog of vulnerabilities in Chicken Scheme            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 7 Feb From: Peter Bex <Peter.Bex@...all.nl> To: Open Source Security <oss-security@...ts.openwall.com> Subject: Re: A small backlog of vulnerabilities in Chicken Scheme  On Wed, Feb 06, at Kurt Seifried wrote: > Sorry for the delay, it's been a crazy couple of weeks.  No problem.  Thanks for all your efforts!  > On AM, Peter Bex wrote: > > I'd like to request CVEs for the currently known security bugs: > >  > > * POSIX select() buffer overrun, fixed on in Chicken > > (development snapshot) by switching to POSIX poll() on platforms > > where supported. This is also fixed in (stability > > release). >  > Can you list the versions released that included the broken and > correct patch? thanks.  The preliminary patch was correct but not portable (so not broken in the sense of being vulnerable).  Because of portability problems it was never committed.  I decided to include the link to the other patch for completeness, and for reference (useful for people reading the CVE and studying the bug's history).  Sorry if this caused some confusion.  The correct patch was committed and ended up in stable release and development snapshot   Effectively this means that and earlier is vulnerable, plus the development snapshot (but *not* - the fix was pulled up into our stability branch).  Maybe it helps if I explain our current versioning scheme.  Our stable releases end in a zero (ex:  We periodically release stability patchlevel upgrades, which end up as minor version suffixes. This means that is stable, followed by etc.  While working on the next major release (which will be snapshots are built which will have minor versions like etc. The versions contain only bugfixes that went into 4.8.x snapshots which were deemed important enough to pull up into the minor stable release cycle.  > > * Vulnerability to algorithmic complexity attacks due to hash > > table collisions.  Fixed in First public confirmation of the > > issue, with preliminary (broken) patch:  > > > >  > Proper fix: > > >  > Can you list the versions released that included the broken and > correct patch? thanks.  No versions contained the preliminary patch, it was made available for testing only.  I also included this one for reference.  I'll try make this clearer the next time.  The correct patch ended up in snapshot and, thus, in stable release This means that anything before is vulnerable.  > > Finally, how do CVE entries in MITRE and/or the NVD get updated? I > > couldn't find anything about this in the FAQ.  I would still appreciate an answer to this question.  Cheers, Peter --  http://sjamaan.ath.cx  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      