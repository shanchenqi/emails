  oss-security - Linux kernel format string flaws            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Thu, 6 Jun From: Kees Cook <keescook@...omium.org> To: oss-security@...ts.openwall.com Subject: Linux kernel format string flaws  I've found two issues in how Linux uses format strings:   b43 wireless driver  The b43 driver reports error strings that can be interpreted as format strings. Under normal conditions, this is not a problem, but it is possible for the "fwpostfix" module parameter to change the filenames used to fetch firmware. When such a file is not found, the filename will be processed as a format string. This flaw could potentially allow escalation from uid-0 to ring-0, so except for certain environments, it is not too serious.  If b43 hardware is available, this should show itself easily. I don't have any available for testing, but it seems it would show itself like this: # rmmod b43 # modprobe b43 fwpostfix=AA%xBB ... # dmesg ... ERROR: Firmware file not found  Using %n instead of %x would lead to exciting crashes. :)  It has been fixed in the upstream wireless tree:    block layer  The block layer uses the "disk_name" field as a format string in a number of places. While this is normally not a problem due to how disk names are created (statically or incrementally), there is currently at least one way to define nearly arbitrary names via md. Instead of filtering md, this should be fixed within the kernel's interfaces. This flaw could potentially allow escalation from uid-0 to ring-0, so except for certain environments, it is not too serious.  The test case is trivial: # echo md_%x.%x.%x.%x > /sys/module/md_mod/parameters/new_array # ls /dev/md_*  Using %n instead of %x leads to exciting crashes. :)  The fix has been sent upstream:   With the above fixes, a series of additional format string related clean ups has also been sent upstream:   Thanks,  -Kees  --  Kees Cook Chrome OS Security  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      