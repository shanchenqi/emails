  oss-security - Re: CVE request for GLPI            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Sun, 30 Jun From: Kurt Seifried <kseifried@...hat.com> To: oss-security@...ts.openwall.com CC: "Mehrenberger, Xavier" <Xavier.Mehrenberger@...sidian.com> Subject: Re: CVE request for GLPI  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  On AM, Mehrenberger, Xavier wrote: > Hello, >  > I'd like to request a CVE identifier for a vulnerability in GLPI.  > The unserialize() function was used in several places throughout > the codebase; one CVE identifier should (IMHO) be sufficient. >  > It has been publicly fixed in the project's repository. >  > Thanks >  > ======================================= Advisory title: unserialize > vulnerability in GLPI Product: GLPI Discovered by: > Xavier Mehrenberger @Cassidian CyberSecurity Vulnerable version: > Tested: Fixed in repository: > commits to Category: Potential PHP code execution  > Vulnerability type: Deserialization of Untrusted Data CVE > IDs: none yet By: Xavier Mehrenberger Cassidian CyberSecurity  > http://www.cassidiancybersecurity.com  > ======================================= >  > ----- Required configuration: No specific > configuration required Steps to reproduce: * Issue a request to  > glpi/front/ticket.form.php?id=1&_predefined_fields=XXXX, * > replacing XXX with a serialized PHP object >  > Vulnerable code sample: --- file ticket.class.php, function > showFormHelpdesk if (isset($options['_predefined_fields'])) {  > $options['_predefined_fields'] =  > unserialize(rawurldecode(stripslashes($options['_predefined_fields']))); > >  - --- >  > When passing a non-existent empty serialized class (ex: class > called "exploit" value an > error occurs, which is caught by the userErrorHandlerNormal > function in toolbox.class.php. >  > When a PHP object gets unserialized, its __wakeup() function is  > executed. When this object gets destroyed, its __destruct() > function is executed (since PHP5). No such object exists throughout > the GLPI codebase. However, it might exist in a third-party > library, as demonstrated by Stefan Esser [2]. More information > about this vulnerability class can be found at [1]. >  > The unsafe use of unserialize() has been fixed throughout the > codebase in commits [3] to >  > References: [1] > https://www.owasp.org/index.php/PHP_Object_Injection [2]  > > >  df part II > [3]  > > >   Please use for this issue.  - --  Kurt Seifried Red Hat Security Response Team (SRT) PGP: A90B 66BF -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux)  TTDmdcfqLkSS9mxBvkvN =JKWx -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      