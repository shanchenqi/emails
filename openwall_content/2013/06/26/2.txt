  oss-security - Re: KDE Paste Applet            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 25 Jun From: Kurt Seifried <kseifried@...hat.com> To: oss-security@...ts.openwall.com CC: Michael Samuel <mik@...net.net>, security@....org Subject: Re: KDE Paste Applet  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  On PM, Michael Samuel wrote: > On 13 June Michael Samuel <mik@...net.net> wrote: >  >> Ok, so the fix for this uses KRandom::random()... >>  >> I suggest leaving the KDE Paste fix as-is and replacing KRandom >> with something that just fills an integer from /dev/urandom - >> then we can save a few CVE numbers for the rest of the year. >>  >> qrand() should probably also do the same, especially since >> cnonces for HTTP auth are using it - that means there's only >> (at best) possible cnonces... >>  >>>  >>>  > Fedora and Ubuntu have both pushed out this patch.  Requesting a > new CVE for "KRandom::random() isn't a secure PRNG", since the KDE > guys are convinced that it is. >  > Regards, Michael  So the thing is it can be completely random, just like a coin flip. But the search space might be to small (e.g. a 1 bit key based on a coin flip wouldn't be "secure"). I suspect isn't enough any more either, assuming a core GPU, if you can run cracking attempts per second per core you can brute force a search space in 10 hours or so. Needless to say GPUs are getting pretty cheap. So this appears to be a textbook example of "Small Space of Random Values".  Please use for KDE KRandom::random() Small Space of Random Values.  - --  Kurt Seifried Red Hat Security Response Team (SRT) PGP: A90B 66BF -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux)  =sRNF -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      