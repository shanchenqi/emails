  oss-security - Re: Remote Command Injection in Ruby Gem            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Sun, 1 Sep (EDT) From: cve-assign@...re.org To: larry0@...com Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: Remote Command Injection in Ruby Gem  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  >Remote Command Injection in Ruby Gem >Download: https://rubygems.org/gems/fog-dragonfly > >"Dragonfly is an on-the-fly Rack-based image handling framework. It is >suitable for use with Rails, Sinatra and other web frameworks. > >Unescaped user supplied input is passed to the command line for shell >execution > > > 20     def convert(tempobject, args='', format=nil) > 21       tempfile = newtempfile(format) > 22       run "#{convertcommand} #{args} #{tempobject.path} #{tempfile.path}" > 23       tempfile > 24     end > > > 61     def run(command) > 62       log.debug("Running command: #{command}") if ImageMagickUtils.log_commands > 63       begin > 64         result = #{command}  Use for this vulnerability in the fog-dragonfly gem. As far as we can tell, this is a vulnerability in the fog-dragonfly gem, not a vulnerability in Dragonfly. We found these possibly related fixes in Dragonfly:        If the unpatched Dragonfly code has a vulnerability in a common use case, this would require a separate CVE ID.  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  =SUlN -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      