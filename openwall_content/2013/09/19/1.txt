  oss-security - Re: Algorithmic complexity vulnerability in RubyGems and older            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 18 Sep From: Eric Hodel <drbrain@...ment7.net> To: Alexander Cherepanov <cherepan@...me.ru> Cc: oss-security@...ts.openwall.com,  kseifried@...hat.com,  "dammer2k@...il.com Sharipov" <dammer2k@...il.com>,  "security@...y-lang.org" <security@...y-lang.org> Subject: Re: Algorithmic complexity vulnerability in RubyGems and older  On Sep 18, at Alexander Cherepanov <cherepan@...me.ru> wrote: > On Eric Hodel wrote: >> Here's a new patch to go with the new (unassigned) CVE.  This new patch replaces regular expression matches that are susceptible to backtracking with a parser-like approach. >  > According to your patch 'versions have only one "-" (per semver)'. This > means that "*" after "(#{VERSION_PATTERN})" in ANCHORED_VERSION_PATTERN > is a bug. It should be "?". If you fix it then there should be no > problem with VERSION_PATTERN at all. AFAICT VERSION_PATTERN gives you a > linear complexity. Hence there is no need to suppress backtrackingâŚ  Good catch, I think this is a bug, but I'll need to check with the person who added that.  >> This patch applies to RubyGems 2.1.x releases.  I will create patches for RubyGems and if it there is no obvious flaw seen in it. >>  >> I would like to release this fix by Monday, 23 September as I will be traveling mid-week. >>  >> The vulnerable regular expression constants are still present, but I can't think of a way to construct them that does not allow backtracking. >  > ...but if you really want to suppress backtracking (say, for > optimization) it is easy: either atomic grouping for every repetition > (exactly the way you have already done but for other repetitions also) > or add extra "+" after each "+" and "*". That's according to > .  Thank you.  I glossed over the * in ANCHORED_VERSION_PATTERN, and this fixes the problem with minimal change (something I would prefer for a security fix).  Here is a complete updated patch including the backtracking and extra "-" fixes:   Download attachment of type "application/octet-stream" bytes)    The same script as my previous message can be used to verify it.  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      