  oss-security - Algorithmic complexity vulnerability in RubyGems and older            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Mon, 9 Sep From: Eric Hodel <drbrain@...ment7.net> To: Operating system distro security contacts <distros@...openwall.org>,  "oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com> Subject: Algorithmic complexity vulnerability in RubyGems and older  RubyGems validates versions with a regular expression that is vulnerable to denial of service due to backtracking.  For specially crafted RubyGems versions attackers can cause denial of service through CPU consumption.  RubyGems versions and older, and are vulnerable.  Ruby versions through are vulnerable as they contain embedded versions of RubyGems.  It does not appear to be possible to exploit this vulnerability by installing a gem for RubyGems 1.8.x or 2.0.x.  Vulnerable uses of RubyGems API include packaging a gem (through `gem build`, Gem::Package or Gem::PackageTask), sending user input to Gem::Version.new, Gem::Version.correct? or use of the Gem::Version::VERSION_PATTERN or Gem::Version::ANCHORED_VERSION_PATTERN constants.  Notably, users of bundler that install gems from git are vulnerable if a malicious author changes the gemspec to an invalid version.  The vulnerability can be fixed by changing the first grouping to an atomic grouping in Gem::Version::VERSION_PATTERN in lib/rubygems/version.rb.  For RubyGems 2.0.x:    -  VERSION_PATTERN = # :nodoc:   +  VERSION_PATTERN = # :nodoc:  For RubyGems 1.8.x:    -  VERSION_PATTERN = # :nodoc:   +  VERSION_PATTERN = # :nodoc:  This vulnerability was discovered by Damir Sharipov <dammer2k@...il.com>  The above information is also posted at:   Patches were committed for:  RubyGems released as RubyGems   RubyGems released as RubyGems   RubyGems released as RubyGems   RubyGems released as RubyGems   The following program can be used to test if you are vulnerable to   View attachment of type "text/x-ruby-script" bytes)       Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      