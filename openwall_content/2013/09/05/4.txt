  oss-security - Re: / Tomcat            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Thu, 05 Sep From: David Jorm <djorm@...hat.com> To: oss-security@...ts.openwall.com Subject: Re: / Tomcat  On AM, Moritz Muehlenhoff wrote: > Hi, > Question to the Red Hat people on the list: > > Is something which applies > to Tomcat in general or is this specific to the  "Red Hat JBoss Enterprise > Application Platform"? > > The DiskFileItem class is part of Tomcat 7, but there's no reference to > at http://tomcat.apache.org/security-7.html > > Cheers, >          Moritz  Hi Moritz  This flaw was reported to the tomcat security team, but they were of the  opinion that it did not constitute a security flaw in tomcat. The Red  Hat security team decided that we did consider it a security flaw in  tomcat, and handled it accordingly. I think whether or not this category  of issue is considered a security flaw is an unresolved debate - having  some consensus either way would be helpful in my opinion.  The DiskFileItem class's readObject method contained a poison null byte  flaw. A remote attacker able to supply a serialized instance of the  DiskFileItem class, which will be deserialized on a server, could use  this flaw to write arbitrary content to any location on the server that  is permitted by the user running the application server process. The key  point here is that an application is only vulnerable if it deserializes  arbitrary user-supplied data, and it has DiskFileItem on the classpath.  One argument is that since exploitation relies on an application  allowing deserialization of user-supplied data, the real flaw lies in  that application, so this is not actually a security flaw in  DiskFileItem. The opposing argument is that an application allowing  deserialization of user-supplied data would not necessarily expose any  kind of security flaw, but if a vulnerable class (e.g. DiskFileItem)  existed on the server's classpath, then it would, therefore this is a  security flaw in DiskFileItem.  Thanks -- David Jorm / Red Hat Security Response Team  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      