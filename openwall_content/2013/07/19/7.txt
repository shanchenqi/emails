  oss-security - Re: CVE Request - PloneFormGen, multiple vulnerabilities            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Fri, 19 Jul From: Matthew Wilkes <matt@...distillery.eu> To: oss-security@...ts.openwall.com Subject: Re: CVE Request - PloneFormGen, multiple vulnerabilities   > Sorry thought i had replied to this. I need links to the code > commits/vuln code so I can confirm these. > > To reiterate: so I can confirm CVE assignments, and prevent duplicate > assignments you *MUST* provide links to the code commits/vulnerable > code. I don't have the time to go hunting through your source code for > them. People need to start making better CVE requests, or you're not > going to get CVEs from me.  Sorry, I wasn't aware you'd be wanting to trawl through the source yourself, tried to provide enough context in the original.    # Execute arbitrary shell commands **CVSSv2 base score**: 10  CWE-78 - Improper Neutralisation of Special Elements used in an OS Command - Improper Following of Specification by Caller - Exposed dangerous method or function  Passing a urlencoded shell command to a support function that is accessible through the web causes that shell command to be run with the same privileges as the Zope server.  Vulnerable code:  Fixed by:    # Set custom script body **CVSSv2 base score**: 8.2 - Missing authentication for critical resource - Exposed dangerous method or function  When using a custom script action adapter, it is possible for anonymous users to overwrite the content of the script. This allows an attacker complete control over what happens to the received data. The script is executed within Zope's RestrictedPython environment, however, so it doesn't allow escape from the process sandbox.  Vulnerable code:  Fixed by: Fixed by:    # Can set body of mail template on mailer object **CVSSv2 base score**: 7.5 - Incorrect authorization - Exposed dangerous method or function  An unused method has a declarePublic call, allowing anyone to invoke it. This allows any PloneFormGen form with a mailer object to have the email template modified by anonymous users. As the template is a ZPT object it can include inline Python expressions evaluated in the process sandbox.  Vulnerable code:  Fixed by:    # Insufficient CSRF protection on SaveData adapter allows changing data **CVSSv2 base score**: 6.3 - Cross-site request forgery (CSRF) - Exposed dangerous method or function  If a privileged user is tricked into accessing an attacker controlled URL, it is possible to craft a request which would allow setting the saved data to any value, thus compromising the integrity of the data.  Vulnerable code:    # Can determine the success page without filling in form **CVSSv2 base score**: 5 - Access to critical private variable via public method  Often this is just a thank you page, however it is used by some users to expose access to a private URL or further logic. In this case it *may* provide an attacker with access to sensitive information.  Vulnerable code:  Fixed by:   # Render body of mail template on mailer object **CVSSv2 base score**: 5 - Access to critical private variable via public method  Like the above attack, this allows users who have not filled in a form to see the email they would have received if they had. It stacks with the set body vulnerability to allow the attacker to execute Python embedded in the custom template.  Fixed in:    # Run ScriptAdapter script without submitting form **CVSSv2 base score**: 5 (???) - Access to critical private variable via public method  As above, but with the set custom script body vulnerability. The effect of running the script varies by deployment.  Fixed in:    # Can add spurious blank records to SaveDataAdapter **CVSSv2 base score**: 5 - Missing authentication for critical resource CWE-20 - Improper input validation - Exposed dangerous method or function  When using the default action adapter for saving data, it's possible to create blank, likely invalid records. A malicious user could automate this to add many invalid responses.  Fixed in:    # Can enable or disable form actions **CVSSv2 base score**: 4.3 - Missing authentication for critical resource - Cross-site request forgery  If the ids of the action adapters within a form are known, it is possible to disable or enable them as an anonymous user. This would allow an attacker to effectively disable the form, or to redirect input.  Fixed in:     # Vector for determining user details in XSS attacks **CVSSv2 base score**: 3.5 (???) - Cross-site request forgery - Privacy violation  Fixed in:      I think that should be all you asked for, please let me know if not.  Matt   Download attachment "smime.p7s" of type "application/pkcs7-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      