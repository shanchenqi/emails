  oss-security - Re: Linux kernel handling of IPv6 temporary  addresses            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Sun, 20 Jan From: George Kargiotakis <kargig@...d.gr> To: P J P <ppandit@...hat.com> Cc: oss-security@...ts.openwall.com Subject: Re: Linux kernel handling of IPv6 temporary  addresses  Hello,  and sorry for the late reply...  On Thu, 17 Jan (IST) P J P <ppandit@...hat.com> wrote:  > +-- On Thu, 17 Jan George Kargiotakis wrote --+ > | Extensions as far as I know. On your RHEL it's '0' and that's why > you | weren't seeing any 'ipv6_create_tempaddr' as previously > mentioned on your | emails. If you change this value to '2' you'll > also see those kernel | messages. >  >   Yep, worked! I manged to reproduce the log messages. So the patch > earlier does seem to fix this issue, doesn't it? It avoids retry once > reaching the max_addresses limit. >   Yes and no. When flooding finishes everything still works ok, temp. addresses haven't been disabled, but when the preferred timer of the temp. address of the original acquired prefix expires, the kernel won't be able to acquire a new temporary address because the interface is already full with 16 addresses from flooding. An already acquired address only gets removed when it's validity timer expires. So, the host will be left using the global non-temp address acquired by slaac until another 'slot' (from the default 16) becomes free/expires.  Summarizing, one is still able to remotely, inside a LAN, cause problems to another host, that is make it lose it's temp. address functionality at least for some time.  The solution to this problem is not that simple and I've already referenced a possible solution in one of my previous emails. Maybe a change of logic from max_addresses per interface to max_prefixes per interface would help.  > For the dynamic tentative settings of the interface, I think another > patch would be required. >  > Thanks so much! > -- > Prasad J Pandit / Red Hat Security Response Team > DB7A D3F9 7CD1 B5EB   Regards, --  George Kargiotakis https://void.gr GPG KeyID: GPG Fingerprint: 9EB8 31BE 07CE 4A0A 1BC8 E4F4 FFE6  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      