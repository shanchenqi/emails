  oss-security - Re: SQL Injection Vulnerability in Ruby on Rails            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 3 Jan (EST) From: cve-assign@...re.org To: clopez@...lia.com Cc: cve-assign@...re.org, oss-security@...ts.openwall.com,         tenderlove@...y-lang.org Subject: Re: SQL Injection Vulnerability in Ruby on Rails  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  Repurposing to match the official advisory from the Ruby on Rails core team is problematic because that would change the affected product. Many CVE consumers have processes for using CVE that can't cleanly handle all arbitrary types of post-publication changes to the affected product. In this situation, taking a published CVE and changing the affected product from "the Authlogic gem" to "Ruby on Rails" is not something that we'd like to do.  The official advisory, i.e.,     is obviously an important vendor disclosure about an important product, and there will be a CVE entry that corresponds to this vendor disclosure. See below.  Our understanding is that some details of the Authlogic gem do have security concerns for some people. These are perhaps alluded to by "The injection interfaces are documented and the programmer is not supposed to pass user input to those interfaces" and subsequent statements in the     post. This may be mostly relevant at sites that, for whatever reason, are staying at for now. In any case, tracking an Authlogic gem issue may be worthwhile for some CVE consumers. It may meet our definition of a vulnerability even if it doesn't meet your definition of a vulnerability. A maintainer of the Authlogic gem is, of course, welcome to dispute this, and the related entry (see below) would then be marked as "DISPUTED" in CVE.  The outcome we're planning will be similar to this draft content:    ** REJECT **  DO NOT USE THIS CANDIDATE NUMBER.  ConsultIDs:  Reason: this candidate was intended for one issue, but the candidate was publicly used to label concerns about multiple products.  Notes: All CVE users should consult and to determine which ID is appropriate.  All references and descriptions in this candidate have been removed to prevent accidental usage.     MLIST:[rubyonrails-security] SQL Injection Vulnerability in Ruby on Rails   SQL injection vulnerability in the Active Record component in Ruby on Rails before 3.1.x before and 3.2.x before allows remote attackers to execute arbitrary SQL commands via a crafted request that leverages incorrect behavior of dynamic finders in applications that can use unexpected data types in certain find_by_ method calls.      The Authlogic gem for Ruby on Rails, when used with certain versions before makes potentially unsafe find_by_id method calls, which might allow remote attackers to conduct SQL injection attacks via a crafted parameter in environments that have a known secret_token value, as demonstrated by a value contained in secret_token.rb in an open-source product.  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  =Mfjl -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      