  oss-security - Re: Linux kernel handling of IPv6 temporary  addresses            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 16 Jan From: George Kargiotakis <kargig@...d.gr> To: P J P <ppandit@...hat.com> Cc: oss-security@...ts.openwall.com Subject: Re: Linux kernel handling of IPv6 temporary  addresses  Hello,  On Wed, 16 Jan (IST) P J P <ppandit@...hat.com> wrote:  >  >    Hello George, >  > +-- On Wed, 16 Jan George Kargiotakis wrote --+ > | You can reproduce the bug with a new option for flood_router26 that > has been added to the thc-ipv6 toolkit v2.1. | # ./flood_router26 -A > eth0 >  >   I tried this, it takes quite a while for other hosts to receive the  > generated traffic. On the receiving hosts kernel logs >  > == > ... > ...kernel: Neighbour table overflow. > == >  > no log message from ipv6_create_tempaddr() routine.  >  Weird because the '-A' flag of flood_router26 sends very few packets so it shouldn't  have filled your neighbour table.  what distro/kernel version are you trying ? I'm using latest ubuntu with The messages I'm mentioning certainly appear upon testing with ubuntu live CD for example.  >  > | I've applied your patch to and unless I've done something > wrong, it doesn't seem to work. Actually I can't | get any temporary > address assignment with it. This is what I get upon booting with your > patch: >  >   Ah, very sorry, I missed to say: ift = ipv6_add_addr(...) : in my > last patch. It remains NULL all the time. Please try this fixed > version >  > === > diff --git a/net/ipv6/addrconf.c b/net/ipv6/addrconf.c > index > --- a/net/ipv6/addrconf.c > +++ b/net/ipv6/addrconf.c > @@ @@ retry: >  	if (ifp->flags & IFA_F_OPTIMISTIC) >  		addr_flags |= IFA_F_OPTIMISTIC; >   > -	ift = !max_addresses || > -	      ipv6_count_addresses(idev) < max_addresses ? > -		ipv6_add_addr(idev, &addr, tmp_plen, > - > ipv6_addr_type(&addr)&IPV6_ADDR_SCOPE_MASK, > -			      addr_flags) : NULL; > -	if (!ift || IS_ERR(ift)) { > +    ift = NULL; > +    if (!max_addresses || ipv6_count_addresses(idev) < max_addresses) > +        ift = ipv6_add_addr(idev, &addr, tmp_plen, > +                        ipv6_addr_type(&addr) & IPV6_ADDR_SCOPE_MASK, > +                        addr_flags); > +    if (!ift) { > +        in6_ifa_put(ifp); > +        in6_dev_put(idev); > +        pr_info("%s: ipv6 temporary address upper limit reached\n", > __func__); > +        ret = -1; > +        goto out; > +    } > +    else if (IS_ERR(ift)) { >  		in6_ifa_put(ifp); >  		in6_dev_put(idev); >  		pr_info("%s: retry temporary address > regeneration\n", __func__); === >  >  > Thanks so much. > -- > Prasad J Pandit / Red Hat Security Response Team > DB7A D3F9 7CD1 B5EB    Your new patch works "better", but still the main problem hasn't been eliminated. And I explain myself.  While flooding with RAs the following appears in the dmesg: [  IPv6: ipv6_create_tempaddr: ipv6 temporary address upper limit reached  which is what your patch is supposed to do. But acquired addresses from flooding all seem to have the tentative flag on:      inet6 scope global temporary tentative dynamic         valid_lft preferred_lft     inet6 scope global tentative dynamic         valid_lft preferred_lft     inet6 scope global temporary tentative dynamic         valid_lft preferred_lft     inet6 scope global tentative dynamic         valid_lft preferred_lft     inet6 scope global temporary tentative dynamic         valid_lft preferred_lft     inet6 scope global tentative dynamic         valid_lft preferred_lft     inet6 scope global temporary tentative dynamic         valid_lft preferred_lft     inet6 scope global tentative dynamic         valid_lft preferred_lft  what I also find wrong here is that all temporary addresses (dynamic) acquired have gotten the same last 64bits. I don't think this is OK per RFC even if not explicitly defined there. Every temp. address created should be different per prefix from the rest.  use_tempaddr for the iface still has '2' as its value # cat /proc/sys/net/ipv6/conf/eth0/use_tempaddr  2  then after taking the interface down and up again even the new addresses acquired still have the tentative flag enabled:     inet6 scope global tentative dynamic         valid_lft preferred_lft     inet6 scope global tentative dynamic         valid_lft preferred_lft     inet6 scope link tentative         valid_lft forever preferred_lft forever  dmesg reports: [  IPv6: ipv6_create_tempaddr: regeneration time exceeded - disabled temporary address support  use_tempaddr for the iface now has '-1' as its value though # cat /proc/sys/net/ipv6/conf/eth0/use_tempaddr  -1  And so there actually isn't any IPv6 connectivity from then on until a reboot. Flooding triggers something that corrupts ipv6 functionality.  Best regards, --  George Kargiotakis https://void.gr GPG KeyID: GPG Fingerprint: 9EB8 31BE 07CE 4A0A 1BC8 E4F4 FFE6  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      