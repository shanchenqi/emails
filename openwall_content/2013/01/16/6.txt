  oss-security - [PATCH] xen: Fix stack corruption in xen_failsafe_callback for 32bit PVOPS guests.            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Wed, 16 Jan From: Andrew Cooper <andrew.cooper3@...rix.com> To: <linux-kernel@...r.kernel.org> CC: Andrew Cooper <andrew.cooper3@...rix.com>, Frediano Ziglio 	<frediano.ziglio@...rix.com>, <stable@...r.kernel.org>, 	<oss-security@...ts.openwall.com>, Konrad Rzeszutek Wilk <konrad@...nel.org>, 	<xen-devel@...ts.xen.org>, <security@....org> Subject: [PATCH] xen: Fix stack corruption in xen_failsafe_callback for 32bit PVOPS guests.  This fixes / XSA-40  There has been an error on the xen_failsafe_callback path for failed iret, which causes the stack pointer to be wrong when entering the iret_exc error path.  This can result in the kernel crashing.  In the classic kernel case, the relevant code looked a little like:          popl %eax      # Error code from hypervisor         jz 5f         addl $16,%esp         jmp iret_exc   # Hypervisor said iret fault 5:      addl $16,%esp                        # Hypervisor said segment selector fault  Here, there are two identical addls on either option of a branch which appears to have been optimised by hoisting it above the jz, and converting it to an lea, which leaves the flags register unaffected.  In the PVOPS case, the code looks like:          popl_cfi %eax         # Error from the hypervisor         lea 16(%esp),%esp     # Add $16 before choosing fault path         CFI_ADJUST_CFA_OFFSET -16         jz 5f         addl $16,%esp         # Incorrectly adjust %esp again         jmp iret_exc  It is possible unprivileged userspace applications to cause this behaviour, for example by loading an LDT code selector, then changing the code selector to be not-present.  At this point, there is a race condition where it is possible for the hypervisor to return back to userspace from an interrupt, fault on its own iret, and inject a failsafe_callback into the kernel.  This bug has been present since the introduction of Xen PVOPS support in commit (xen: Core Xen implementation), in  Signed-off-by: Frediano Ziglio <frediano.ziglio@...rix.com> Signed-off-by: Andrew Cooper <andrew.cooper3@...rix.com> Cc: stable@...r.kernel.org  --- Cc: oss-security@...ts.openwall.com Cc: Konrad Rzeszutek Wilk <konrad@...nel.org> Cc: xen-devel@...ts.xen.org Cc: security@....org ---  |    1 -  1 files changed, 0 insertions(+), 1 deletions(-)  diff --git index --- +++ @@ @@ ENTRY(xen_failsafe_callback)  	lea 16(%esp),%esp  	CFI_ADJUST_CFA_OFFSET -16  	jz 5f -	addl $16,%esp  	jmp iret_exc  5:	pushl_cfi $-1 /* orig_ax = -1 => not a system call */  	SAVE_ALL --    Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      