  oss-security - Re: GnuPG and lower - memory access errors and keyring database  corruption            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Tue, 01 Jan From: Kurt Seifried <kseifried@...hat.com> To: KB Sriram <kbsriram@...il.com> CC: bugtraq@...urityfocus.com,         "oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com> Subject: Re: GnuPG and lower - memory access errors and keyring database  corruption  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  On PM, KB Sriram wrote: > Versions of GnuPG <= are vulnerable to memory access > violations and public keyring database corruption when importing > public keys that have been manipulated. >  > An OpenPGP key can be fuzzed in such a way that gpg segfaults (or > has other memory access violations) when importing the key. >  > The key may also be fuzzed such that gpg reports no errors when  > examining the key (eg: "gpg the_bad_key.pkr") but importing it > causes gpg to corrupt its public keyring database. >  > The database corruption issue was first reported on Dec 6th, > through the gpg bug tracking system: >  > >  > The subsequent memory access violation was discovered and reported > in a private email with the maintainer on Dec 20th. >  > A zip file with keys that causes segfaults and other errors is  > available at > and includes > a log file that demonstrates the issues [on MacOS X and gpg > >  > A new version of gpg -- -- that addressed both these issues, > was independently released by the maintainer on Dec 20th. >  > The simplest solution is to upgrade all gpg installs to >  > [Workarounds: A corrupted database may be recovered by manually  > copying back the pubring.gpg~ backup file. Certain errors may also > be prevented by never directly importing a key, but first just > "looking" at the key (eg: "gpg bad_key.pkr"). However, this is not > guaranteed to work in all cases; though upgrading to does > work for the issues reported.] >  > Discovery: >  > The problem was discovered during a byte-fuzzing test of OpenPGP  > certificates for an unrelated application. Each byte in turn was  > replaced by a random byte, and the modified certificate fed to the  > application to check that it handled errors correctly. Gpg was used > as a control, but it itself turned out to have errors related to > packet parsing. The errors are generally triggered when fuzzing the > length field of OpenPGP packets, which cascades into subsequent > errors in certain situations. >  > -kb  Has this been assigned a CVE identifier yet?  - --  Kurt Seifried Red Hat Security Response Team (SRT) PGP: A90B 66BF  -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux)  m0wuEBezBNChTLi5xjvO =Ai5t -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      