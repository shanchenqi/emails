  oss-security - Exploitability of the integer overflows in djbdns            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Mon, 1 Jun From: Georgi Guninski <gguninski@...il.com> To: oss-security@...ts.openwall.com Subject: Exploitability of the integer overflows in djbdns   From my blog:  Exploitability of the integer overflows in djbdns  TLDR: Are the integer overflows in djbdns exploitable?  Background: there are integer overflows and memory corruption in the library functions of qmail For reference see [1] [2].  Some of the qmail vulnerabilities (integer overflows and negative index???) are present in djbdns  For example in alloc.c of djbdns: ==== /*@...l@...*@out@...har *alloc(n) unsigned int n; {   char *x;   n = ALIGNMENT + n - (n & (ALIGNMENT - 1)); /* XXX: could overflow */ =====  This clearly overflows for n= -1 for example.  It is natural to write an integer overflow, but documenting easy to fix security bug is beyond our understanding.  Reachability of the bugs is not clear and might require gigabytes of memory to hit the problems by encoding integer in unary.  In addition djbns limits the memory usage by |softlimit|, but we are not sure the limits are on all vulnerable programs. An island of tractability could be |alloc(atoi())| or |alloc(size * count)|  Is djbdns exploitable by any of the qmail bugs?  [1] http://www.guninski.com/where_do_you_want_billg_to_go_today_4.html [2]  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      