  oss-security - Apache Tomcat Remote Code Execution via session  persistence            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Wed, 20 May From: Mark Thomas <markt@...che.org> To: oss-security@...ts.openwall.com Subject: Apache Tomcat Remote Code Execution via session  persistence  Apache Tomcat Remote Code Execution via session persistence  Severity: High  Vendor: The Apache Software Foundation  Versions Affected: Apache Tomcat to Apache Tomcat to Apache Tomcat to Apache Tomcat to  Description: If: a) an attacker is able to control the contents and name of a file on the    server; and b) the server is configured to use the PersistenceManager with a    FileStore; and c) the PersistenceManager is configured with    sessionAttributeValueClassNameFilter="null" (the default unless a    SecurityManager is used) or a sufficiently lax filter to allow the    attacker provided object to be deserialized; and d) the attacker knows the relative file path from the storage location    used by FileStore to the file the attacker has control over; then, using a specifically crafted request, the attacker will be able to trigger remote code execution via deserialization of the file under their control. Note that all of conditions a) to d) must be true for the attack to succeed.  Mitigation: - Upgrade to Apache Tomcat or later - Upgrade to Apache Tomcat or later - Upgrade to Apache Tomcat or later - Upgrade to Apache Tomcat or later Alternatively, users may configure the PersistenceManager with an appropriate value for sessionAttributeValueClassNameFilter to ensure that only application provided attributes are serialized and deserialized.  Credit: This issue was discovered and reported responsibly to the Apache Tomcat Security Team by report by jarvis threedr3am of pdd security research  References: [1] http://tomcat.apache.org/security-10.html [2] http://tomcat.apache.org/security-9.html [3] http://tomcat.apache.org/security-8.html [4] http://tomcat.apache.org/security-7.html  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      