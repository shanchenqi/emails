  oss-security - Linux kernel denial of service by corrupting  mountpoint reference counter            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Mon, 4 May From: Piotr Krysiuk <piotras@...il.com> To: oss-security@...ts.openwall.com Subject: Linux kernel denial of service by corrupting  mountpoint reference counter  A race condition in fs/namespace.c in the Linux kernel allows unprivileged local users to cause a denial of service by corrupting mountpoint reference counter  # Affected Versions  The denial of service has been reproduced against the following Linux kernel releases from kernel.org: * (longterm release) * (longterm release) * (longterm release) * (longterm release)  The denial of service has also been reproduced against the following distribution kernel versions provided by current Ubuntu LTS releases: * (distribution kernel provided by package from Ubuntu LTS) * (current distribution kernel provided by package from Ubuntu LTS with all updates installed)  Linux kernel releases 5.3 and newer from kernel.org are not affected.  # Root Cause  Unprivileged local user can cause kernel panic by triggering destruction of a mountpoint that is still in use.  This is possible by exploiting a race condition to corrupt mountpoint reference counter when simultaneously executing put_mountpoint() and pivot_root(): * one thread increments m_count member of struct mountpoint   [under namespace_sem, but not holding mount_lock]     pivot_root() * another thread simultaneously decrements the same m_count   [under mount_lock, but not holding namespace_sem]     put_mountpoint()       unhash_mnt()         umount_mnt()           mntput_no_expire()  # Bug Fix  To fix this race condition, grab mount_lock before updating m_count in pivot_root(). This requires swapping two lines in fs/namespace.c: ``` @@ @@ SYSCALL_DEFINE2(pivot_root, const char __user *, new_root,   /* make certain new is below the root */   if (!is_path_reachable(new_mnt, new.dentry, &root))   goto out4; - root_mp->m_count++; /* pin it so it won't go away */   lock_mount_hash(); + root_mp->m_count++; /* pin it so it won't go away */   detach_mnt(new_mnt, &parent_path);   detach_mnt(root_mnt, &root_parent);   if (root_mnt->mnt.mnt_flags & MNT_LOCKED) { ```  The above fix has been merged into all relevant longterm branches by upstream Linux kernel.  The following Linux kernel releases from kernel.org incorporate the fix: * (longterm release), see commit * (current longterm release), see commit * (current longterm release), see commit * (current longterm release), see commit  # Proof Of Concept  I developed a PoC that allows unprivileged local users to reliably trigger kernel panic inside VM instances on Compute Engine of Google Cloud Platform.  The PoC has been shared privately with <security@...nel.org> and via a private bug report with Ubuntu.  # Discoverer  Piotr Krysiuk <piotras@...il.com>  # References  (reserved via https://cveform.mitre.org/)   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      