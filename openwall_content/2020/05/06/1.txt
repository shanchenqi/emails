  oss-security - kernel: uninitialized kernel data leak in userspace coredumps            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Wed, 6 May From: Wade Mealing <wmealing@...hat.com> To: oss-security@...ts.openwall.com Subject: kernel: uninitialized kernel data leak in userspace coredumps  Gday,  A potential info leak of kernel private memory to userspace was found in the kernel's implementation of core dumping userspace processes.  An area of memory was allocated from free memory without being correctly initialized, this memory contents could contain kernel private information from previous executions and leak it to kernel space for any (probably local) user that is able to read the core dump.  This seems like it would allow leaking of possible registers that are not stored/initialized in the core dump itself.  The amount leaked will depend on the register state at the time of the crash, it could also leak nothing.  This was introduced in  Possible mitigation would be to disable core dumps system-wide by setting:  * hard core 0  In the  /etc/security/limits.conf file and restarting applications/services/processes which users may have access to or simply reboot the system.  This disables core dumps which may not be a suitable workaround in your environment.  Relevant links: -------------------  Not upstream but a patch:  Where I found out about it:  Red Hat Bugzilla:  Thank you.  Wade Mealing  Product Security - Kernel Red Hat wmealing@...hat.com   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      