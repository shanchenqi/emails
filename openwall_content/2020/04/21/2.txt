  oss-security - kernel: use-after-free in cdev_put()  when a PTP device is removed while it's chardev is open            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Tue, 21 Apr From: Rohit Keshri <rkeshri@...hat.com> To: oss-security@...ts.openwall.com Subject: kernel: use-after-free in cdev_put()  when a PTP device is removed while it's chardev is open  Hello Team,  Red Hats kernel has a flaw in Precision Time Protocol (PTP), which can cause a kernel panic with 'general protection fault' with below details.  A use-after-free flaw was found in Linux Kernels implementation of __fput. When a (high privileged) process allocates a ptp device file (like /dev/ptpX) and voluntarily goes to sleep. During this time if the underlying device is removed (potential privilege escalation) by the user with administrator privilege, it can cause a denial of service (DoS) problem as the process wakes up to terminate and clean all attached files. The system crashes due to the cdev structure being invalid (as already freed) which is pointed to by the inode.  was assigned by Red Hat Inc.  Upstream fix:   Thank You .. Rohit Keshri / Red Hat Product Security Team 01BC EF33 BFE2 2EEB 0CBC 4C2D   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      