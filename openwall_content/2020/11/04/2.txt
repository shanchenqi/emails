  oss-security - sddm: local privilege escalation due to race  condition in creation of the Xauthority file            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Wed, 4 Nov From: Matthias Gerstner <mgerstner@...e.de> To: oss-security@...ts.openwall.com Subject: sddm: local privilege escalation due to race  condition in creation of the Xauthority file  Hello list,  a local privilege escalation has been discovered in the sddm display manager [1].  sddm passes the -auth and -displayfd command line arguments when starting the Xserver. It then waits for the display number to be received from the Xserver via the `displayfd`, before the Xauthority file specified via the `-auth` parameter is actually written. This results in a race condition, creating a time window in which no valid Xauthority file is existing while the Xserver is already running.  The X.Org server, when encountering a non-existing, empty or corrupt/incomplete Xauthority file, will grant any connecting client access to the Xorg display [2]. A local unprivileged attacker can thus create an unauthorized connection to the Xserver and grab e.g. keyboard input events from other legitimate users accessing the Xserver.  A simple reproducer works like this:  ``` # run this from an unpriliged account before sddm is started to exploit # the race condition and kill the X server inotifywait /tmp/.X11-unix; while ! xkill; do :; done ```  The security issue was discovered by our SUSE sddm package maintainer Fabian Vogt. The issue is included in sddm since version and was recently fixed in a new upstream release The upstream commit fixing this issue is found in [3]. The SUSE bugzilla bug tracking this issue is found in [4].  [1]: https://github.com/sddm/sddm [2]: [3]: [4]:  Cheers  Matthias  --  Matthias Gerstner <matthias.gerstner@...e.de> Dipl.-Wirtsch.-Inf. (FH), Security Engineer https://www.suse.com/security Phone: +49 53 GPG Key ID:  SUSE Software Solutions Germany GmbH HRB AG Nürnberg Geschäftsführer: Felix Imendörffer  Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      