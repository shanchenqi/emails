  oss-security - Re: Speculation on incompletely validated data on IBM Power9            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Mon, 23 Nov From: Daniel Axtens <dja@...ens.net> To: oss-security@...ts.openwall.com Cc: cmr@...ormatik.wtf, ruscur@...sell.cc, npiggin@...il.com, mpe@...erman.id.au, spoorts2@...ibm.com Subject: Re: Speculation on incompletely validated data on IBM Power9  Hi,  > This issue can be mitigated by flushing the L1 cache between privilege > boundaries of concern.  There's been interest in the performance impact of doing this sort of flush. The impact depends on the workload, on how often the kernel is entered and for what, and on the particular flush mechanism supported by the machine.  To take an unscientific example, I tested compiling a kernel. I dropped caches, did 1 build to warm the cache, and then 5 timed builds. The machine uses the mttrig flush.  Wall clock time: neither flush: avg (min - max -- entry flush:   avg (min - max -- both flushes:  avg (min - max --  As you can see, the performance impact for this test was less than 0.4% on this machine.  I want to be clear that this isn't an official claim of performance under any particular configuration or workload. Your results may vary.  As always, systems running in trusted environments can be booted with mitigations=off or the firmware 'risk level' adjusted to disable a range of speculative execution mitigations, including these.  Kind regards, Daniel  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      