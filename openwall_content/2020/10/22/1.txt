  oss-security - and for Microchip code            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Thu, 22 Oct From: Dimitrios Glynos <dimitris@...sus-labs.com> To: oss-security@...ts.openwall.com Subject: and for Microchip code  Hello,  we've published a set of advisories for three vulnerabilities affecting open source code offered by Microchip. This code is part of SDKs used to build firmware for Microchip's microcontrollers. All three of these issues were identified last year by George Poulios of CENSUS.  1.  This is an integer overflow that may occur while calculating the desired range in flash memory to read / write. It may allow an adversary to bypass any checks made by the firmware regarding readable/writable ranges in flash memory. The vulnerable code is part of the Hardware Abstraction Layer of the "ASF4" SDK and so it can be found on many different devices with different flash memory hardware.  Microchip/Atmel still distributes the vulnerable version of the code through the start.atmel.com "web configurator" service.  2.  This is a buffer overflow that may occur when a microcontroller processes the response of a Microchip cryptographic co-processor like To drive the co-processor the "cryptoauthlib" library is used. The library performs a memcpy() operation to copy a crypto co-processor generated signature into a firmware buffer. However, the number (and content) of bytes copied is fully controllable by someone meddling with the data arriving at the microcontroller.  Version of cryptoauthlib addresses this issue.  3.  This is similar to On devices using cryptoauthlib to control a Microchip cryptographic co-processor, it is possible to cause a buffer overflow on the MCU by meddling with the data returned by the co-processor to the MCU during the generation of a public / private key-pair on the co-processor.  Version of cryptoauthlib addresses this issue.  Kind regards,  Dimitris    Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      