  oss-security - Linux kernel: crypto: bcm - Verify GCM/CCM key length in setkey            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Mon, 12 Oct From: kiyin(尹亮) <kiyin@...cent.com> To: "oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com> CC: Anthony Liguori <aliguori@...zon.com>, Solar Designer <solar@...nwall.com> Subject: Linux kernel: crypto: bcm - Verify GCM/CCM key length in setkey  There are four security bugs in Broadcom SPU driver. The patch was public in CVE ID request is in progress.  Here is the patch detail:    The setkey function for GCM/CCM algorithms didn't verify the key  length before copying the key and subtracting the salt length.    This patch delays the copying of the key til after the verification  has been done.  It also adds checks on the key length to ensure  that it's at least as long as the salt.    Fixes: ("crypto: brcm - Add Broadcom SPU driver")  Cc: <stable@...xxxxxxxxxxxx>  Reported-by: kiyin(尹亮) <kiyin@...xxxxxxxx>  Signed-off-by: Herbert Xu <herbert@...xxxxxxxxxxxxxxxx>    diff --git a/drivers/crypto/bcm/cipher.c b/drivers/crypto/bcm/cipher.c  index  --- a/drivers/crypto/bcm/cipher.c  +++ b/drivers/crypto/bcm/cipher.c  @@ @@ static int aead_gcm_ccm_setkey(struct crypto_aead *cipher,            ctx->enckeylen = keylen;          ctx->authkeylen = 0;  -       memcpy(ctx->enckey, key, ctx->enckeylen);            switch (ctx->enckeylen) {          case  @@ @@ static int aead_gcm_ccm_setkey(struct crypto_aead *cipher,                 goto badkey;          }    +       memcpy(ctx->enckey, key, ctx->enckeylen);  +          flow_log("  enckeylen:%u authkeylen:%u\n", ctx->enckeylen,                  ctx->authkeylen);          flow_dump("  enc: ", ctx->enckey, ctx->enckeylen);  @@ @@ static int aead_gcm_esp_setkey(struct crypto_aead *cipher,          struct iproc_ctx_s *ctx = crypto_aead_ctx(cipher);            flow_log("%s\n", __func__);  +  +       if (keylen < GCM_ESP_SALT_SIZE)  +               return -EINVAL;  +          ctx->salt_len = GCM_ESP_SALT_SIZE;          ctx->salt_offset = GCM_ESP_SALT_OFFSET;          memcpy(ctx->salt, key + keylen - GCM_ESP_SALT_SIZE, GCM_ESP_SALT_SIZE);  @@ @@ static int crypto_aead *cipher,          struct iproc_ctx_s *ctx = crypto_aead_ctx(cipher);            flow_log("%s\n", __func__);  +  +       if (keylen < GCM_ESP_SALT_SIZE)  +              return -EINVAL;  +          ctx->salt_len = GCM_ESP_SALT_SIZE;          ctx->salt_offset = GCM_ESP_SALT_OFFSET;          memcpy(ctx->salt, key + keylen - GCM_ESP_SALT_SIZE, GCM_ESP_SALT_SIZE);  @@ @@ static int aead_ccm_esp_setkey(struct crypto_aead *cipher,          struct iproc_ctx_s *ctx = crypto_aead_ctx(cipher);            flow_log("%s\n", __func__);  +  +       if (keylen < CCM_ESP_SALT_SIZE)  +              return -EINVAL;  +          ctx->salt_len = CCM_ESP_SALT_SIZE;          ctx->salt_offset = CCM_ESP_SALT_OFFSET;          memcpy(ctx->salt, key + keylen - CCM_ESP_SALT_SIZE, CCM_ESP_SALT_SIZE);  --  Email: Herbert Xu <herbert@...xxxxxxxxxxxxxxxx>  Home Page: http://gondor.apana.org.au/~herbert/  PGP Key: http://gondor.apana.org.au/~herbert/pubkey.txt    Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      