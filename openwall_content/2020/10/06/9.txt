  oss-security - Re: kernel: soft lockup when submitting zero length bvecs.            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Tue, 06 Oct From: Michael Ellerman <mpe@...erman.id.au> To: Greg KH <greg@...ah.com>, oss-security@...ts.openwall.com Subject: Re: kernel: soft lockup when submitting zero length bvecs.  Greg KH <greg@...ah.com> writes: > On Wed, Sep 30, at Wade Mealing wrote: >> Gday, >>  >> A flaw was found in the Linux kernels implementation of biovec usage.  A >> zero-length biovec request issued to the block subsystem could cause the >> kernel to enter an infinite loop causing a denial of service. An attacker >> with a local account can issue requests to a block device can cause a >> denial of service. >>  >> This has been assigned >>  >> According to the fix commits "Introduced in": >> # git tag --contains | head -n 1 >> > > That's odd, and not the best way to do this, the commit really showed up > in > 	$ git describe --contains > > > You forgot to sort by "version", which is what you need to do if you > want to try to look at tags, but then it's still a bit off: > 	$ git tag --contains | sort -V | head -n 10 > 	v4.8 > > > > > > > > > 	v4.9  Git can do the sorting for you with --sort.  And if you have other tags in your repo that can confuse things, so specifying that you want "v*" tags avoids that.  eg:  $ git tag -l "v*" --sort=v:refname --contains | head -n 10 v4.8 v4.9  Obviously for ease of use you want that in an alias or script.  cheers  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      