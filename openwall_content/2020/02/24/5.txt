  oss-security - LPE and RCE in OpenSMTPD's default install            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Mon, 24 Feb From: Qualys Security Advisory <qsa@...lys.com> To: oss-security@...ts.openwall.com Subject: LPE and RCE in OpenSMTPD's default install   Qualys Security Advisory  LPE and RCE in OpenSMTPD's default install   ============================================================================== Contents ==============================================================================  Summary Analysis ... Acknowledgments   ============================================================================== Summary ==============================================================================  We discovered a vulnerability in OpenSMTPD, OpenBSD's mail server. This vulnerability, an out-of-bounds read introduced in December (commit "when peer outputs a multi-line response ..."), is exploitable remotely and leads to the execution of arbitrary shell commands: either as root, after May (commit "switch smtpd to new grammar"); or as any non-root user, before May  Because this vulnerability resides in OpenSMTPD's client-side code (which delivers mail to remote SMTP servers), we must consider two different scenarios:  - Client-side exploitation: This vulnerability is remotely exploitable   in OpenSMTPD's (and hence OpenBSD's) default configuration. Although   OpenSMTPD listens on localhost only, by default, it does accept mail   from local users and delivers it to remote servers. If such a remote   server is controlled by an attacker (either because it is malicious or   compromised, or because of a man-in-the-middle, DNS, or BGP attack --   SMTP is not TLS-encrypted by default), then the attacker can execute   arbitrary shell commands on the vulnerable OpenSMTPD installation.  - Server-side exploitation: First, the attacker must connect to the   OpenSMTPD server (which accepts external mail) and send a mail that   creates a bounce. Next, when OpenSMTPD connects back to their mail   server to deliver this bounce, the attacker can exploit OpenSMTPD's   client-side vulnerability. Last, for their shell commands to be   executed, the attacker must (to the best of our knowledge) crash   OpenSMTPD and wait until it is restarted (either manually by an   administrator, or automatically by a system update or reboot).  We developed a simple exploit for this vulnerability and successfully tested it against OpenBSD 6.6 (the current release), OpenBSD 5.9 (the first vulnerable release), Debian 10 (stable), Debian 11 (testing), and Fedora 31. At OpenBSD's request, and to give OpenSMTPD's users a chance to patch their systems, we are withholding the exploitation details and code until Wednesday, February 26,  Last-minute note: we tested our exploit against the recent changes in OpenSMTPD and our results are: if the "mbox" method is used for local delivery (the default in OpenBSD -current), then arbitrary command execution as root is still possible; otherwise (if the "maildir" method is used, for example), arbitrary command execution as any non-root user is possible.   ============================================================================== Analysis ==============================================================================  SMTP clients connect to SMTP servers and send commands such as EHLO, MAIL FROM, and RCPT TO. SMTP servers respond with either single-line or multiple-line replies:  - the first lines begin with a three-digit code and a hyphen ('-'),   followed by an optional text (for example,  - the last line begins with the same three-digit code, followed by an   optional space (' ') and text (for example, HELP").  In OpenSMTPD's client-side code, these multiline replies are parsed by the mta_io() function:  ------------------------------------------------------------------------------ static void mta_io(struct io *io, int evt, void *arg) { ....         case IO_DATAIN:             nextline:                 line = io_getline(s->io, &len); ....                 if ((error = parse_smtp_response(line, len, &msg, &cont))) { ------------------------------------------------------------------------------  - the first lines (when line[3] == '-') are concatenated into a 2KB   replybuf:  ------------------------------------------------------------------------------                 if (cont) {                         if (s->replybuf[0] == '\0')                                 (void)strlcat(s->replybuf, line, sizeof s->replybuf);                         else {                                 line = line + 4; ....                                         (void)strlcat(s->replybuf, line, sizeof s->replybuf);                         }                         goto nextline;                 } ------------------------------------------------------------------------------  - the last line (when line[3] != '-') is also concatenated into   replybuf:  ------------------------------------------------------------------------------                 if (s->replybuf[0] != '\0') {                         p = line + 4; ....                         if (strlcat(s->replybuf, p, sizeof s->replybuf) >= sizeof s->replybuf) ------------------------------------------------------------------------------  Unfortunately, if the last line's three-digit code is not followed by the optional space and text, then p (at line points to the first character *after* the line's '\0' terminator (which replaced the line's '\n' terminator in iobuf_getline()), and this out-of-bounds string is concatenated into replybuf (at line  ...   ============================================================================== Acknowledgments ==============================================================================  We thank OpenBSD's developers for their quick response and patches. We also thank Gilles for his hard work and beautiful code.       This message may contain confidential and privileged information. If it has been sent to you in error, please reply to advise the sender of the error and then immediately delete it. If you are not the intended recipient, do not read, copy, disclose or otherwise use this message. The sender disclaims any liability for such unauthorized use. NOTE that all incoming emails sent to Qualys email accounts will be archived and may be scanned by us and/or by external service providers to detect and prevent threats to our systems, investigate illegal or inappropriate behavior, and/or eliminate unsolicited promotional emails (âspamâ). If you have any concerns about this process, please contact us.  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      