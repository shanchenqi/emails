  oss-security - Re: mariadb: possible local mysql to root user exploit in mysql_install_db script setting permissions of /usr/lib64/mysql/plugin/auth_pam_tool_dir/auth_pam_tool            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 4 Feb From: Solar Designer <solar@...nwall.com> To: oss-security@...ts.openwall.com Subject: Re: mariadb: possible local mysql to root user exploit in mysql_install_db script setting permissions of /usr/lib64/mysql/plugin/auth_pam_tool_dir/auth_pam_tool  On Tue, Feb 04, at Matthias Gerstner wrote: > For Deb/RPM packaging MariaDB continues to suggest to use the following > dir and file modes [2], [3]: >  > mysql:root  /usr/lib/mysql/plugin/auth_pam_tool_dir >  root:root /usr/lib/mysql/plugin/auth_pam_tool_dir/auth_pam_tool >  > I personally suggest the following directory mode instead: >  > root:mysql  /usr/lib/mysql/plugin/auth_pam_tool_dir  Why not simply  root:mysql /usr/lib/mysql/plugin/auth_pam_tool  without the directory?  I see only one reason: it's a bigger change relative to the current implementation, which is more work now, but perhaps this cleanup is worth it longer-term.  The approach with a directory (or several) is sometimes useful to limit access to a file yet avoid use of ACLs, but the case above looks simple enough not to require this complication.   Alexander  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      