  oss-security - Multiple vulnerabilities in Jenkins plugins            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Wed, 12 Feb From: Daniel Beck <ml@...kweb.net> To: oss-security@...ts.openwall.com Subject: Multiple vulnerabilities in Jenkins plugins  Jenkins is an open source automation server which enables developers around the world to reliably build, test, and deploy their software.  The following releases contain fixes for security vulnerabilities:  * Azure AD Plugin * Brakeman Plugin * FitNesse Plugin * Git Parameter Plugin * Google Kubernetes Engine Plugin * NUnit Plugin * Pipeline GitHub Notify Step Plugin * Pipeline: Groovy Plugin * RadarGun Plugin 1.8 * S3 publisher Plugin * Script Security Plugin * Subversion Plugin  Additionally, we announce unresolved security issues in the following plugins:  * Applatix Plugin * BMC Release Package and Deployment Plugin * Debian Package Builder Plugin * DigitalOcean Plugin * Dynamic Extended Choice Parameter Plugin * Eagle Tester Plugin * ECX Copy Data Management Plugin * Harvest SCM Plugin * Parasoft Environment Manager Plugin  Summaries of the vulnerabilities are below. More details, severity, and attribution can be found here:  We provide advance notification for security updates on this mailing list: https://groups.google.com/d/forum/jenkinsci-advisories  If you discover security vulnerabilities in Jenkins, please report them as described here: https://jenkins.io/security/#reporting-vulnerabilities  ---  / Sandbox protection in Pipeline: Groovy Plugin and earlier can be circumvented through default parameter expressions in CPS-transformed methods.  This allows attackers able to specify and run sandboxed Pipelines to execute arbitrary code in the context of the Jenkins master JVM.   / Sandbox protection in Script Security Plugin and earlier can be circumvented during the script compilation phase by applying AST transforming annotations such as `@...b` to imports or by using them inside of other annotations. This affects both script execution (typically invoked from other plugins like Pipeline) as well as HTTP endpoints providing sandboxed script validation.  Users with Overall/Read permission can exploit this to bypass sandbox protection and execute arbitrary code on the Jenkins master.  This issue is due to an incomplete fix of   / Subversion Plugin and earlier does not escape the error message for the Project Repository Base URL field form validation. This results in a stored cross-site scripting vulnerability exploitable by users able to specify such base URLs, for example users able to configure Multibranch Pipelines.   / (parameter name) & (default value) Git Parameter Plugin and earlier does not correctly escape the parameter name or default value. This results in a stored cross-site scripting vulnerability exploitable by users with Job/Configure permission.   / S3 publisher Plugin stores a secret key in its global configuration.  While the credential is stored encrypted on disk, it is transmitted in plain text as part of the configuration form by S3 publisher Plugin and earlier. This can result in exposure of the credential through browser extensions, cross-site scripting vulnerabilities, and similar situations.   / NUnit Plugin and earlier does not configure the XML parser to prevent XML external entity (XXE) attacks.  This allows a user able to control the input files for its post-build step to have Jenkins parse a crafted file that uses external entities for extraction of secrets from the Jenkins master, server-side request forgery, or denial-of-service attacks.   (1) / (CSRF) & (missing permission check) Pipeline GitHub Notify Step Plugin and earlier does not perform permission checks on a method implementing form validation. This allows users with Overall/Read access to Jenkins to connect to an attacker-specified URL using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.  Additionally, the form validation method does not require POST requests, resulting in a CSRF vulnerability.   (2) / Pipeline GitHub Notify Step Plugin and earlier provides a list of applicable credential IDs to allow users configuring the plugin to select the one to use.  This functionality does not correctly check permissions, allowing any user with Overall/Read permission to get a list of valid credentials IDs. Those can be used as part of an attack to capture the credentials using another vulnerability.   / Azure AD Plugin stores a client secret in its global configuration.  While the credential is stored encrypted on disk, it is transmitted in plain text as part of the configuration form by Azure AD Plugin and earlier. This can result in exposure of the credential through browser extensions, cross-site scripting vulnerabilities, and similar situations.   / FitNesse Plugin and earlier does not configure the XML parser to prevent XML external entity (XXE) attacks.  This allows a user able to control the input files for its post-build step to have Jenkins parse a crafted file that uses external entities for extraction of secrets from the Jenkins master, server-side request forgery, or denial-of-service attacks.   / Google Kubernetes Engine Plugin and earlier does not configure its YAML parser to prevent the instantiation of arbitrary types. This results in a remote code execution vulnerability exploitable by users able to provide YAML input files to Google Kubernetes Engine Plugin's build step.   / Brakeman Plugin and earlier did not escape values received from parsed JSON files when rendering them, resulting in a stored cross-site scripting vulnerability.  This vulnerability can be exploited by users able to control the Brakeman post-build step input data.   / RadarGun Plugin 1.7 and earlier does not configure its YAML parser to prevent the instantiation of arbitrary types. This results in a remote code execution vulnerability exploitable by users able to configure RadarGun Plugin's build step.   / Dynamic Extended Choice Parameter Plugin and earlier stores a Subversion password unencrypted in job `config.xml` files as part of its configuration. This credential can be viewed by users with Extended Read permission or access to the master file system.  As of publication of this advisory, there is no fix.   / Debian Package Builder Plugin and earlier stores a GPG passphrase unencrypted in its global configuration file `ru.yandex.jenkins.plugins.debuilder.DebianPackageBuilder.xml` on the Jenkins master. This credential can be viewed by users with access to the master file system.  As of publication of this advisory, there is no fix.   / DigitalOcean Plugin 1.1 and earlier stores a token unencrypted in the global `config.xml` files as part of its configuration. This credential can be viewed by users with access to the master file system.  As of publication of this advisory, there is no fix.   / BMC Release Package and Deployment Plugin 1.1 and earlier stores the RPD user token unencrypted in its global configuration file `com.bmc.rpd.jenkins.plugin.bmcrpd.configuration.RPDPluginConfiguration.xml` on the Jenkins master. This credential can be viewed by users with access to the master file system.  As of publication of this advisory, there is no fix.   / ECX Copy Data Management Plugin 1.9 and earlier stores a service password unencrypted in job `config.xml` files as part of its configuration. This credential can be viewed by users with Extended Read permission or access to the master file system.  As of publication of this advisory, there is no fix.   / Eagle Tester Plugin and earlier stores a password unencrypted in its global configuration file `com.bmc.rpd.jenkins.plugin.bmcrpd.configuration.RPDPluginConfiguration.xml` on the Jenkins master. This credential can be viewed by users with access to the master file system.  As of publication of this advisory, there is no fix.   / (global configuration) & (job configuration) Harvest SCM Plugin and earlier stores SCM passwords unencrypted in its global configuration file `hudson.plugins.harvest.HarvestSCM.xml` and in job `config.xml` files on the Jenkins master. These credentials can be viewed by users with Extended Read permission (job `config.xml` only) or access to the master file system (both).  As of publication of this advisory, there is no fix.   / Parasoft Environment Manager Plugin and earlier stores a repository password unencrypted in job `config.xml` files as part of its configuration. This credential can be viewed by users with Extended Read permission or access to the master file system.  As of publication of this advisory, there is no fix.   / Applatix Plugin 1.1 and earlier stores the Applatix password unencrypted in job `config.xml` files as part of its configuration. This credential can be viewed by users with Extended Read permission or access to the master file system.  As of publication of this advisory, there is no fix.   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      