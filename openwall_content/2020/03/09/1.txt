  oss-security - Multiple vulnerabilities in Jenkins plugins            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Mon, 9 Mar From: Daniel Beck <ml@...kweb.net> To: oss-security@...ts.openwall.com Subject: Multiple vulnerabilities in Jenkins plugins  Jenkins is an open source automation server which enables developers around the world to reliably build, test, and deploy their software.  The following releases contain fixes for security vulnerabilities:  * Audit Trail Plugin 3.3 * Cobertura Plugin * Git Plugin * Logstash Plugin * Mac Plugin * P4 Plugin * Rundeck Plugin * Script Security Plugin * Timestamper Plugin * Zephyr Enterprise Test Management Plugin  Additionally, we announce unresolved security issues in the following plugins:  * Backlog Plugin * CryptoMove Plugin * DeployHub Plugin * Literate Plugin * OpenShift Deployer Plugin * Quality Gates Plugin * Repository Connector Plugin * Skytap Cloud CI Plugin * Sonar Quality Gates Plugin * Subversion Release Manager Plugin * Zephyr for JIRA Test Management Plugin  Summaries of the vulnerabilities are below. More details, severity, and attribution can be found here:  We provide advance notification for security updates on this mailing list: https://groups.google.com/d/forum/jenkinsci-advisories  If you discover security vulnerabilities in Jenkins, please report them as described here: https://jenkins.io/security/#reporting-vulnerabilities  ---  / (constructors) & (GroovyInterceptable) Sandbox protection in Script Security Plugin and earlier can be circumvented through:  * Crafted constructor calls and bodies * Crafted method calls on objects that implement `GroovyInterceptable`  This allows attackers able to specify and run sandboxed scripts to execute arbitrary code in the context of the Jenkins master JVM.   / Git Plugin and earlier does not escape the error message for the repository URL for Microsoft TFS field form validation.  This results in a stored cross-site scripting vulnerability that can be exploited by users with Job/Configure permission.   / Timestamper Plugin and earlier does not escape or sanitize the HTML formatting used to display the timestamps in console output for builds.  This results in a stored cross-site scripting vulnerability that can be exploited by users with Overall/Administer permission.   / Cobertura Plugin and earlier does not configure its XML parser to prevent XML external entity (XXE) attacks.  This allows a user able to control the input files for the 'Publish Cobertura Coverage Report' post-build step to have Jenkins parse a crafted file that uses external entities for extraction of secrets from the Jenkins master or server-side request forgery.   / Cobertura Plugin and earlier does not validate file paths from the XML file it parses.  This allows attackers able to control the coverage report content to overwrite any file on the Jenkins master file system.   / Audit Trail Plugin 3.2 and earlier does not escape the error message for the URL Patterns field form validation.  This results in a reflected cross-site scripting vulnerability that can also be exploited similar to a stored cross-site scripting vulnerability by users with Overall/Administer permission.   / (CSRF) & (missing permission check) P4 Plugin and earlier does not perform permission checks in several HTTP endpoints. This allows users with Overall/Read access to trigger builds or add labels in the Perforce repository.  Additionally, these endpoints do not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.   / Logstash Plugin stores credentials in its global configuration file `jenkins.plugins.logstash.LogstashConfiguration.xml` on the Jenkins master as part of its configuration.  While the credentials are stored encrypted on disk, they are transmitted in plain text as part of the configuration form by Logstash Plugin and earlier. This can result in exposure of the credential through browser extensions, cross-site scripting vulnerabilities, and similar situations.   / Rundeck Plugin and earlier does not configure its XML parser to prevent XML external entity (XXE) attacks.  This allows a user with Overall/Read access to have Jenkins parse a crafted HTTP request with XML data that uses external entities for extraction of secrets from the Jenkins master or server-side request forgery.   / Zephyr Enterprise Test Management Plugin and earlier stores its Zephyr password in plain text in the global configuration file `com.thed.zephyr.jenkins.reporter.ZeeReporter.xml`. This password can be viewed by users with access to the Jenkins master file system.   / Mac Plugin and earlier does not use SSH host key validation when connecting to Mac Cloud host launched by the plugin. This lack of validation could be abused using a man-in-the-middle attack to intercept these connections to build agents.   / (CSRF) & (missing permission check) Mac Plugin and earlier does not perform permission checks on a method implementing form validation. This allows users with Overall/Read access to Jenkins to connect to an attacker-specified SSH host using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.  Additionally, this form validation method does not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.   / Repository Connector Plugin stores credentials in its global configuration file `org.jvnet.hudson.plugins.repositoryconnector.RepositoryConfiguration.xml` on the Jenkins master as part of its configuration.  While the credentials are stored encrypted on disk, they are transmitted in plain text as part of the configuration form by Repository Connector Plugin and earlier. This can result in exposure of the credential through browser extensions, cross-site scripting vulnerabilities, and similar situations.  As of publication of this advisory, there is no fix.   / Sonar Quality Gates Plugin stores credentials in its global configuration file `org.quality.gates.jenkins.plugin.GlobalConfig.xml` on the Jenkins master as part of its configuration.  While the credentials are stored encrypted on disk, they are transmitted in plain text as part of the configuration form by Sonar Quality Gates Plugin and earlier. This can result in exposure of the credential through browser extensions, cross-site scripting vulnerabilities, and similar situations.  As of publication of this advisory, there is no fix.   / Quality Gates Plugin stores credentials in its global configuration file `quality.gates.jenkins.plugin.GlobalConfig.xml` on the Jenkins master as part of its configuration.  While the credentials are stored encrypted on disk, they are transmitted in plain text as part of the configuration form by Quality Gates Plugin 2.5 and earlier. This can result in exposure of the credential through browser extensions, cross-site scripting vulnerabilities, and similar situations.  As of publication of this advisory, there is no fix.   / Subversion Release Manager Plugin 1.2 and earlier does not escape the error message for the Repository URL field form validation.  This results in a reflected cross-site scripting vulnerability that can also be exploited similar to a stored cross-site scripting vulnerability by users with Job/Configure permission.  As of publication of this advisory, there is no fix.   / Backlog Plugin stores credentials in job `config.xml` files as part of its configuration.  While the credentials are stored encrypted on disk, they are transmitted in plain text as part of the configuration form by Backlog Plugin 2.4 and earlier. These credentials could be viewed by users with Extended Read permission.  As of publication of this advisory, there is no fix.   / Zephyr for JIRA Test Management Plugin 1.5 and earlier stores Jira credentials unencrypted in its global configuration file `com.thed.zephyr.jenkins.reporter.ZfjReporter.xml` on the Jenkins master. These credentials can be viewed by users with access to the master file system.  As of publication of this advisory, there is no fix.   / OpenShift Deployer Plugin stores credentials in its global configuration file `org.jenkinsci.plugins.openshift.DeployApplication.xml` on the Jenkins master as part of its configuration.  While the credentials are stored encrypted on disk, they are transmitted in plain text as part of the configuration form by OpenShift Deployer Plugin and earlier. This can result in exposure of the credential through browser extensions, cross-site scripting vulnerabilities, and similar situations.  As of publication of this advisory, there is no fix.   / DeployHub Plugin stores credentials in job `config.xml` files as part of its configuration.  While the credentials are stored encrypted on disk, they are transmitted in plain text as part of the configuration form by DeployHub Plugin and earlier. These credentials could be viewed by users with Extended Read permission.  As of publication of this advisory, there is no fix.   / Skytap Cloud CI Plugin stores credentials in job `config.xml` files as part of its configuration.  While the credentials are stored encrypted on disk, they are transmitted in plain text as part of the configuration form by Skytap Cloud CI Plugin and earlier. These credentials could be viewed by users with Extended Read permission.  As of publication of this advisory, there is no fix.   / Literate Plugin 1.0 and earlier does not configure its YAML parser to prevent the instantiation of arbitrary types. This results in a remote code execution vulnerability exploitable by users able to provide YAML input files to Literate Plugin's build step.  As of publication of this advisory, there is no fix.   / CryptoMove Plugin and earlier allows the configuration of an OS command to execute as part of its build step configuration.  This command will be executed on the Jenkins master as the OS user account running Jenkins, allowing user with Job/Configure permission to execute an arbitrary OS command on the Jenkins master.  As of publication of this advisory, there is no fix.    Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      