  oss-security - Possible XSS vulnerability in ActionView            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Thu, 19 Mar From: Aaron Patterson <tenderlove@...y-lang.org> To: security@...e.de, rubyonrails-security@...glegroups.com, 	oss-security@...ts.openwall.com, ruby-security-ann@...glegroups.com Subject: Possible XSS vulnerability in ActionView  There is a possible XSS vulnerability in ActionView's JavaScript literal escape helpers.  Views that use the `j` or `escape_javascript` methods may be susceptible to XSS attacks.  Versions Affected:  All. Not affected:       None. Fixed Versions:      ### Impact  There is a possible XSS vulnerability in the `j` and `escape_javascript` methods in ActionView.  These methods are used for escaping JavaScript string literals.  Impacted code will look something like this:  ```erb <script>let a = `<%= j unknown_input %>`</script> ```  or  ```erb <script>let a = `<%= escape_javascript unknown_input %>`</script> ```  ### Releases  The and releases are available at the normal locations.  ### Workarounds  For those that can't upgrade, the following monkey patch may be used:  ```ruby ActionView::Helpers::JavaScriptHelper::JS_ESCAPE_MAP.merge!(   {     "`" => "\\`",     "$" => "\\$"   } )  module ActionView::Helpers::JavaScriptHelper   alias :old_ej :escape_javascript   alias :old_j :j    def escape_javascript(javascript)     javascript = javascript.to_s     if javascript.empty?       result = ""     else       result = JS_ESCAPE_MAP)     end     javascript.html_safe? ? result.html_safe : result   end    alias :j :escape_javascript end ```  ### Patches  To aid users who aren't able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.  * 5-2-js-helper-xss.patch - Patch for 5.2 series * 6-0-js-helper-xss.patch - Patch for 6.0 series  Please note that only the 5.2 and 6.0 series are supported at present. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.  ### Credits  Thanks to Jesse Campos from Chef Secure  --  Aaron Patterson http://tenderlovemaking.com/  View attachment "5-2-js-helper-xss.patch" of type "text/plain" bytes)  View attachment "6-0-js-helper-xss.patch" of type "text/plain" bytes)  Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      