  oss-security - Linux kernel: af_packet.c vulnerability            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Thu, 3 Sep From: Or Cohen <orcohen@...oaltonetworks.com> To: oss-security@...ts.openwall.com Cc: Nadav Markus <nmarkus@...oaltonetworks.com> Subject: Linux kernel: af_packet.c vulnerability  Hi, This is an announcement of  I also reported the issue netdev@...r.kernel.org and I'm waiting for approval of my proposed patch.  The report is as follows: ( a proposed patch and a reproducer are attached)  I discovered a bug which leads to a memory corruption in (net/packet/af_packet.c). It can be exploited to gain root privileges from unprivileged processes.  To create AF_PACKET sockets you need CAP_NET_RAW in your network namespace, which can be acquired by unprivileged processes on systems where unprivileged namespaces are enabled (Ubuntu, Fedora, etc).  I discovered the vulnerability while auditing the 5.7 kernel sources.  The bug occurs in tpacket_rcv function, when calculating the netoff variable (unsigned short), po->tp_reserve (unsigned int) is added to it which can overflow netoff so it gets a small value.  macoff is calculated using: "macoff = netoff - maclen", we can control macoff so it will receive a small value (specifically, smaller then sizeof(struct virtio_net_hdr)).  Later, when running the following code: ... if (do_vnet &&    virtio_net_hdr_from_skb(skb, h.raw + macoff - sizeof(struct virtio_net_hdr), ...  If do_vnet is set, and because macoff < sizeof(struct virtio_net_hdr) a pointer to a memory area before the h.raw buffer will be sent to virtio_net_hdr_from_skb. This can lead to an out-of-bounds write of bytes, controlled by the user.  The h.raw buffer is allocated in alloc_pg_vec and it's size is controlled by the user.  The stack trace is as follows at the time of the crash: ( linux v5.7 )  #0  memset_erms () at #1  in virtio_net_hdr_from_skb (little_endian=<optimized out>, has_data_valid=<optimized out>,     vlan_hlen=<optimized out>, hdr=<optimized out>, skb=<optimized out>) at #2  tpacket_rcv pt=<optimized out>, orig_dev=<optimized out>)         at #3  in dev_queue_xmit_nit dev=<optimized out>) at #4  in xmit_one (more=<optimized out>, txq=<optimized out>, dev=<optimized out>,             skb=<optimized out>) at #5  dev_hard_start_xmit dev=0x0 <fixed_percpu_data>, txq=0xa <fixed_percpu_data+10>,     ret=<optimized out>) at #6  in __dev_queue_xmit sb_dev=<optimized out>) at #7  in packet_snd msg=<optimized out>, sock=<optimized out>) at #8  packet_sendmsg (sock=<optimized out>, msg=<optimized out>, at #9  in sock_sendmsg_nosec (msg=<optimized out>, sock=<optimized out>) at #10 sock_sendmsg at  Files attached: A proposed patch - A reproducer for the bug - trigger_bug.c  We are currently working on an exploit for getting root privileges from unprivileged context using this bug.  Timeline: * - Vulnerability reported to security@...nel.org and linux-distros@...openwall.org. * - assigned. * - Vulnerability reported to netdev.  Or Cohen Palo Alto Networks  Download attachment of type "application/octet-stream" bytes)  Download attachment "trigger_bug.c" of type "application/octet-stream" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      