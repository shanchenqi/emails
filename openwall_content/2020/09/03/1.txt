  oss-security - Open Source Tool | vPrioritization | Risk Prioritization Framework            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Thu, 3 Sep From: Pramod Rana <varchashva@...il.com> To: oss-security@...ts.openwall.com Subject: Open Source Tool | vPrioritization | Risk Prioritization Framework  It is no secret that today we have more vulnerabilities than we can assess and remediate, timely and comprehensively. Risk prioritization is a key component for any vulnerability management program. Implementing a good risk prioritization framework is easier said than done because of the variable nature of risk.  I am glad to introduce vPrioritizer, a small step towards effective risk prioritization. vPrioritizer enables us to understand the contextualized risk (vPRisk) on asset-vulnerability relationship level across the organization, for teams to make more informed decision about what (vulnerability/ties) they should remediate (or can afford not to) and on which (asset/s).   To overcome above challenges, vPrioritizer is designed with primary objectives as below:     -     *Centralized* - must serve as single-pane-of-glass for vulnerability    management    -     *Automated* - any and every task which can be automated, must be    automated    -     *Community Analytics *- utilization of community analytics to mature the    prioritization algorithm over the period of time     *References: 1. GitHub: https://github.com/varchashva/vPrioritizer <https://github.com/varchashva/vPrioritizer> 2. For more details: Demo: https://youtu.be/P9IDpfJDoxI <https://youtu.be/P9IDpfJDoxI>*   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      