  oss-security - Re: Linux kernel: af_packet.c vulnerability            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 4 Sep From: Solar Designer <solar@...nwall.com> To: oss-security@...ts.openwall.com Cc: Or Cohen <orcohen@...oaltonetworks.com>, 	Nadav Markus <nmarkus@...oaltonetworks.com>, 	Eric Dumazet <edumazet@...gle.com> Subject: Re: Linux kernel: af_packet.c vulnerability  On Thu, Sep 03, at Or Cohen wrote: > I discovered the vulnerability while auditing the 5.7 kernel sources. >  > The bug occurs in tpacket_rcv function, when calculating the netoff > variable (unsigned short), po->tp_reserve (unsigned int) is added to > it which can overflow netoff so it gets a small value. >  > macoff is calculated using: "macoff = netoff - maclen", we can control > macoff so it will receive a small value (specifically, smaller then > sizeof(struct virtio_net_hdr)). >  > Later, when running the following code: > ... > if (do_vnet && >    virtio_net_hdr_from_skb(skb, h.raw + macoff - > sizeof(struct virtio_net_hdr), > ... >  > If do_vnet is set, and because macoff < sizeof(struct virtio_net_hdr) > a pointer to a memory area before the h.raw buffer will be sent to > virtio_net_hdr_from_skb. This can lead to an out-of-bounds write of > bytes, controlled by the user. >  > The h.raw buffer is allocated in alloc_pg_vec and it's size is > controlled by the user. >  > The stack trace is as follows at the time of the crash: ( linux v5.7 ) >  > #0  memset_erms () at > #1  in virtio_net_hdr_from_skb  In the proposed patch you have:  Fixes: ("packet: add PACKET_RESERVE sockopt")  That commit was in July  While this is technically correct, it can be misleading, so I am posting the below clarification/excerpt from the discussion on linux-distros:  > On Wed, Sep 2, at PM Eric Dumazet <edumazet@...gle.com> wrote: > > At the time of commit  virtio_net was not there yet.  On Wed, Sep 02, at Or Cohen wrote: > This is the commit that introduced the feature and the arithmetic > overflow exists there, which is the root cause of the bug. > However, you are correct that it is probably not possible to trigger > the memory corruption because virtio_net is not there.  I just looked into it some further, and it appears the bug was exposed to the known way to trigger it with ("packet: vnet_hdr support for tpacket_rcv") in February which first got into  Alexander  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      