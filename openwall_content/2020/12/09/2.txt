  oss-security - [SECURITY ADVISORY] libcurl: FTP wildcard stack overflow            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Wed, 9 Dec (CET) From: Daniel Stenberg <daniel@...x.se> To: curl security announcements -- curl users <curl-users@...l.haxx.se>,         curl-announce@...l.haxx.se,         libcurl hacking <curl-library@...l.haxx.se>,         oss-security@...ts.openwall.com Subject: [SECURITY ADVISORY] libcurl: FTP wildcard stack overflow  FTP wildcard stack overflow ===========================  Project curl Security Advisory, December 9th -  VULNERABILITY -------------  libcurl offers a wildcard matching functionality, which allows a callback (set with `CURLOPT_CHUNK_BGN_FUNCTION`) to return information back to libcurl on how to handle a specific entry in a directory when libcurl iterates over a list of all available entries.  When this callback returns `CURL_CHUNK_BGN_FUNC_SKIP`, to tell libcurl to not deal with that file, the internal function in libcurl then calls itself recursively to handle the next directory entry.  If there's a sufficient amount of file entries and if the callback returns "skip" enough number of times, libcurl runs out of stack space. The exact amount will of course vary with platforms, compilers and other environmental factors.  The content of the remote directory is not kept on the stack, so it seems hard for the attacker to control exactly what data that overwrites the stack - however it remains a Denial-Of-Service vector as a malicious user who controls a server that a libcurl-using application works with under these premises can trigger a crash.  (There is also a few other ways the function can be made to call itself and trigger this problem.)  We are not aware of any exploit of this flaw.  INFO ----  This issue was unfortunately reported publicly in the curl GitHub issue tracker as [issue  This flaw has existed in curl since commit in curl  This functionality is not used by the curl tool so it is not affected. Further: it is not a very widely used feature.  The Common Vulnerabilities and Exposures (CVE) project has assigned the name to this issue.  Uncontrolled Recursion  Severity: Medium  AFFECTED VERSIONS -----------------  - Affected versions: libcurl to and including - Not affected versions: libcurl < and libcurl >=  Also note that libcurl is used by many applications, and not always advertised as such.  THE SOLUTION ------------  The internal function is rewritten to instead and more appropriately use an ordinary loop instead of the recursive approach. This way, the stack use will remain the same no matter how many files that are skipped.  A [fix for  RECOMMENDATIONS --------------  We suggest you take one of the following actions immediately, in order of preference:    A - Upgrade curl to version    B - Disable FTP wildcard use (`CURLOPT_WILDCARDMATCH`)    C - Make sure your `CURLOPT_CHUNK_BGN_FUNCTION` callback doesn't do multiple skips.  TIMELINE --------  This issue was first reported to the curl project on November 27,  This advisory was posted on December 9th  CREDITS -------  This issue was initially reported by xnynx on GitHub. Daniel took it to the security team immediately. Patch by Daniel Stenberg.  Thanks a lot!  --     / daniel.haxx.se   | Commercial curl support up to is available!   | Private help, bug fixes, support, ports, new features   | https://www.wolfssl.com/contact/  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      