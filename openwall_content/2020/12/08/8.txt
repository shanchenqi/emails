  oss-security - Re: Bugs found by Cryptofuzz - some missing CVEs or  too low impact for CVE?            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 8 Dec From: Seth Arnold <seth.arnold@...onical.com> To: Robert Watson <robertcwatson1@...il.com> Cc: oss-security@...ts.openwall.com Subject: Re: Bugs found by Cryptofuzz - some missing CVEs or  too low impact for CVE?  On Tue, Dec 08, at Robert Watson wrote: > Question from a retired programmer but security novice... Since fuzzing is > used to find bugs in other programs, doesn't it need to be held to a bit > higher standard in order to maintain credibility?  The output from fuzzers is a large body of inputs (or programs, in the case of syzkaller) that directly demonstrate the problem in the program being fuzzed.  The generated inputs can be used separately from the fuzzing framework. Many are only useful when combined with sanitizers, or debug builds, or similar efforts to turn errors into something visible (corrupting the stack may not be visible directly, for example). It's unfortunate that this step is required, and I have seen maintainers not interested in taking fixes that are "only visible with ubsan", for example, but this attitude is thankfully rare.  Developers can keep these example inputs for their test suites, CI / CD systems, etc, and make sure that their programs don't fail on these inputs in the future, too.  This does put a lot of trust into the sanitizers but compilers tend to have pretty good test suites. Afterall, they, too, are fuzzed, and automated tooling like csmith, creduce, delta, cvise, and probably more, can help find minimal test cases.  The most difficult part of working with fuzzers, in my opinion, is that it can take a long time to figure out the cause of a crash or sanitizer alert. Often finding the causes, or to propose a fix, takes longer than finding issues.  Thanks  Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      