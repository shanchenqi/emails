  oss-security - [SECURITY ADVISORY] libcurl: wrong connect-only connection            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Wed, 19 Aug (CEST) From: Daniel Stenberg <daniel@...x.se> To: curl security announcements -- curl users <curl-users@...l.haxx.se>,         curl-announce@...l.haxx.se,         libcurl hacking <curl-library@...l.haxx.se>,         oss-security@...ts.openwall.com Subject: [SECURITY ADVISORY] libcurl: wrong connect-only connection  libcurl: wrong connect-only connection ======================================  Project curl Security Advisory, August 19th -  VULNERABILITY -------------  An application that performs multiple requests with libcurl's multi API and sets the `CURLOPT_CONNECT_ONLY` option, might in rare circumstances experience that when subsequently using the setup connect-only transfer, libcurl will pick and use the wrong connection - and instead pick another one the application has created since then.  `CURLOPT_CONNECT_ONLY` is the option to tell libcurl to not perform an actual transfer, only connect. When that operation is completed, libcurl remembers which connection it used for that transfer and "easy handle". It remembers the connection using a pointer to the internal `connectdata` struct in memory.  If more transfers are then done with the same multi handle before the connect-only connection is used, leading to the initial connect-only connection to get closed (for example due to idle time-out) while also new transfers (and connections) are setup, such a *new* connection might end up getting the exact same memory address as the now closed connect-only connection.  If after those operations, the application then wants to use the original transfer's connect-only setup to for example use `curl_easy_send()` to send raw data over that connection, libcurl could **erroneously** find an existing connection still being alive at the address it remembered since before even though this is now a new and different connection.  The application could then accidentally send data over that connection which wasn't at all intended for that recipient, entirely unknowingly.  We are not aware of any exploit of this flaw.  INFO ----  This bug has existed at least since commit first shipped in curl  This flaw cannot trigger for users of the curl tool but only for applications using libcurl and the `CURLOPT_CONNECT_ONLY` option.  The flaw only happens if the exact same memory address is re-used again for the new connection as for the original connect-only connection.  The Common Vulnerabilities and Exposures (CVE) project has assigned the name to this issue.  Expired Pointer Dereference  Severity: Low  AFFECTED VERSIONS -----------------  - Affected versions: libcurl to and including - Not affected versions: libcurl < and libcurl >=  THE SOLUTION ------------  A [fix for  RECOMMENDATIONS --------------  We suggest you take one of the following actions immediately, in order of preference:    A - Upgrade curl to version    B - Apply the patch on your curl version and rebuild    C - Do not use `CURLOPT_CONNECT_ONLY`  TIMELINE --------  This issue was first reported to the curl project on July 31,  This advisory was posted on August 19th  CREDITS -------  This issue was reported by Marc Aldorasi. Patched by Daniel Stenberg.  Thanks a lot!  --     / daniel.haxx.se | Commercial curl support up to is available!                    | Private help, bug fixes, support, ports, new features                    | https://www.wolfssl.com/contact/  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      