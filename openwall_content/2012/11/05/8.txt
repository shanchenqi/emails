  oss-security - TTY handling when executing code in different lower-privileged context  (su, virt containers)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Mon, 05 Nov From: halfdog <me@...fdog.net> To: oss-security@...ts.openwall.com Subject: TTY handling when executing code in different lower-privileged context  (su, virt containers)  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  During programming experiments I found some class of vulnerabilities [1], that seem to be rediscovered again from time to time, but since attack value is questionable, it was not fixed yet.  The basic idea is, that a program started from interactive shell can access the TTY and also inject input data using TIOCSTI ioctl. This is not an issue when the program is running in the same execution context, but may allow privilege escalation when the program switches to another user context without closing the TTY file descriptors. In that case a malicious program running in the lower privileged context can inject commands to be executed by the interactive shell running with higher privileges.  Test were made using 'su' from root to 'test' user, which is vulnerable to that kind of attack.  Also entering a virtualization container is a problematic context switch. 'vserver enter' [2] was found to be vulnerable for command execution outside container while 'lxc-console' was not.   At least with 'su', this vulnerability is known for years and still not fixed. In my opinion this is because the fix is not quite trivial and the proposed attack method requires root running interactive shell switching to a problematic user account (user interaction). So the CVSS for this is quite low.   I would like to propose following "fix" for this problem: Modification of man-page of su making this a known problem or feature, not a bug.  "Using su to execute commands as an untrusted user from an interactive shell may allow the untrusted user to escalate privileges to the user running the shell."   For linux-vserver enter I would be interested in opinions if application should be fixed or documentation update is sufficient. - From my point of view, fix would be more appropriate.   In both cases, paranoid administrators might decide to use /dev/null as stdin/stdout/stderr when just starting non-interactive programs in different context, while they could replace the privileged shell with exec when interactive context switch is needed (no shell, no escalation).  Any opinions on that?  hd  [1] [2] http://linux-vserver.org/  - --  http://www.halfdog.net/ PGP: AE98 B91F FE88  2BD8 feed a bee -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux)  =7FEy -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      