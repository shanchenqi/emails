  oss-security - Re: Re: CVE Request - Zope / Plone: Multiple vectors  corrected within fix            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 09 Nov From: Matthew Wilkes <matthew.wilkes@...ne.org> To: cve-assign@...re.org CC: oss-security@...ts.openwall.com, jpokorny@...hat.com,   security@...ne.org Subject: Re: Re: CVE Request - Zope / Plone: Multiple vectors  corrected within fix  Hi all,  >> It looks like some of these can be CVE merged, e.g. 14 and 15, 1 and >> 5, can you confirm that these should not be merged? > > Thanks for constructing this comprehensive table, but please do not > merge 14 and 15, or 1 and 5.  I agree. It's our opinion that these are distinct flaws, and we would  prefer to keep them tracked independently.  > CVE assignment by MITRE most often has merges when the available > information suggests one of these two situations: > >    A. Flaw types that have been used for many years and are thought to >       be well understood. At present, a large fraction of our merges >       are for XSS, SQL injection, CSRF, buffer overflows, integer >       overflows, use-after-free issues, and directory traversal. >       However, a merge can occur correctly for any flaw type.  Indeed, we do like to keep similar flaws with very different causes  separate, though. In the particular case of 1/5 and we don't see  any similarities, but in general we've tried hard here to request CVEs  in a way that accurately reflects discrete vulnerabilities in the stack.  > At this point in the history of CWE, a discloser's choice of the same > CWE identifier for two different bugs might not be a strong indication > that a CVE merge should occur.  The CWE dictionary is huge, I would very much appreciate any feedback  anyone can give me on the appropriateness of my choices here. I have  been working on a Plone specific CWE dictionary but it's slow going.  > For example, some CVE consumers don't like situations in > which a vendor publishes multiple disclosure documents that explain > different aspects of the same CVE.  We will bow to your advice here. If you tell us that our merge  recommendations are poor we will make sure that we don't issue multiple  guidance documents in future. For now, our list reflects our best  understanding of the CVE guidance documents.  > 14 and 15: One might argue that these are different because 14 is > about algorithmic complexity but 15 isn't.  Indeed, I did consider here, but is one of our go-to choices  as it's a common error in Zope. I think, if I had to come down one side  or another, then 15 is complexity whereas 14 is allowing users to  circumvent caching on an expensive function. They are both similar  outcomes, in that they're expensive pages, but for very different reasons.  > 01 and 05: One might argue that these are different because 05 is > about incomplete security declarations but 01 isn't.  Indeed. Also, 05 is a AC:H Au:S whereas 01 is AC:L Au:N. 05 allows an  escalation of privileges in the sandbox whereas 01 allows unauthorised  authoring of code which happens to only ever be run in a higher  privilege set. 01 is a write-once persistent single statement whereas 05  is an editable file with multiple statements available. The privilege  set that 01 escalates to is the un-escalated set for 05.  Matt  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      