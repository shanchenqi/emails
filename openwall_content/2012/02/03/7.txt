  oss-security - Re: CVE Request Linux TCP stack could accept  invalid TCP flag combinations            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 03 Feb From: Kurt Seifried <kseifried@...hat.com> To: oss-security@...ts.openwall.com CC: Marcus Meissner <meissner@...e.de> Subject: Re: CVE Request Linux TCP stack could accept  invalid TCP flag combinations  On AM, Marcus Meissner wrote: > Hi, >  > After a customer query likely coming from erroneous Security Scanner output, >  > this issue from has no CVE id yet as far as I see: >  > >  > It describes a problem where firewalls might let some TCP flags combinations > pass (e.g. all with RST flag set) and the OS (e.g. Linux) stack would in turn > accept a TCP session it might not have accepted otherwise. >  > The protection added in Linux is checking for the RST (reset) flag > when a SYN packet is received, which was I think the main attack scenario. >  > The relevant part of the patch is: >  > @@ @@ >                 if(th->ack) >                         return 1; >  > +               if(th->rst) > +                       goto discard; > + >                 if(th->syn) { >                         if(tp->af_specific->conn_request(sk, skb) < 0) >                                 return 1; >  >  > The check still exists in current mainline git, so the issue is still fixed. >  > Ciao, Marcus  Nice, a cert KB with a picture, never seen that before.  Please use for this issue.  --  Kurt Seifried Red Hat Security Response Team (SRT)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      