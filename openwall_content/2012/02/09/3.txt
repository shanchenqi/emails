  oss-security - Re: Linux procfs infoleaks via self-read by a  SUID/SGID program (was: Linux kernel: proc: fix Oops on invalid  /proc/<pid>/maps access)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 9 Feb From: "Jason A. Donenfeld" <Jason@...c4.com> To: Djalal Harouni <tixxdz@...ndz.org> Cc: oss-security@...ts.openwall.com Subject: Re: Linux procfs infoleaks via self-read by a  SUID/SGID program (was: Linux kernel: proc: fix Oops on invalid  /proc/<pid>/maps access)  On Thu, Feb 9, at Djalal Harouni <tixxdz@...ndz.org> wrote: > > BTW lseek() on seq files will only succeed on /proc/self/ files. > > chsh which is a setuid on most of the distros will read stdin and print > errors to stderr, this is why it can be used as a target program, I did > not search but if there is another program then it may be our 'winner'.  This issue is actually somewhat similar to the /proc/pid/mem issue a few weeks ago. Seems like Linus' logic from this commit [1] should be applied to the rest of proc.    > $ for i in $(seq \ >  do ./procfs_leak_2 /usr/bin/chfn /proc/self/smaps $i; done > Password: chfn: PAM authentication failed > Password: chfn: PAM authentication failed > Password: chfn: PAM authentication failed > Password: chfn: PAM authentication failed > Password: chfn: PAM authentication failed > Password: chfn: PAM authentication failed > Password: chfn: PAM authentication failed > Password: chfn: PAM authentication failed > Password: Changing the user information for tixxdz > Enter the new value, or press ENTER for the default >        Full Name: tixxdz >                Room Number [er]:       Work Phone []:  Home Phone []: >                chfn: invalid room number: rw-p >                >                /usr/bin/chfn' > Password: chfn: PAM authentication failed > Password: chfn: PAM authentication failed > > > This was tested on Ubuntu, Debian default setuid 'chfn'. >  Awesome! Nice work.  > You can do this to leak maps of libc... since the lseek() on /proc/self > will pass the ptrace_may_access() check.   > Solar as I've said above I believe that there is a compilcated problem > about these files, should I discuss them here or just finish my patches > and try to discuss them on lkml ? >  Let me know if you move it to LKML -- I'm curious to see how this pans out.   > Thanks. > > > Alexander >   [1]  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      