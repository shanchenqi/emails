  oss-security - Re: fix to            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 12 Apr From: Kurt Seifried <kseifried@...hat.com> To: oss-security@...ts.openwall.com CC: akuster <akuster@...sta.com>, "Steven M. Christey" <coley@...us.mitre.org> Subject: Re: fix to  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  On PM, Kurt Seifried wrote: > On PM, akuster wrote: >> Hello, >> >> Was there a CVE assigned to commit >> >> Commit ("ext4: avoid divide by >> zero when trying to mount a corrupted file system") fixes >> by performing a sanity check on s_log_groups_per_flex, since it can be >> set to a bogus value by an attacker. >> >> - Armin >  > I assume you are talking about this: >  > >  > ================================================ > Commit ("ext4: avoid divide by > zero when trying to mount a corrupted file system") fixes > by performing a sanity check on s_log_groups_per_flex, since it can be > set to a bogus value by an attacker. >  > sbi->s_log_groups_per_flex = sbi->s_es->s_log_groups_per_flex; > groups_per_flex = 1 << sbi->s_log_groups_per_flex; >  > if (groups_per_flex < 2) { ... } >  > This patch fixes two potential issues in the previous commit. >  > 1) The sanity check might only work on architectures like PowerPC.  > On x86, 5 bits are used for the shifting amount.  That means, given > a large s_log_groups_per_flex value like 36, groups_per_flex = 1 << > 36 is essentially 1 << 4 = 16, rather than 0.  This will bypass the > check, leaving s_log_groups_per_flex and groups_per_flex > inconsistent.  Please use for this issue (An incomplete fix for allows this issue to be exploited on PPC).  > 2) The sanity check relies on undefined behavior, i.e., oversized shift. > A standard-confirming C compiler could rewrite the check in unexpected > ways.  Consider the following equivalent form, assuming groups_per_flex > is unsigned for simplicity.  It doesn't appear that this issue is security per se, so not assigning a CVE (unless someone shows otherwise).  > groups_per_flex = 1 << sbi->s_log_groups_per_flex; > if (groups_per_flex == 0 || groups_per_flex == 1) { >  > We compile the code snippet using Clang 3.0 and GCC 4.6.  Clang will > completely optimize away the check groups_per_flex == 0, leaving the > patched code as vulnerable as the original.  GCC keeps the check, but > there is no guarantee that future versions will do the same. >  > Signed-off-by: Xi Wang <xi.wang@...il.com> > Signed-off-by: "Theodore Ts'o" <tytso@....edu> > Cc: stable@...r.kernel.org > ================================================ >  > What specific do you want a CVE assigned for? >  > For #1 I can see a CVE of the "a previous patch didn't completely fix > the issue, yada yada" type. >  > For #2 I'm not sure how we handle something like a compiler possibly > mangling code so that an issue is introduced (is that a compiler > problem? a code problem? the intersection of both? Steve: can I get a > comment/referees decision here =) >    - --  Kurt Seifried Red Hat Security Response Team (SRT) PGP: A90B 66BF -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux) Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/  uTzxa6hAobArJYndJxRW =z2tU -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      