  oss-security - Re: Stack-based buffer overflow in musl libc  and earlier            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Wed, 18 Apr From: Kurt Seifried <kseifried@...hat.com> To: oss-security@...ts.openwall.com CC: Rich Felker <dalias@...ifal.cx>, musl@...ts.openwall.com Subject: Re: Stack-based buffer overflow in musl libc  and earlier  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  On AM, Rich Felker wrote: > Name: Stack-based buffer overflow in musl libc and earlier  > Software: musl and earlier Software link: > http://www.etalabs.net/musl Vulnerability Type: Buffer overflow  > Severity: Critical >  > Software Description: >  > musl is an implementation of the C/POSIX standard library for  > Linux-based systems. musl aims to be lightweight, fast, simple, > free, and correct in the sense of standards-conformance and safety, > and to meet requirements ranging from embedded systems and initrd > images to desktop workstations, mobile devices, and high-load > servers. Several build-from-source mini-distributions use musl as > their C library. >  > Vulnerability Details: >  > musl's implementation of [v]fprintf swaps in a temporary FILE > buffer on the stack when writing to unbuffered streams such as > stderr. Under certain conditions where the buffer end pointer has > already been set to the address of the internal degenerate buffer > prior to the call to [v]fprintf, stdio internals can fail to bound > access to the temporary buffer. Large writes will then overflow the > temporary buffer and clobber stack contents, including potentially > the return address. Any program linked to musl which includes > potentially-large data from untrusted sources in its output to > stderr or other unbuffered streams is affected. >  > Solution: >  > The vulnerability has been fixed in git, and the fix is to be > included in the upcoming release. A patch which applies > cleanly to all recent releases is available on the musl mailing > list: >  > >  > Credits: >  > This vulnerability was discovered and fixed by the author (myself,  > Rich Felker) while debugging a crash occurring in test code > written for musl by Luka Marčetić as part of GSoC  Please use for this issue.  - --  Kurt Seifried Red Hat Security Response Team (SRT) PGP: A90B 66BF  -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux) Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/  =Zkg2 -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      