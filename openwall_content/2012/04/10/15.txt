  oss-security - Re: gajim insecure file creation when using latex            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Tue, 10 Apr From: Kurt Seifried <kseifried@...hat.com> To: oss-security@...ts.openwall.com, asterix@...aule.org Subject: Re: gajim insecure file creation when using latex  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  On PM, Nico Golde wrote: > Hi, Gajim seems to support latex in instant messages. This is > implemented by dumping the content to a .tex template on disk and > converting the result to an image. To prevent security problems, it > is at least checking the input for dangerous latex commands such as > \input (as far as I can see nothing is missing from this list). >  > However, it fails to create this temporary file in a secure > manner: From src/common/latex.py: 60 def get_tmpfile_name(): 61 > random.seed() 62         int_ = random.randint(0, 63 > return os.path.join(gettempdir(), 'gajimtex_' + int_.__str__())  Sigh. And this is why people should use mkstemp().  Please use for this issue.    > ... def latex_to_image(str_):         result = None > exitcode = 0         try:                 bg_str, > fg_str = gajim.interface.get_bg_fg_colors()         except: > # interface may not be available when we test latext at startup > bg_str, fg_str = 'rgb 1.0 1.0 1.0', 'rgb 0.0 0.0 0.0' > # filter latex code with bad commands         if > check_blacklist(str_):                 # we triggered the > blacklist, immediately return None                 return None  >         tmpfile = get_tmpfile_name()         # build > latex string         write_latex(os.path.join(tmpfile + > '.tex'), str_) and finally: 65 def write_latex(filename, str_): 66 > texstr = > '\\documentclass[12pt]{article}\\usepackage[dvips]{graphicx}' 67 > texstr += '\\usepackage{amsmath}\\usepackage{amssymb}' 68 > texstr += '\\pagestyle{empty}' 69         texstr += > '\\begin{document}\\begin{large}\\begin{gather*}' 70         texstr > += str_ 71         texstr += > '\\end{gather*}\\end{large}\\end{document}' 72 73         file_ = > open(filename, "w+") 74         file_.write(texstr) 75 > file_.flush() 76         file_.close() >  > I think this is of pretty minor severity even though it still > allows a local attacker to overwrite files the victim has write > access to with latex content by using symlinks and latex IMs are > used. >  > Cheers Nico   - --  Kurt Seifried Red Hat Security Response Team (SRT) PGP: A90B 66BF -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux) Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/  NqBB0+dfoRMLw8OLwY+n =Yfv4 -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      