  oss-security - Re: Re: CVE request: pid namespace leak in kernel 3.0 and 3.1            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Sun, 22 Apr From: Marcus Meissner <meissner@...e.de> To: oss-security@...ts.openwall.com Cc: Eugene Teo <eugeneteo@...nel.sg>, security@...nel.org, 	jeffm@...e.com, Sukadev Bhattiprolu <sukadev@...ibm.com>, 	Serge Hallyn <serge.hallyn@...onical.com>, 	Pavel Emelyanov <xemul@...nvz.org> Subject: Re: Re: CVE request: pid namespace leak in kernel 3.0 and 3.1  On Fri, Apr 20, at Eric W. Biederman wrote: > Eugene Teo <eugeneteo@...nel.sg> writes: >  > >> So we know what is holding the pid namespace reference. > >> > >> Additional thoughts. > >> > >> Does echo 3 > /proc/sys/vm/drop_caches clear up the issue? > > > > No. > > > >> Is there a corresponding task_struct leak? > > > > Yes. >  > Hmm.  The zombies are reaped?  >  > I am scratching my head perhaps because I am looking at the current code > but I don't seem to see how a task that pins a pid can get past > release_task (the zombie reaper) and in particular past in release > __exit_signal() which calls unhash_process(). >  > The simple test to see if we have made it past unhash_process is to see > if you can see the zombie processes. >  > > I'm helping to provide more information. >  > You are.  Thank you for looking to see what the symptoms are.  Jeff Mahoney did locate the introducer and the fix yesterday night ...    Introduced in (in Linux 3.1 timeframe)  Date:   Tue Jul 19      VFS : mount lock scalability for internal mounts  And the fixed in Linux 3.2:  commit Author: Al Viro <viro@...iv.linux.org.uk> Date:   Thu Dec 8      procfs: fix a vfsmount longterm reference leak      kern_mount() doesn't pair with plain mntput()...   We (SUSE) did backport the buggy patch to our SLE11 SP2 Linux 3.0 kernel, which made it also show up there.  So mainline kernels affected: "Linux Kernel 3.1"  Ciao, Marcus  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      