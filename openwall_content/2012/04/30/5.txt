  oss-security - Re: weak use of crypto in python-elixir can lead to  information disclosure (CVE and peer review request)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 30 Apr From: Vincent Danen <vdanen@...hat.com> To: oss-security@...ts.openwall.com Subject: Re: weak use of crypto in python-elixir can lead to  information disclosure (CVE and peer review request)  * Florian Weimer wrote:  >> CFB mode is only secure if the the IV is unpredictable and different >> for every message. > >There are a few additional requirements.  Without some form of message >authentication, chosen-ciphertext attacks are still possible even with >a random IV.  I'm no crypto expert, so I don't have a comment on this (although I did note this message in our bug, so that those smarter than I can look at it).  >> Because of this, and because the encryption key is shared for each >> database table (fields and rows), the same plaintext prefix is >> always encrypted to an identical and corresponding ciphertext >> prefix.  As a result, an attacker with access to the database could >> figure out the plaintext values of encrypted text. > >And you can group by encrypted column values in the database.  That's >why I'm not sure if it's actually possible to address this issue in a >satisfying manner.  So the encryption can be more fine-grained than just per-table?  You can also do it per-column?  If that's the case, this does sound a lot uglier to deal with.  --  Vincent Danen / Red Hat Security Response Team   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      