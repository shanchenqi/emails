  oss-security - Re: glibc crypt(3), crypt_r(3), PHP crypt() may use alloca()            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 30 Mar From: Solar Designer <solar@...nwall.com> To: Jeff Law <law@...hat.com> Cc: oss-security@...ts.openwall.com Subject: Re: glibc crypt(3), crypt_r(3), PHP crypt() may use alloca()  On Fri, Mar 30, at Jeff Law wrote: > On PM, Solar Designer wrote: > >On Fri, Mar 30, at Jeff Law wrote: > >>I think the right way to handle the return value is to return NULL for > >>these cases.  It's posix complaint and the glibc crypt routines already > >>return NULL for exceptional conditions. > > > >Do you realize that plenty of services that use crypt() - likely the > >majority of them, even - don't handle NULL returns, so they will > >segfault when these conditions are triggered? > Then, IMHO,  the app is clearly broken.  Crypt has been defined as  > potentially returning NULL and at least for glibc has done so since the  > introduction of if the app fails to check for that, then  > the app needs to be fixed.  Sure.  I am not arguing against fixing the apps (in fact, I am planning to fix one of mine - code originally written in or so - regardless of what glibc does on this), but I am arguing for not having glibc expose the problem.  Considering the age of Unix, SUSv2 and are fairly recent (I think this may be when the NULL returns were first standardized), and glibc's SHA-crypt is very young.  It still makes sense to support apps older than that, including without changes.  > I don't speak for glibc on this issue, so if you want to raise it on  > libc-alpha, go for it.  I was hoping that you would take care of that. ;-)  Anyway, given DragonFly's decision, various other systems returning NULL on various occasions (inconsistently), and your comment about glibc doing that for a while, I no longer have a strong opinion on the matter.  We will likely continue to do the "*0" / "*1" thing in Owl (our distro that uses glibc with patches), though.  Alexander  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      