  oss-security - Re: CVE-Request taglib vulnerabilities            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 26 Mar From: Ludwig Nussel <ludwig.nussel@...e.de> To: oss-security@...ts.openwall.com Subject: Re: CVE-Request taglib vulnerabilities  Zubin Mithra wrote: > On Wed, Mar 21, at PM, Kurt Seifried <kseifried@...hat.com>wrote: >  >> On AM, Ludwig Nussel wrote: >>> Zubin Mithra wrote: >>>> [...] >>>> The issues which are present in the latest "release" but not in the >> current >>>> development head were :- >>>> >>>> [3] Lack of sanity checks of fields which were read, and were used for >>>> allocating memory; crafted files would lead of application crash. >>> >>> Not an issue according to upstream: >>> >> >> Shouldn't it simply say "file to large" or "unable to allocate blah" >> something rather than crashing? I assume by "large" file the file >> doesn't actually need to be large, just the header information needs to >> claim it is large? >> >  > Yes, the file does not need to be large, it just needs to have a crafted > header. >  > On investigating the issue further, discussing with a developer Lukas > Laninsky and providing PoC's, we had confirmed that the root issue was an > Integer overflow - which would cause a large allocation and crash the > application. >  > The changeset that corrects it can be found here => > >  >> >>>> [4] A one bit change in a working ogg file would cause a thread to loop >>>> infinitely. >>> >>> >>> >> >> >> Has this been confirmed? Does the looping thread actually cause a DoS, >> simply slow down the application a bit, or? >> >  > Yes, it just causes a thread to cause an infinite loop and does not cause > an application crash.  So both issues qualify as security issue and CVE assignment then, right?  cu Ludwig  --   (o_   Ludwig Nussel  //\  V_/_  http://www.suse.de/ SUSE LINUX Products GmbH, GF: Jeff Hawn, Jennifer Guild, Felix ImendĂśrffer, HRB (AG NĂźrnberg)   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      