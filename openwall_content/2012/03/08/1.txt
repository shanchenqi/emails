  oss-security - Re: CVE-request: Kish Guest Posting Plugin for  WordPress File Upload Remote PHP Code Execution            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Thu, 8 Mar From: Henri Salo <henri@...v.fi> To: oss-security@...ts.openwall.com, plugins@...dpress.org Subject: Re: CVE-request: Kish Guest Posting Plugin for  WordPress File Upload Remote PHP Code Execution  On Tue, Mar 06, at Kurt Seifried wrote: > On AM, Henri Salo wrote: > > Can we assign CVE-identifier for this security vulnerability, thanks. > >  > > > > > > > > > >  > > Plugin is disabled in WordPress (doesn't show up in http://wordpress.org/extend/plugins/), but SVN can be found from here: http://plugins.svn.wordpress.org/kish-guest-posting/trunk/ > >  > > File http://plugins.svn.wordpress.org/kish-guest-posting/trunk/readme.txt says: > >  > > """ > > = 1.2 = > > security update for Uploadify Script > > """ > >  > > But I haven't tested (yet) if that is valid fix for the vulnerability. > >  > > - Henri Salo >  > Please use for this issue. >  > --  > Kurt Seifried Red Hat Security Response Team (SRT)  For curious people this is from SVN trunk:  ------------------------------------------------------------------------ | kiaso | (Sat, 02 Jul | 1 line  Uploadify.php security issue fixed ------------------------------------------------------------------------ | kiaso | (Sat, 02 Jul | 1 line  Uploadify.php security issue fixed ------------------------------------------------------------------------  Index: uploadify/scripts/uploadify.php =================================================================== --- uploadify/scripts/uploadify.php     (revision +++ uploadify/scripts/uploadify.php     (revision @@ -1,3 +1,4 @@ +<<<<<<< .mine  <?php  /*  Uploadify @@ @@         $tempFile = $_FILES['Filedata']['tmp_name'];         $targetPath = $_SERVER['DOCUMENT_ROOT'] . $_REQUEST['folder'] . '/';         $targetFile =  str_replace('//','/',$targetPath) . $_FILES['Filedata']['name']; +         // $fileTypes  = str_replace('*.','',$_REQUEST['fileext']);         // $fileTypes  = str_replace(';','|',$fileTypes);         // $typesArray = split('\|',$fileTypes); @@ @@         // if (in_array($fileParts['extension'],$typesArray)) {                 // Uncomment the following line if you want to make the directory if it doesn't exist                 // mkdir(str_replace('//','/',$targetPath), true); +       // Define allowed extensions +       $allowable = array ( 'png', 'gif', 'jpg', 'jpeg' ); +       $fileext = strtolower(substr( $_FILES['Filedata']['name'], -3 )); + +       // Assume evil upload +       $noMatch = 0; + +       // Give it a try with this tiny extensionckeck +       foreach( $allowable as $ext ) { +               if ( strcasecmp( $fileext, $ext ) == 0 ) { +                       $noMatch = 1; +               } +       } +       if(!$noMatch){ // People are bad. I told you... +               echo "This file is not allowed..."; +               exit(); +       } +       else { +               move_uploaded_file($tempFile,$targetFile); +               echo str_replace($_SERVER['DOCUMENT_ROOT'],'',$targetFile); +       }  + +       // } else { +       //      echo 'Invalid file type.'; +       // } +} +?>=======  In my opinion this is not a proper fix for this security vulnerability as this doesn't detect the filetype. This code only assumes file is valid if filename suffix matches item from allowable array. I do not know how to contact developer of this plugin. I could even provide a working patch for this vulnerability.  - Henri Salo  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      