  oss-security - Re: Geany IDE not escaping filenames during compilation / build - a security issue or not?            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Thu, 13 Dec From: Peter Bex <Peter.Bex@...all.nl> To: oss-security@...ts.openwall.com Subject: Re: Geany IDE not escaping filenames during compilation / build - a security issue or not?  On Thu, Dec 13, at Kurt Seifried wrote: > On AM, Simon McVittie wrote: > > If shell syntax is not specifically needed, it would be even better > > to use a mechanism not involving parsing shell syntax, like > > posix_spawn(), GLib's g_spawn_async() or Python's os.spawn* family, > > to launch the compiler (analogous to using prepared statements to > > avoid ever having to think about SQL escaping or SQL injection). >  > If anyone knows similar functions/etc for other programming languages > please let me know off list so I can compile a list of these and then > post them for future reference. Thanks!  Chicken Scheme (www.call-cc.org) has multi-argument versions of the process family of procedures which map to the exec() family. http://wiki.call-cc.org/manual/Unit%20posix#processes These are a bit tricky, since the one-argument versions fall back to system()-like functionality.  I consider this dangerous.  There's also the scsh-process egg, which is much more fool-proof: http://wiki.call-cc.org/egg/scsh-process It's modeled after SCSH, the Scheme Shell.  A few other Scheme implementations (at least Guile and Scheme48 iirc) also have a version of this safe notation.  Cheers, Peter Bex --  http://sjamaan.ath.cx -- "The process of preparing programs for a digital computer  is especially attractive, not only because it can be economically  and scientifically rewarding, but also because it can be an aesthetic  experience much like composing poetry or music." 							-- Donald Knuth  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      