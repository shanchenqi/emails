  oss-security - Django Django and Django 1.5 beta 2 Security Update            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Mon, 17 Dec From: Kurt Seifried <kseifried@...hat.com> To: "oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com> Subject: Django Django and Django 1.5 beta 2 Security Update  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  So a week ago Django released Django and Django 1.5 beta 2 as a security update. I have not assigned these a CVE since they appear to be security hardening, and not addressing a direct security threat (but I could be wrong so I'm posting this).  Change #1: Host header poisoning  This implements white list filtering, which is almost always better than black list filtering:  Hostnames must consist of characters [A-Za-z0-9] plus hyphen ('-') or dot ('.'). IP addresses -- both IPv4 and IPv6 -- are permitted. Port, if specified, is numeric.  Change #2: Redirect poisoning  They added a new function "django.utils.http.is_safe_url" and added it to the spots within Django's code that would benefit from it.  A new utility function, django.utils.http.is_safe_url, is added; this function takes a URL and a hostname, and checks that the URL is either relative, or if absolute matches the supplied hostname. All of Django's own built-in views -- primarily in the authentication system -- which allow user-supplied redirect targets now use is_safe_url to validate the supplied URL.  Over all these are very good changes, but they are not security fixes per se as stated above, however if anyone is aware of attacks/vulnerabilities pertaining to these changes please let me know and I iwll assign CVEs.  - --  Kurt Seifried Red Hat Security Response Team (SRT) PGP: A90B 66BF  -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux)  oSUzUhaTLx1TgkcxSBwQ =ZHlN -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      