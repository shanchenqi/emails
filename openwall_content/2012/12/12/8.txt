  oss-security - gksu-polkit privileged code execution with  unprivileged credentials            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Wed, 12 Dec From: Vincent Danen <vdanen@...hat.com> To: oss-security@...ts.openwall.com Subject: gksu-polkit privileged code execution with  unprivileged credentials  This is a heads-up on a flaw reported to us regarding gksu-polkit.  This was sent to the linux-distros@ mailing list last week.  Miroslav Trmac of Red Hat reported that gksu-polkit ships with an extremely permissive PolicyKit policy configuration file.  Because gksu-polkit allows a user to execute a program with administrative privileges, and because the default allow_active setting is "auth_self" rather than "auth_admin", any local user can use gksu-polkit to execute arbitrary programs (like a bash shell) with root privileges.  For example:  $ cat foo.sh #! /bin/bash id -a # not just gksu-polkit id -a because gksu-polkit tries to interpret the # -a # this prompts for user's password only $ gksu-polkit /home/user/foo.sh uid=0(root) gid=0(root) groups=0(root) context=system_u:system_r:initrc_t:s0   (As an aside, I did some peeking because there was some discussion as to whether or not this was intended behaviour.  It does not seem as though gksu-polkit is _intended_ to grant root access to every local user, even though they need to actually be at the computer (I've not tested whether or not this can be exploited via a remote X session, but it's possible). Even if this is not remotely exploitable, we do tend to require administrator authentication by local users (via su) or an administrator to grant such privileges (via sudo), so to me this is definitely a flaw).   References:   --  Vincent Danen / Red Hat Security Response Team   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      