  oss-security - Re: Isearch insecure temporary files            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 21 Dec From: Kurt Seifried <kseifried@...hat.com> To: oss-security@...ts.openwall.com CC: David Holland <dholland-oss-security@...bsd.org> Subject: Re: Isearch insecure temporary files  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  On AM, David Holland wrote: > NetBSD pkgsrc ships an old text search package called Isearch, > which I found tonight (in the course of making it compile with a > modernish C++ compiler) to contain garden-variety /tmp races. >  > Does anyone else ship it? I don't think this is worth a CVE unless  > someone does; the package appears to be dead upstream.  This is similar to  Ideally we need some way to mark software as dead/unsafe/don't use. I don't know what the answer is though (does someone maintain a blacklist? who decides? etc.).  > for reference; the relevant portions > of the patches cited follow.  Yeah that's pretty classic /tmp vulns. Please use for this issue.  > --- +++ > doctype/anzmeta.cxx @@ @@ ANZMETA::Present (const > RESULT& ResultRe } else { STRING s_cmd; //CHR* c_cmd; -	      CHR > *TmpName; +	      CHR TmpName[64]; +	      int fd; >  > -	      TmpName = tempnam("/tmp", "mpout"); +	      strcpy(TmpName, > "/tmp/mpoutXXXXXX"); +	      fd = mkstemp(TmpName); +	      if (fd > < 0) { +		 /* +		  * Apparently failure is not an option here, so + > * proceed in a way that at least won't be insecure. +		  */ + > strcpy(TmpName, "/dev/null"); +	      } +	      else { + > close(fd); +	      } >  > cout << "[ANZMETA::Present] no docs found, so build Fly cmd" << > endl; >  > --- +++ > doctype/fgdc.cxx @@ @@ FGDC::Present (const > RESULT& ResultRecor return; } else { STRING s_cmd; -	      CHR > *TmpName; - -	      TmpName = tempnam("/tmp", "mpout"); +	      CHR > TmpName[64]; +	      int fd; >  > +	      strcpy(TmpName, "/tmp/mpoutXXXXXX"); +	      fd = > mkstemp(TmpName); +	      if (fd < 0) { +		 /* +		  * Apparently > failure is not an option here, so +		  * proceed in a way that at > least won't be insecure. +		  */ +		 strcpy(TmpName, "/dev/null");  > +	      } +	      else { +		 close(fd); +	      } +  > BuildCommandLine(mpCommand, HoldFilename, RecordSyntax, TmpName, > &s_cmd); system(s_cmd); --- > +++ src/marc.cxx @@ @@ > MARC::GetPrettyBuffer(STRING *Buffer) { /* // Cheese, cheese, > cheese;-) -  char *tempfile = tempnam("/tmp", "marc"); +  char > tempfile[32]; +  strcpy(tempfile, "/tmp/marcXXXXXX"); +  int tempfd > = mkstemp(tempfile); +  if (tempfd < 0) { +    *Buffer = > "MARC::GetPrettyBuffer() failed to open temp file"; +    return; + > } FILE *fp; -  if((fp = fopen(tempfile, "w")) == NULL) { +  if((fp > = fdopen(tempfd, "w")) == NULL) { *Buffer = > "MARC::GetPrettyBuffer() failed to open temp file"; return; } >    - --  Kurt Seifried Red Hat Security Response Team (SRT) PGP: A90B 66BF  -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux)  =r14p -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      