  oss-security - Re: libdbus fix            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Mon, 17 Sep From: Sebastian Krahmer <krahmer@...e.de> To: oss-security@...ts.openwall.com Subject: Re: libdbus fix  Hi,  On Fri, Sep 14, at Tomas Hoger wrote: > On Wed, 12 Sep Sebastian Krahmer wrote: >  > > The recently discussed libdbus getenv() issue [1] turned out > > to be easily exploitable on various UNIX systems, including > > some Linux distributions. Common attack vectors are Xorg and > > spice-gtk via auto-launching [2]. > > Properly patching requires fixes for libdbus and libgio, > > depending on which you link your suid binaries. >  > [ ... ] >  > > [2] http://stealth.openwall.net/null/dzug.c >  > Sebastian, can you confirm that this summary completely covers all your > findings?  Um, I focused on the suid/daemons that we have on our dist, so theres indeed no claim that the list of attack vectors is complete. I cannot check any library/pam combination of any UNIX that is outthere. :) Though, I tried to be as 'complete as possible'. For example, you can also use su as attack vector if you run systemd (via pam_systemd and su keeping a parent pam-session as root, triggering pam_systemd.so load with user given environment; loading libdbus). And finally pam_ck_connector, but AFAIS this cannot be triggered as it only runs via login or login managers which dosn't leave room for DBUS_SYSTEM_BUS_ADDRESS passing so easily. But you know, these guys are maybe more clever than us and they get more money for their results. Thats the A in APT. :)  >  > There are problems with handling of DBUS_SYSTEM_BUS_ADDRESS environment > variable in both libdbus and glib/libgio when used in a privileged > (setuid or setgid) application. >  > libdbus is currently tracked via with two known attack > variants: > - unixexec:, which is only supported in recent dbus versions (1.5+ from >   what I can see) > - autolaunch: combined with malicious PATH setting, leading to >   execution of the attacker's dbus-launch.  This affects pre-1.5 dbus >   versions too.  Ok, there is also 'nonce-tcp' which you could use to dump (parts of) secret files. There is also the option to use a UNIX socket that you dont have write permission to, writing semi-garbage to it (with root peer credentials), maybe triggering actions in daemons that are 'unexpected'.   >  > libgio got > - autolaunch: or empty address, combined with PATH setting, similar to >   the second libdbus variant  Yes, but I didnt check libgio explicitely. There might be other issues lurking inside libgio.  Sebastian   --   ~ perl self.pl ~ ~ krahmer@...e.de - SuSE Security Team   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      