  oss-security - Re: note on gnome shell extensions            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 13 Sep From: Marcus Meissner <meissner@...e.de> To: oss-security@...ts.openwall.com Cc: Vincent Danen <vdanen@...hat.com> Subject: Re: note on gnome shell extensions  On Thu, Sep 13, at Tavis Ormandy wrote: > On Mon, Sep 10, at Vincent Danen wrote: > > * Kurt Seifried wrote: > > SUSE has some interesting info in their bug: > >  > > > >  > > By the sounds of it, this should be harmless.  Vincent Untz says that > > the browser plugin doesn't actually install the extensions, it's passed > > to another process via a dbus call to gnome-shell, which sends the uuid > > of the extension to the extensions.gnome.org web site in order to > > download the extension. > >  > > See: > >  > > > > http://git.gnome.org/browse/gnome-shell/tree/js/ui/extensionDownloader.js#n27 > >  > > which is: > >  > > let message = Soup.form_request_new_from_hash('GET', REPOSITORY_URL_INFO, params); > >  > > And REPOSITORY_URL_INFO is hardcoded earlier: > >  > > const REPOSITORY_URL_BASE = 'https://extensions.gnome.org'; > > const REPOSITORY_URL_DOWNLOAD = REPOSITORY_URL_BASE + '/download-extension/%s.shell-extension.zip'; > > const REPOSITORY_URL_INFO     = REPOSITORY_URL_BASE + '/extension-info/'; > > const REPOSITORY_URL_UPDATE   = REPOSITORY_URL_BASE + '/update-info/'; > >  > > I don't think this is something that can be exploited, based on the > > above. >  > Not sure I follow the logic, can't I just upload something malicious to > extensions.gnome.org and then force you to download it? I mean, I can > try it if you're not convinced it's possible.  There are supposed to be reviewers before it gets activated, but exactly this concern Sebastian also voiced.   > They surely do not have a magical technique for determining if my code > is or can become malicious.  Exactly.  Ciao, Marcus  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      