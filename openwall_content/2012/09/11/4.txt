  oss-security - Multiple SQL injections in MySQL/MariaDB            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Tue, 11 Sep From: sergii@...em.net To: oss-security@...ts.openwall.com Cc: security@...iadb.org Subject: Multiple SQL injections in MySQL/MariaDB  Hi.  Recently, our developer Kristian Nielsen have discovered multiple SQL injection like vulnerabilities in MySQL and MariaDB. As of today, all versions of MySQL are affected. Affected MariaDB versions are: and below, and below, and below, and below. Latest MariaDB releases and have this problem fixed.  The issue is numerous places in the code where SQL statements are generated and written into the binary log. User-supplied identifiers (table names, field names, etc.) are not always properly quoted (for example, the proper quoted form of SPECI`AL is `SPECI``AL`), so authorised users that have privileges to modify a table (any non-temporary table) can inject arbitrary SQL into the binary log.  Such injected SQL will be executed by the slave or when a DBA does a mysqlbinlog|mysql style point-in-time recovery.  During the normal MySQL replication (master-slave, not mysqlbinlog|mysql), the options to exploit these vulnerabilities are somewhat limited by the fact, that the slave does not execute many statements, when it expects the one. So, one can not inject a new SQL statement. But one can extend the WHERE condition, or modify tables that he usually would have no access to.  Just to be clear: to exploit this one needs a valid account on the server and privileges to modify data.  Regards, Sergei Golubchik MariaDB Security Coordinator  References:  1. MariaDB bug entry:       2. MariaDB patches:                   3. MySQL bug entry:       4. The CVE id for this vulnerability is   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      