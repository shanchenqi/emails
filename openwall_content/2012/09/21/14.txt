  oss-security - Re: Re: CVE request(?): gpg: improper file permssions  set when en/de-crypting files            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 21 Sep From: Michael Gilbert <mgilbert@...ian.org> To: Kurt Seifried <kseifried@...hat.com> Cc: oss-security@...ts.openwall.com Subject: Re: Re: CVE request(?): gpg: improper file permssions  set when en/de-crypting files  On Fri, Sep 21, at PM, Kurt Seifried >> Think about it this way.  I open a file with mode in vim, edit >> it, save it, and find it with mode  That would be an exposure, >> would it not? > > Not if it respects your umask.  Editing does not invoke a umask because the program already knows what umask you really wanted for that file, and didn't need a default to guess at it.  $ umask $ touch test $ ls -l test -rw------- 1 a a 5 Sep 21 test $ umask $ echo test > test $ ls -l test -rw------- 1 a a 5 Sep 21 test  > If you want privacy set your umask > correctly. Programs can't know what they're supposed to do unless you > tell them. And we tell the system using umask.  Sure, umask applies a default set of permissions to new files, and the process of decrypting a file with gpg certainly creates a new file. But in this case, we can be more intelligent than the umask because we know the permissions of the original encrypted file, and don't need to guess at them using the umask.  > I'm confused. It's not exposed unless you configure umask wrong and > run this in a public viewable directory. If you want a CVE for every > single program that doesn't ensure it's (potentially sensitive) output > is mode than that's basically, well, all the programs on a system.  So, the point is that umask is more meant more as a fallback only when there isn't better info available to make the right permissions decision.  Best wishes, Mike  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      