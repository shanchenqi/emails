  oss-security - Re: CVE Request -- glibc: strcoll() integer overflow  leading to buffer overflow + another alloca() stack overflow issue (upstream  &&            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 07 Sep From: Jeff Law <law@...hat.com> To: Kurt Seifried <kseifried@...hat.com> CC: oss-security@...ts.openwall.com, Jan Lieskovsky <jlieskov@...hat.com>,         "Steven M. Christey" <coley@...us.mitre.org>,         Florian Weimer <fweimer@...hat.com>, Jakub Jelinek <jakub@...hat.com> Subject: Re: CVE Request -- glibc: strcoll() integer overflow  leading to buffer overflow + another alloca() stack overflow issue (upstream  &&  On AM, Kurt Seifried wrote: >> 2) Issue #2 (mentioned here only for completeness, but I am not of >> the opinion this should receive a CVE identifier. See argumentation >> below [but open to glibc upstream / others to disprove it]). > > I will hold off on issuing a CVE for this then. Anyone want to weigh in? >> alloca() stack overflow (first issue from the report below) >> Upstream bug report: [3] >> >> >> If I have looked correctly this is expected / known behaviour of >> alloca() - from the manual page: [4] >> http://linux.die.net/man/3/alloca Just because it's known/expected behaviour doesn't mean it's not a  potential attack vector.  Blowing out the stack is definitely a vector  for attack:   Jeff  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      