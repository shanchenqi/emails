  oss-security - Re: CVE Request: libtiff: Heap-buffer overflow when 	processing a TIFF image with PixarLog Compression            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 26 Sep From: Sebastian Krahmer <krahmer@...e.de> To: oss-security@...ts.openwall.com Cc: Huzaifa Sidhpurwala <huzaifas@...hat.com> Subject: Re: CVE Request: libtiff: Heap-buffer overflow when 	processing a TIFF image with PixarLog Compression  On Tue, Sep 25, at Kurt Seifried wrote:  > -----BEGIN PGP SIGNED MESSAGE----- > Hash: SHA1 >  > On AM, Huzaifa Sidhpurwala wrote: > > On AM, Solar Designer wrote: > >  > >> "libtiff brings "various memory buffer access fixes". Does > >> it fix more than > >>  > >> to which I have no answer.  The change log does in fact mention  > >> "Various memory buffer access fixes." as the very first change > >> listed for libtiff.  Perhaps someone should review code changes. > >>  > >  > > I had a look at the commit logs and found one issue > > which seems to bring a possibility of heap-based buffer overflow > > when using a tiff file with PixarLog compression format. > >  > > More details at:  > > > >  > > Though memory overwrite outside the heap-buffer is only a few > > bytes, one cannot really overwrite possible arbitrary code > > execution.  This conclusion leaves me a bit puzzled. :) Even just "a few bytes" are often enough to trigger code exec. In particular if you get a big bounty for it.  As well as the patch:   -	sp->tbuf = (uint16 *) _TIFFmalloc(tbuf_size); +	sp->tbuf = (uint16 *) _TIFFmalloc(tbuf_size+sizeof(uint16)*sp->stride);  If there were sizeof(uint16)*sp->stride bytes missing before, this is really more than just a few bytes. I checked that the mult cannot overflow, as sp->stride seems to be uint16. However, I think the add can actually wrap, (at least on ILP32) as tbuf_size can be 0xffffffff or so. I think the patch is broken and just shifts the hole.  Plus, there are more occurences of _TIFFmalloc(tbuf_size) inside this file, one in PixarLogSetupEncode() and one in PixarLogSetupDecode() (but it might be that the Encode can never be triggered like so by attackers).  Sebastian  --   ~ perl self.pl ~ ~ krahmer@...e.de - SuSE Security Team   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      