  oss-security - Re: php header() header injection detection bypass            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 4 Sep From: Eygene Ryabinkin <rea-sec@...elabs.ru> To: oss-security@...ts.openwall.com Subject: Re: php header() header injection detection bypass  Good day.  Fri, Aug 31, at Raphael Geissert wrote: > All the bug reports I mentioned are about exactly the same issue. The non- > public ones have been marked as duplicates of the public one. >  > I'm aware of at least RC5 containing the incomplete fix[1], but I don't  > know in which exact RC version it made its way into. beta2 was still  > vulnerable to >  > PHP RC1 already had the proper fix.  As for PHP the three patches are of concern,  [1]  [2]  [3]  First one still has the possibility of injecting '\r' before the first '\n'. The second one kills the protection for the NUL byte check, so it won't allow header splitting for Apache SAPI, but FastCGI stuff will be affected, as per Stefan Esser's assessment,   Third one fixes the issue.  The check for 5.3 tags yields:  -    has the issue completely fixed  -    has none of the mentioned fixes.  The check for 5.2 tags shows that  -    has none of the mentioned fixes.  So, seems like we have the following vulnerable main versions:   <= php < <= php < --  Eygene  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      