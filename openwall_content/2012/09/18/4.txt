  oss-security - Vulnerabilities in Oki CUPS printer drivers            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Tue, 18 Sep From: Guido Berhoerster <guido+openwall.com@...hoerster.name> To: oss-security@...ts.openwall.com Subject: Vulnerabilities in Oki CUPS printer drivers   Vulnerabilities in Oki CUPS printer drivers  The following describes a security vulnerability in several Oki CUPS drivers. While I'm not aware that these drivers are packaged in any ditribution, they are free software (licensed under the GPL v2 or later) and made available via the Oki website and their FTP server so I hope this is on topic here.   Vulnerabilities in Oki CUPS printer drivers -------------------------------------------  The CUPS filters distributed with several Oki CUPS printer drivers for Unix/Linux create temporary files with predictable names and uses them in an insecure way allowing arbitrary users to overwrite or create files via symlink attack for which the unprivileged CUPS user (usually lp) has the corresponding permissions. Furthermore, this allows arbitrary users to send data to a printer.  "rastertookimonochrome" is a shell script that creates a temporary file as follows:      tmp_name="rastertookimonochrome"     inFile="/tmp/${tmp_name}.$$"      [...]      ${CAT} - > ${inFile}  using only the current PID to make a unique filename which is easily predictable and then truncates and overwrites the file without any further safety checks. This may be exploited by a malicious user by creating a symlink to a file in order to overwrite or create a file as the unprivileged CUPS user.  Since the script also neither verifies the ownership of the temporary file nor checks whether it successfully wrote to it, a malicious user may also create correspondingly named file with arbitrary data which then will be sent to the printer.  Similar vulnerabilities can be found in the "okijobaccounting" script that is part of a number of other drivers.  At least the following drivers are affected:  Timestamp: Jan 16  Script:  Timestamp: Jan 16  Script:  Timestamp: Jan 16  Script:  Timestamp: Jan 16  Script:  Timestamp: Mar  2  Script:  Timestamp: Mar  2  Script:  This issue was initially reported to the vendor on August 21st,   Possible Fixes --------------  In the scripts I have examined it was not necessary at all to even create a temporary file. The code in "rastertookimonochrome" e.g. looks as follows:  ----8<----  tmp_name="rastertookimonochrome" inFile="/tmp/${tmp_name}.$$"  ${CAT} - > ${inFile}  # ...  ${ECHO} ${UEL} ${ECHO} ${OKIJOB_ACCT} ${ECHO} ${manual_feed} ${ECHO} ${PAPER} ${ECHO} ${RDYMSG}  # ...  ${CAT} ${inFile} | ${RASTERTOHP} "${1}" "${2}" "${3}" "${4}" "${5}" 2>/dev/null  ---->8----  The script can be restructured as follows:  ----8<----   {     ${ECHO} ${UEL}     ${ECHO} ${OKIJOB_ACCT}     ${ECHO} ${manual_feed}     ${ECHO} ${PAPER}     ${ECHO} ${RDYMSG}      # ...      ${CAT} - } | ${RASTERTOHP} "${1}" "${2}" "${3}" "${4}" "${5}" 2>/dev/null  This obviates the need to create a temporary file altogether and thus also bypasses the security problems associated with it.  Moreover, in case a temporary file is necessary, CUPS exports the environment variable TMPDIR before executing the filter which points to a directory for temporary files which has stricter permissions than /tmp, e.g. on my openSUSE system it is set to  drwxrwx--T 2 root lp 25. Apr /var/spool/cups/tmp  Since this is only writable by the CUPS users' group (and root) symlink attacks and the injection of data become impossible as long as the temporary file is created with sufficiently strict permissions. This is documented at http://www.cups.org/documentation.php/api-filter.html#TEMPFILES  --  Guido Berhoerster  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      