  oss-security - Re: assignment notification: xinetd enables unintentional services over tcpmux port            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Thu, 10 May From: Solar Designer <solar@...nwall.com> To: oss-security@...ts.openwall.com Cc: thomas.swan@...il.com, bbraun@...ack.net Subject: Re: assignment notification: xinetd enables unintentional services over tcpmux port  On Wed, May 09, at Stefan Cornelius wrote: > Thomas Swan of FedEx reported a service disclosure flaw in xinetd. > xinetd allows for services to be configured with the TCPMUX or > TCPMUXPLUS service types, which makes those services available on port > 1, as per RFC [1], if the tcpmux-server service is enabled.  When > the tcpmux-server service is enabled, xinetd would expose _all_ enabled > services via the tcpmux port, instead of just the configured service(s). > This could allow a remote attacker to bypass firewall restrictions and > access services via the tcpmux port. >  > In order for enabled services handled by xinetd to be exposed via the > tcpmux port, the tcpmux-server service must be enabled (by default it is > disabled). >  > This has been assigned  This is now reported fixed in xinetd  From          If the address we're binding to is a multicast address, do the                 multicast join.         Merge the Fedora patch to turn off libwrap processing on tcp                 rpc services. Patch         Merge the Fedora patch to add labeled networking.                 Patch r1.4.         Merge the Fedora patch to fix getpeercon() for labeled networking                 in MLS environments.                 Patch r1.1         Merge the Fedora patch for int->ssize_t.                 Patch r1.1                 Some modifications to this patch were necessary.         Change compiler flags, -Wconversion generates excessive and                 unnecessary warnings with gcc, particularly all                 cases of ntohs(uint16_t).                                 Additionally add -Wno-unused to prevent unnecessary                 warnings regarding unused function parameters when                 the function is a callback conforming to a standard                 interface.         Change version number to indicating an interim                 developmental source snapshot.         Merge patch from Thomas Swan regarding  of that I just downloaded is Unfortunately, there's no signature.  While we're at it, if anyone cares about these xinetd builtin services and their issues (and it seems so), I think xinetd dropping bad_port_check() is also a vulnerability that distros need to patch. We do:   (haven't updated to yet, but that patch will stay the same - it merely re-introduces the checks that existed in and below).  Alexander  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      