  oss-security - Re: Debian/Ubuntu php_crypt_revamped.patch            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 04 May From: Kurt Seifried <kseifried@...hat.com> To: oss-security@...ts.openwall.com CC: Solar Designer <solar@...nwall.com> Subject: Re: Debian/Ubuntu php_crypt_revamped.patch  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  So I'm guessing this needs a CVE #?  On AM, Solar Designer wrote: > Hi, >  > Boaz Rymland reported to me what he thought was a phpass bug, where > any password would be valid when authenticated against a NULL or > empty password hash.  (Indeed, the password hash shouldn't normally > be NULL or empty, but it is better for authentication code to be > fail-close rather than fail-open.)  At first, I was not able to > reproduce the problem, but after exchanging a few e-mails we were > able to narrow it down to PHP crypt() call returning an empty > string when called with NULL or an empty string for the salt > argument on Boaz' Ubuntu system with php5 > I was still not able to reproduce that on other systems (with other > versions of PHP). >  > Today, I downloaded and built clean PHP on an Owl system. I > still could not trigger the problem.  Then I applied  > debian/patches/php_crypt_revamped.patch from Debian's  > - and the problem finally appeared. >  > Original: >  > php@owl:~ $ -r 'echo crypt("pass", null), > "\n";' >  > With Debian patch: >  > php@owl:~ $ -r 'echo crypt("pass", > null), "\n";' >  > php@owl:~ $ >  > (empty string was printed). >  > It turns out that the patch first appeared in Debian's in  > response to almost a non-issue (different behavior across PHP > versions for an invalid salt string) and general feeling that PHP > should be using system-provided crypto instead of its bundled code > when possible (questionable to me: each approach has its pros and > cons): >  > >  > The handling of NULL/empty salt strings was corrected in > as well as in (stable-security): >  > >  > Apparently, that fix never made it into Ubuntu updates - so > I guess this should happen now. >  > Overall, the patch looks problematic to me.  Here's another problem > with it, still reproducible on (Ubuntu >  > user@...ntu:~$ php -r 'echo crypt("pass", "_J9..Salt"), "\n";'  > user@...ntu:~$ php -r 'echo crypt("pass", > "\n";' >  > That non-security bug is with the "salt_len == 9" check added with > the patch.  So phpass' authentication against CRYPT_EXT_DES hashes, > which it tries to support, would be failing on Debian/Ubuntu > systems.  I guess I need to introduce a workaround for it now, > complicating the code. :-( >  > I think it may be best to drop this patch from further versions of  > Debian/Ubuntu - and not reintroduce it even in response to the > likely "bug" reports from Debian users complaining about the > behavior change from previous versions of Debian. >  > I agree that the code in upstream PHP may need improvement, but > that patch does not improve it, and the deviation from upstream is > bad. Altering the behavior of PHP on specific distros beyond what > may normally happen due to PHP's ./configure is undesirable and > should only be done for very good reasons. >  > Sorry for the rant. >  > Alexander   - --  Kurt Seifried Red Hat Security Response Team (SRT) PGP: A90B 66BF  -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux) Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/  RjYAtiCy3B7zyNEZBzxl =XSLr -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      