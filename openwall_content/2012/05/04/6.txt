  oss-security - Re: CVE Request: evolution-data-server lacks SSL checking  in its libsoup users            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 04 May From: Ludwig Nussel <ludwig.nussel@...e.de> To: oss-security@...ts.openwall.com Subject: Re: CVE Request: evolution-data-server lacks SSL checking  in its libsoup users  Marcus Meissner wrote: > I started looking at the libsoup users, first one is evolution-data-server, >  > None of the libsoup users there seem to handle SSL certificate trust correctly (or at all) in my eyes. >  > In version these are. > 	Groupwise protocol handling (server/groupwise/e-gw-connection.c) > 	Exchange protocol handling (server/exchange/lib/e2k-context.c) > 	Google (servers/google/libgdata-google/gdata-google-service.c) > 	calendar/backends/http/e-cal-backend-http.c > 	calendar/backends/caldav/e-cal-backend-caldav.c >  > I do not fully understand the correct solution to this yet though, whether we need > to pass in additional flags, or evaluate the "trusted" flag after the connect.  One would have thought that such abstraction libraries were invented to make life for application programmers easier. Openssl in all it's ugliness at least provides SSL_CTX_set_default_verify_paths(). gnutls doesn't have an equivalent. It's utterly stupid to require each and every application to hard code the path to a certificate bundle. Defaulting to not doing any checks at all if the application programmer forgot to set the magic option isn't exactly clever either. I think we should just patch libsoup to do the checks by default against the system certificates instead of starting to patch all it's users. Since we do not have a certificate bundle file in older distros we'd need to patch libsoup to use the certificate directory instead anyways.  I wonder why everyone insists in using an unmanageable bundle file instead of the directory with individual files...  cu Ludwig  --   (o_   Ludwig Nussel  //\  V_/_  http://www.suse.de/ SUSE LINUX Products GmbH, GF: Jeff Hawn, Jennifer Guild, Felix ImendĂśrffer, HRB (AG NĂźrnberg)   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      