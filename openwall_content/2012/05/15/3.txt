  oss-security - Re: Using FreeBSD Capsicum for program and library sandboxing            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Tue, 15 May From: Ben Laurie <benl@...gle.com> To: oss-security@...ts.openwall.com Subject: Re: Using FreeBSD Capsicum for program and library sandboxing  On 15 May Solar Designer <solar@...nwall.com> wrote: > Hi, > > A couple of days ago, Ben Laurie posted to the Secure Coding list about > using FreeBSD's experimental Capsicum support in the kernel to sandbox > bzip2 and libtiff ("wrapping it such that the calling application is > unaware it is wrapped") - as two initial examples, I presume. Â I found > this very interesting.  Thanks.  If you want to see the libtiff work, it's here: https://github.com/benlaurie/libtiff  So far, I've wrapped enough (transparently!) to make a couple of trivial applications work. These are slightly cut-down versions of a couple of apps provided with libtiff. They're cut down because they add custom tags, which means registering callbacks, and I haven't designed how to wrap that yet :-)  Before I do, I want to move onto a more "real" application. Not sure what I should choose, though, so suggestions are welcome...  All new code is the wrapped/ subdirectory - so far I have not had to make any changes to libtiff, which is nice, but I do not rule it out.  This one includes a rudimentary RPC compiler.  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      