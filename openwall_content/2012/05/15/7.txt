  oss-security - Re: Automatic binary hardening with Autoconf            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Tue, 15 May From: Sebastian Krahmer <krahmer@...e.de> To: oss-security@...ts.openwall.com Subject: Re: Automatic binary hardening with Autoconf  On Tue, May 15, at Steve Grubb wrote: > On Monday, May 14, PM Solar Designer wrote: > > I'd like this sort of topics to be brought up in here, so I'll start by > > referring to some blog posts. > >  > > Here's an interesting one by Keegan McAllister: > >  > > > > ng-with.html > >  > > This suggests (and shows how) individual programs that use autoconf may > > automatically enable the usual set of compile-time hardening settings > > that are otherwise normally provided by builds for/by/on hardened > > distros only.  This is not rocket science, yet the provided examples may > > be reused and it may become a trend. >  > I think there are conflicting goals in projects like this. There are times when  > someone may want to go all out and harden everything as much as possible. But  > there is a cost to that...either startup or runtime. Not all programs have the  > same threat model and consequence if attacked successfully. Apps that are at  > greatest risk are: set[ug]id/fs based capabilities, network facing apps,  > daemons, or parsers of untrusted media. It would be hard to argue that the "cat"  > program needs full relro and bind now.  You never know. I'd even say that the cat gets the most untrusted input ever. Everything and the world has been piped through cat since epoch. And similar surprises will happen to all the non threatening programs that are not seen as risk like file, ls, ps etc. until one realizes that some procmail/cups or whatever filter is using it. And then, Murphy is entering the dance floor.  Sebastian  --   ~ perl self.pl ~ ~ krahmer@...e.de - SuSE Security Team  --- SUSE LINUX Products GmbH, GF: Jeff Hawn, Jennifer Guild, Felix Imendörffer, HRB (AG Nürnberg) Maxfeldstraße 5 Nürnberg Germany   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      