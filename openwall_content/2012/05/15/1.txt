  oss-security - Automatic binary hardening with Autoconf            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Tue, 15 May From: Solar Designer <solar@...nwall.com> To: oss-security@...ts.openwall.com Cc: Keegan McAllister <mcallister.keegan@...il.com> Subject: Automatic binary hardening with Autoconf  Hi,  I'd like this sort of topics to be brought up in here, so I'll start by referring to some blog posts.  Here's an interesting one by Keegan McAllister:   This suggests (and shows how) individual programs that use autoconf may automatically enable the usual set of compile-time hardening settings that are otherwise normally provided by builds for/by/on hardened distros only.  This is not rocket science, yet the provided examples may be reused and it may become a trend.  Also interesting are the performance impact numbers (up to 30%), which are far worse than those I've seen posted before (up to 5.8%):  http://d-sbd.alioth.debian.org/www/?page=pax_pie  Perhaps this has to do with the specific code being protected and benchmarked (some crypto code in Mosh?)  http://mosh.mit.edu  An edit to this comment:   says that the impact is less with Ubuntu GCC - but I think this may be because Ubuntu's GCC has some of the hardening enabled by default (so its baseline performance is worse, not the impact is less).  Alexander  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      