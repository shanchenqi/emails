  oss-security - - PyCrypto <= 2.5 insecure ElGamal key generation            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Thu, 24 May From: "Dwayne C. Litzenberger" <dlitz@...tz.net> To: oss-security@...ts.openwall.com Subject: - PyCrypto <= 2.5 insecure ElGamal key generation   PyCrypto (also known as python-crypto) versions 2.5 and earlier implement  incorrect ElGamal key generation.  The bug has been fixed in PyCrypto  2.6, which was released this morning.  Details below:       In the ElGamal schemes (for both encryption and signatures), g is      supposed to be the generator of the entire Z^*_p group. However, in      PyCrypto 2.5 and earlier, g is more simply the generator of a random      sub-group of Z^*_p.       The result is that the signature space (when the key is used for      signing) or the public key space (when the key is used for encryption)      may be greatly reduced from its expected size of log(p) bits, possibly      down to 1 bit (the worst case if the order of g is 2).       While it has not been confirmed, it has also been suggested that an      attacker might be able to use this fact to determine the private key.  Anyone using ElGamal keys should generate new keys as soon as practical.  Any additional information about this bug will be tracked at the above URL.  --  Dwayne C. Litzenberger <dlitz@...tz.net>   OpenPGP: 1FE8 B3CF ED17  EC13 5CF7  Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      