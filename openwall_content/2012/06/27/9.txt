  oss-security - Re: CVE Request: Kernel [PATCH] NFC: prevent multiple  buffer overflows in NCI            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Wed, 27 Jun From: Kurt Seifried <kseifried@...hat.com> To: "oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com>,         Dan Rosenberg <dan.j.rosenberg@...il.com>,         "lauro.venancio@...nbossa.org" <lauro.venancio@...nbossa.org>,         "aloisio.almeida@...nbossa.org" <aloisio.almeida@...nbossa.org>,         "sameo@...ux.intel.com" <sameo@...ux.intel.com>,         "davem@...emloft.net" <davem@...emloft.net>,         "Elias, Ilan" <ilane@...com> Subject: Re: CVE Request: Kernel [PATCH] NFC: prevent multiple  buffer overflows in NCI  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  On AM, Kurt Seifried wrote: > >  >  > List:       linux-kernel Subject:    [PATCH] NFC: prevent multiple > buffer overflows in NCI From:       Dan Rosenberg <dan.j.rosenberg > () gmail ! com> Date:       Message-ID: > () gmail ! com [Download message RAW] >  > Fix multiple remotely-exploitable stack-based buffer overflows due > to the NCI code pulling length fields directly from incoming frames > and copying too much data into statically-sized arrays. > Fortunately, there don't appear to be any active users of this code > (yet). >  > This patch fixes the overflows, but I suspect the code will need to > be completely reworked since this doesn't address the more > systemic problem of failing to check that the values read from > incoming frame data aren't from beyond the end of the pulled skb > data. Build tested only.  Please use for this issue.  > Signed-off-by: Dan Rosenberg <dan.j.rosenberg@...il.com> Cc: > stable@...nel.org Cc: security@...nel.org Cc: Lauro Ramos Venancio > <lauro.venancio@...nbossa.org> Cc: Aloisio Almeida Jr > <aloisio.almeida@...nbossa.org> Cc: Samuel Ortiz > <sameo@...ux.intel.com> Cc: David S. Miller <davem@...emloft.net>  > Cc: Ilan Elias <ilane@...com> --- net/nfc/nci/ntf.c |   10 > +++++----- 1 files changed, 5 insertions(+), 5 deletions(-) >  > diff --git a/net/nfc/nci/ntf.c b/net/nfc/nci/ntf.c index > --- a/net/nfc/nci/ntf.c +++ > b/net/nfc/nci/ntf.c @@ @@ static __u8  > *nci_extract_rf_params_nfca_passive_poll(struct nci_dev *ndev,  > nfca_poll->sens_res = *)data)); data += 2; - > nfca_poll->nfcid1_len = *data++; +	nfca_poll->nfcid1_len = > min_t(__u8, *data++, NFC_NFCID1_MAXSIZE); pr_debug("sens_res 0x%x, > nfcid1_len %d\n", nfca_poll->sens_res, nfca_poll->nfcid1_len); @@ > @@ static __u8  > *nci_extract_rf_params_nfcb_passive_poll(struct nci_dev *ndev,  > struct rf_tech_specific_params_nfcb_poll *nfcb_poll, __u8 *data) {  > -	nfcb_poll->sensb_res_len = *data++; +	nfcb_poll->sensb_res_len = > min_t(__u8, *data++, NFC_SENSB_RES_MAXSIZE);  > pr_debug("sensb_res_len %d\n", nfcb_poll->sensb_res_len); @@ > @@ static __u8  > *nci_extract_rf_params_nfcf_passive_poll(struct nci_dev *ndev, __u8 > *data) { nfcf_poll->bit_rate = *data++; -	nfcf_poll->sensf_res_len > = *data++; +	nfcf_poll->sensf_res_len = min_t(__u8, *data++, > NFC_SENSF_RES_MAXSIZE); pr_debug("bit_rate %d, sensf_res_len > %d\n", nfcf_poll->bit_rate, nfcf_poll->sensf_res_len); @@ > @@ static int nci_extract_activation_params_iso_dep(struct  > nci_dev *ndev, switch (ntf->activation_rf_tech_and_mode) { case > NCI_NFC_A_PASSIVE_POLL_MODE: nfca_poll = > &ntf->activation_params.nfca_poll_iso_dep; - > nfca_poll->rats_res_len = *data++; +		nfca_poll->rats_res_len = > min_t(__u8, *data++, 20); pr_debug("rats_res_len %d\n", > nfca_poll->rats_res_len); if (nfca_poll->rats_res_len > 0) {  > memcpy(nfca_poll->rats_res, @@ @@ static int  > nci_extract_activation_params_iso_dep(struct nci_dev *ndev, case > NCI_NFC_B_PASSIVE_POLL_MODE: nfcb_poll = > &ntf->activation_params.nfcb_poll_iso_dep; - > nfcb_poll->attrib_res_len = *data++; +		nfcb_poll->attrib_res_len = > min_t(__u8, *data++, 50); pr_debug("attrib_res_len %d\n", > nfcb_poll->attrib_res_len); if (nfcb_poll->attrib_res_len > 0) {  > memcpy(nfcb_poll->attrib_res, >  >  >  >   - --  Kurt Seifried Red Hat Security Response Team (SRT) PGP: A90B 66BF  -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux) Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/  sqJpqJJVD1nYTzQIAP3U =RUqq -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      