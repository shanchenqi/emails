  oss-security - Re: CVE Request -- kernel: tcp: drop SYN+FIN messages            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Fri, 08 Jun From: John Haxby <john.haxby@...cle.com> To: Kurt Seifried <kseifried@...hat.com> CC: oss-security@...ts.openwall.com Subject: Re: CVE Request -- kernel: tcp: drop SYN+FIN messages  On Kurt Seifried wrote: > On AM, John Haxby wrote: > > > On Kurt Seifried wrote: > >> In my limited testing with iptables on RHEL 6.2 it appears that > >> --state NEW works properly, and won't allow SYN+FIN to create > >> connections (I used hping3 and the SYN+FIN Packets were > >> blocked). > > >> So the default ruleset: > > >> -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT -A INPUT > >> -m state --state NEW -m tcp -p tcp --dport 22 -j DROP -A INPUT -j > >> REJECT --reject-with icmp-host-prohibited > > >> should work, so you could do you clever --syn bits first and then > >> have that set to protect stuff from SYN+FIN. > > > What happens if you have "-j ACCEPT" instead of "-j DROP"?   I > > would expect that sshd wouldn't see the connection but you would > > get all the unpleasant side effects that made T/TCP deprecated. > > Ooops yeah typo, that DROP should have been ACCEPT. So to summarize > properly: > > -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT > -A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT > -A INPUT -j REJECT --reject-with icmp-host-prohibited > > results in ICMP unreachable (the -F -S bypasses the "--dport 22 -j > ACCEPT" but gets caught in the final "icmp-host-prohibited" rule) with: > > hping3 -c 3 -n -S -F -p 22 > > with: > > -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT > -A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j DROP > -A INPUT -j REJECT --reject-with icmp-host-prohibited > > with hping -F -S the packets bypass the "--dport 22 -j DROP" and get > caught by the icmp-host-prohibited > > with hping -S the packets get caught by "the "--dport 22 -j DROP"" as > expected. > > So basically --state new works fine and dandy. > > > > jch > >  Good.   That makes the kernel change just hardening then.   If you're not using iptables you're leaving yourself open to all kinds of abuse anyway so I don't think we need a CVE for the kernel.  jch  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      