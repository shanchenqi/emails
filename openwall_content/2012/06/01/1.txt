  oss-security - Re: CVE Request -- kernel: tcp: drop SYN+FIN messages            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 01 Jun From: John Haxby <john.haxby@...cle.com> To: Kurt Seifried <kseifried@...hat.com> CC: oss-security@...ts.openwall.com Subject: Re: CVE Request -- kernel: tcp: drop SYN+FIN messages   -----BEGIN PGP SIGNED MESSAGE----- Hash:  On Kurt Seifried wrote: > To clarify: is for the --syn processing flaw of SYN+FIN > packets in iptables (user space tools). c > Also if people could test their firewalls to make sure this still > doesn't affect other operating systems that would probably be a good idea.  It's not clear to me why you would want to allow SYN+FIN at all.  So far as I have been able to discover t is only used for T/TCP which was obsoleted in May by which said this:  > 4. Security Considerations > > As mentioned in the TCP Extensions for Transactions > (T/TCP) are reported to have security issues > [DEVIVO].  has this to say:  > RFC I "Extending TCP for Transactions -- Concepts" (November > found defective > > See RFC > > RFC E "T/TCP -- TCP Extensions for Transactions Functional > Specification" (July found defective > > The inventors of TCP believed that cached connection state could > have been used to eliminate TCP's 3-way handshake, to support > two-packet request/response exchanges. RFCs and > show that this is far from simple. Furthermore, > T/TCP floundered on the ease of denial-of-service attacks that can > result. One idea pioneered by T/TCP lives on in RFC in the > sharing of state across connections.  I'm not averse to this being an iptables problem, I just wondered why that is the case given the reasons for making T/TCP historic.  jch   -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux) Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/  =hEGv -----END PGP SIGNATURE-----   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      