  oss-security - Re: Arbitrary File Upload/Execution in Collabtive            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 06 Jun From: Kurt Seifried <kseifried@...hat.com> To: oss-security@...ts.openwall.com CC: Mark Hoopes <xync@...c.org> Subject: Re: Arbitrary File Upload/Execution in Collabtive  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  On AM, Mark Hoopes wrote: > This disclosure was posted to Bugtraq yesterday  >  I > am submitting it to oss-security as a request to have a CVE ID > assigned. >  > TITLE: Arbitrary File Upload/Execution in Collabtive DATE: > PRODUCT: Collabtive Web-Based Project Management > Software (http://collabtive.o-dyn.de/) VERSIONS: > confirmed.  All versions <= probable RESEARCHER: Mark Hoopes > (xync@...c.org/) ADDITIONAL INFORMATION:  > > >  Vulnerability: During the upload of an avatar image for a > Collabtive user, the manageuser.php script checks the file type > using the MIME type provided in the POST request (via the > $_FILES['userfile']['type'] variable) rather than by extension. > This MIME type can be spoofed via an intercepting proxy or custom > POST script allowing a malicious user to upload an arbitrary file. > This file will be placed in a predictable web accessible path with > an easily determined name.  In most installations, execution from > this directory is not restricted which allows a remote attacker to > execute a PHP script uploaded this way with the privileges of the > web user. >  > Access to the avatar upload function is restricted to logged in > users, but because of Collabtive's design decisions in implementing > OpenID support, this is easily accomplished.  If an unknown user > supplies a valid OpenID v1.0 URL as the username on the login page, > Collabtive will automatically create a new user based on the > referenced credentials. That new user is not authorized to access > any projects, but is authorized to upload an avatar image.  This > allows an attacker with no other knowledge of the host site or its > users to exploit the vulnerability. >  > Fix: Upgrade to Collabtive or greater Source:  > > >  Release Notes: >  > Workaround: Disable script execution of the upload directory via > .htaccess for Apache or similar web servers.  This should apply at > minimum to the /files/[template]/avatar directory but can safely be > applied to the entire /files directory. >  > Sample contents of the .htaccess file are: Options -Indexes Options > -ExecCGI AddHandler cgi-script .php .php3 .php4 .phtml .pl .py .jsp > .asp .htm .shtml .sh .cgi >  > Note 'AllowOverride Options AddHandler' or 'AllowOverride All' must > be enabled in the main httpd.conf file for this directory or > inherited from a parent directory. See > http://www.mysql-apache-php.com/fileupload-security.htm >  > Additional References:  > > >  http://www.php.net/manual/en/features.file-upload.post-method.php > see comments for $_FILES['userfile']['type'] >  >  > TIMELINE: April 18, - Issue reported to developers April 19, > - Fix committed to Collabtive github May 30,  - > Collabtive version released w/ fix June 4, - > Vulnerability published >   Please use for this issue.  BTW very nicely formatted/informative email, well done. Also bonus points for offering a workaround =).  - --  Kurt Seifried Red Hat Security Response Team (SRT) PGP: A90B 66BF  -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux) Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/  ihjZQBiBHTEFTlzB8rCO =NwJS -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      