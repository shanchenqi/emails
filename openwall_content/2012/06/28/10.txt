  oss-security - Re: PHP information disclosure via easter egg             Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 28 Jun From: "Oden Eriksson" <oeriksson@...driva.com> To: oss-security@...ts.openwall.com Subject: Re: PHP information disclosure via easter egg    > -----BEGIN PGP SIGNED MESSAGE----- > Hash: SHA1 > > On AM, Pierre Joye wrote: >> hi Kurt! >> >> On Thu, Jun 28, at AM, Kurt Seifried >> <kseifried@...hat.com> wrote: >> >>> So simply querying: >>> >>> >>> >>> e.g.: >>> >>> >>> >>> shows authors, SAPI modules (and their authors) and normal >>> modules (and their authors), resulting in a significant >>> information disclosure (version #'s can be narrowed down from the >>> authors list). >>> >>> This has already been reported, but no CVE was assigned: >>> >>> >>> >>> It is mentioned in http://php.net/manual/en/ini.core.php however >>> it is enabled by default: >>> >>> ; Decides whether PHP may expose the fact that it is installed on >>> the server ; (e.g. by adding its signature to the Web server >>> header).  It is no security ; threat in any way, but it makes it >>> possible to determine whether you use PHP ; on your server or >>> not. >>> >>> ; http://www.php.net/manual/en/ini.core.php#ini.expose-php >>> >>> expose_php = On >> >> Why would it require a CVE and why is it seen as a security issue? >> Sure it could be, like unfiltered input and the like but... >> >> Cheers, > > I wasn't asking for a CVE for this issue (no "CVE Request: in > subject), This is more of a place holder/information (oss-security is > read by a lot of security vendors/etc, and is for more than just CVE > assignments) and to make sure people are aware of the issue, since I > wasn't even aware of it until someone pointed it out to me. > > Exposing the fact that I am running PHP is one thing. Exposing exactly > which modules I have loaded is quite another.    That url does not show loaded modules. One can also use for example:  disable_functions = phpinfo  in /etc/php.ini  So, I guess that's sufficent.  --  Regards // Oden Eriksson Security team manager - Mandriva CEO NUX AB   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      