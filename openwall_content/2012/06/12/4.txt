  oss-security - Ruby on Rails Unsafe Query Generation Risk in Ruby on Rails             Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Tue, 12 Jun From: Aaron Patterson <tenderlove@...y-lang.org> To: oss-security@...ts.openwall.com, rubyonrails-security@...glegroups.com Subject: Ruby on Rails Unsafe Query Generation Risk in Ruby on Rails   Unsafe Query Generation Risk in Ruby on Rails  There is a vulnerability when Active Record is used in conjunction with parameter parsing from Rack via Action Pack. This vulnerability has been assigned the CVE identifier  Versions Affected:  ALL versions Not affected:       NONE Fixed Versions:      Impact  ------  Due to the way Active Record interprets parameters in combination with the way that Rack parses query parameters, it is possible for an attacker to issue unexpected database queries with "IS NULL" where clauses.  This issue does *not* let an attacker insert arbitrary values into an SQL query, however they can cause the query to check for NULL where most users wouldn't expect it.  For example, a system has password reset with token functionality:      unless params[:token].nil?       user = User.find_by_token(params[:token])       user.reset_password!     end  An attacker can craft a request such that `params[:token]` will return `['xyz', nil]`.  The `['xyz', nil]` value will bypass the test for nil, but will still add an "IN ('xyz', NULL)" clause to the SQL query.  All users running an affected release should either upgrade or use one of the work arounds immediately. All users running an affected release should upgrade immediately. Please note, this vulnerability is a variant of even if you upgraded to address that issue, you must take action again.   Releases --------  The FIXED releases are available at the normal locations.   Workarounds -----------  This problem can be mitigated by casting the parameter to a sting before passing it to Active Record.  For example:      unless params[:token].nil? || params[:token].to_s.empty?       user = User.find_by_token(params[:token].to_s)       user.reset_password!     end  Note the parameter is still cast to a string before being send to Active Record.This is because an array with a nil value can still bypass the `to_s.empty?` test:      >> ['xyz', nil].to_s     => "xyz"     >> ['xyz', nil].to_s.empty?     => false  Patches  -------  To aid users who aren't able to upgrade immediately we have provided patches for the two supported release series.  They are in git-am format and consist of a single changeset.   * 3-0-null_array_param.patch - Patch for 3.0 series  * 3-1-null_array_param.patch - Patch for 3.1 series  * 3-2-null_array_param.patch - Patch for 3.2 series   Please note that only the 3.1.x and 3.2.x series are supported at present.  Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.  Credits  -------   Thanks to the following people for reporting this bug:    * Egor Homakov   * Paul Lynch  --  Aaron Patterson http://tenderlovemaking.com/  View attachment "3-0-null_array_param.patch" of type "text/plain" bytes)  View attachment "3-1-null_array_param.patch" of type "text/plain" bytes)  View attachment "3-2-null_array_param.patch" of type "text/plain" bytes)  Content of type "application/pgp-signature" skipped  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      