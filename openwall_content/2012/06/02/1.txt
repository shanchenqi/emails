  oss-security - Re: CVE Request -- kernel: tcp: drop SYN+FIN messages            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Sat, 02 Jun From: Stefan Behte <craig@...too.org> To: oss-security@...ts.openwall.com Subject: Re: CVE Request -- kernel: tcp: drop SYN+FIN messages  Hi,  I'm writing because the patch is missing something; in the issue was fixed for SYN-FIN, but IMHO it's still open fĂźr SYN-PSH and SYN-URG.  # Victim: Locally, I ran: ab2 -n -c http://localhost/ The performance was about requests/s  # Attacker: iptables -A OUTPUT -d ${VICTIM} -p tcp --dport 80 --tcp-flags SYN,ACK,RST RST -j DROP I modified synful.c to send SYN-FIN: this results in no open SYN_RECV states on the victim, the ab2 benchmark performs as usual.  However, sending SYN+URG causes a immediate increase of SYN_RECV to and ab2 won't even finish, only very few requests succeed.  Enabling tcp_syncookies is an immediate fix, though.  So my question is: isn't this the same thing as If so, this works for me:  --- +++ @@ @@  		if (th->syn) {  			if (th->fin)  				goto discard; +			if (th->urg) +				goto discard; +			if (th->psh) +				goto discard;  			if (icsk->icsk_af_ops->conn_request(sk, skb) < 0)  				return 1;  References: ("Vulnerable" list is wrong btw.)  Best regards,  Stefan Behte  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      