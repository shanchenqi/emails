  oss-security - Security vulnerability in MySQL/MariaDB sql/password.c            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Sat, 9 Jun From: Sergei Golubchik <serg@...typrogram.com> To: oss-security@...ts.openwall.com Subject: Security vulnerability in MySQL/MariaDB sql/password.c  Hi  We have recently found a serious security bug in MariaDB and MySQL. So, here, we'd like to let you know about what the issue and its impact is. At the end you can find a patch, in case you need to patch an older unsuported MySQL version.  All MariaDB and MySQL versions up to are vulnerable. MariaDB versions from are not. MySQL versions from are not.  This issue got assigned an id  Here's the issue. When a user connects to MariaDB/MySQL, a token (SHA over a password and a random scramble string) is calculated and compared with the expected value. Because of incorrect casting, it might've happened that the token and the expected value were considered equal, even if the memcmp() returned a non-zero value. In this case MySQL/MariaDB would think that the password is correct, even while it is not.  Because the protocol uses random strings, the probability of hitting this bug is about  Which means, if one knows a user name to connect (and "root" almost always exists), she can connect using *any* password by repeating connection attempts. attempts takes only a fraction of second, so basically account password protection is as good as nonexistent.  Any client will do, there's no need for a special libmysqlclient library.  But practically it's better than it looks - many MySQL/MariaDB builds are not affected by this bug.  Whether a particular build of MySQL or MariaDB is vulnerable, depends on how and where it was built. A prerequisite is a memcmp() that can return an arbitrary integer (outside of range). To my knowledge gcc builtin memcmp is safe, BSD libc memcmp is safe. Linux glibc sse-optimized memcmp is not safe, but gcc usually uses the inlined builtin version.  As far as I know, official vendor MySQL and MariaDB binaries are not vulnerable.  Regards, Sergei Golubchik MariaDB Security Coordinator  References:  MariaDB bug report: MariaDB fix:  MySQL bug report: MySQL fix: MySQL changelog:       Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      