  oss-security - Re: pwgen: non-uniform distribution of passwords            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 17 Jan From: Solar Designer <solar@...nwall.com> To: oss-security@...ts.openwall.com Cc: bugtraq@...urityfocus.com, Theodore Ts'o <tytso@....edu> Subject: Re: pwgen: non-uniform distribution of passwords  On Tue, Jan 17, at Solar Designer wrote: > Time running (D:HH:MM) - Keyspace searched - Passwords cracked > - - 6.0% > - - > - 0.5% - > - 1.0% - > - 1.8% - > - 2.3% - > - 3.1% - ... > I did some testing of "pronounceable" passwords, and I > think they might be weaker than you had expected (depends on what you > had expected, which I obviously don't know).  It was just pointed out to me off-list that the man page for pwgen specifically mentions that this kind of passwords "should not be used in places where the password could be attacked via an off-line brute-force attack."  I had missed that detail or at least I did not recall it.  This kind of documentation certainly mitigates the problem to some extent.  Yet I think this gives users the perception that only the keyspace is smaller, not that the generated passwords are distributed non-uniformly. In fact, most users would not even think of the latter risk.  The passwords look much stronger than they actually are, and I think this is a problem.  They look like almost random sequences of 8 characters, whereas the level of security for 6% to 20% of them is similar to that of dictionary words with minor mangling.  Sure, there's a trade-off, but non-uniform distribution didn't have to be part of it.  That's an implementation shortcoming.  > Specifically, not only the keyspace is significantly smaller than that > for "secure" passwords (which I'm sure you were aware of), but also the > distribution is highly non-uniform.  My guess is that this results from > different phonemes containing the same characters.  So certain > substrings can be produced in more than one way, and then some > characters turn out to be more probable than some others (especially as > it relates to their conditional probabilities given certain preceding > characters).  Alexander  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      