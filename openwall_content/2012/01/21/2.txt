  oss-security - Re: CVE request: spamdyke buffer overflow vulnerability            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 20 Jan From: Kurt Seifried <kseifried@...hat.com> To: oss-security@...ts.openwall.com CC: Agostino Sarubbo <ago@...too.org> Subject: Re: CVE request: spamdyke buffer overflow vulnerability  On AM, Agostino Sarubbo wrote: > According to secunia advisory: > : > Description: > > Some vulnerabilities have been reported in spamdyke, which potentially can be  > exploited by malicious people to compromise a vulnerable system. > > The vulnerabilities are caused due to boundary errors related to the incorrect  > use of the "snprintf()" and "vsnprintf()" functions, which can be exploited to  > cause buffer overflows. > > The vulnerabilities are reported in versions prior to > > > Solution > Update to version > > > and from upstream changelog: > http://www.spamdyke.org/documentation/Changelog.txt : > > Fixed a number of very serious errors in the usage of snprintf()/vsnprintf(). >     The return value was being used as the length of the string printed into >     the buffer, but the return value really indicates the length of the string >     that *could* be printed if the buffer were of infinite size. Because the >     returned value could be larger than the buffer's size, this meant remotely >     exploitable buffer overflows were possible, depending on spamdyke's >     configuration. > > and from upstream mailing list: > > > it also fixes a series of major bugs  > that could lead to buffer overflows.  Depending on spamdyke's configuration,  > these could cause remotely exploitable security holes.  Please upgrade  > immediately! > > Please assign a CVE > Can you include some links to actual code commits? I want to prevent duplicates and more information would aid in that.  --   --  -- Kurt Seifried / Red Hat Security Response Team   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      