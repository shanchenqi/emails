  oss-security - Re: CVE request: kernel: proc: clean up and fix  /proc/<pid>/mem handling            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 18 Jan From: Kees Cook <kees@...ntu.com> To: oss-security@...ts.openwall.com Cc: "Steven M. Christey" <coley@...us.mitre.org> Subject: Re: CVE request: kernel: proc: clean up and fix  /proc/<pid>/mem handling  What's the problem with the old logic in the mem handling? (Why does this need a CVE?)  On Wed, Jan 18, at Eugene Teo wrote: > "JĂźri Aedla reported that the /proc/<pid>/mem handling really isn't very > robust, and it also doesn't match the permission checking of any of the > other related files. >  > This changes it to do the permission checks at open time, and instead of > tracking the process, it tracks the VM at the time of the open.  That > simplifies the code a lot, but does mean that if you hold the file > descriptor open over an execve(), you'll continue to read from the _old_ VM. >  > That is different from our previous behavior, but much simpler.  If > somebody actually finds a load where this matters, we'll need to revert > this commit. >  > I suspect that nobody will ever notice - because the process mapping > addresses will also have changed as part of the execve.  So you cannot > actually usefully access the fd across a VM change simply because all > the offsets for IO would have changed too." >  > >  > Thanks, Eugene  --  Kees Cook  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      