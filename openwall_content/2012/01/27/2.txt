  oss-security - testing pwqgen            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Fri, 27 Jan From: Solar Designer <solar@...nwall.com> To: oss-security@...ts.openwall.com Subject: testing pwqgen  Hi,  I think we can and should use this list not only for discussing actual vulnerabilities, but also for sharing information on what was audited, tested, etc. even if found not vulnerable.  Such information may be helpful too.  In light of the pwgen vulnerability:   I also tested our pwqgen (part of passwdqc) for (lack of) a similar issue.  Testing was easy with low random=... settings (like for 1 or 2 words), but I also wanted to test with our default settings (no options on pwqgen's command line at all, which means 47 bits of randomness).  I happened to generate such passwords (or phrases) until I interrupted the script.  Out of them, appear twice and none more than two times.  Thus, are unique.  For uniform distribution, the expectation is that we'll have about unique passwords, or about duplicates.  The test results match this pretty closely.  Of course, this heavily depends on the quality of /dev/urandom.  I did my testing on the same system where I had tested pwgen.  This is an 8-core machine running Linux (an Owl revision/build of a RHEL5 branch OpenVZ kernel) for  Alexander  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      