  oss-security - Re: CVE affected for PHP ?            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 13 Jan From: Kurt Seifried <kseifried@...hat.com> To: oss-security@...ts.openwall.com CC: Nicolas Grégoire <nicolas.gregoire@...rri.fr> Subject: Re: CVE affected for PHP ?  On PM, Nicolas Grégoire wrote: > Le vendredi 13 janvier à Kurt Seifried a écrit : >> Again I'm still not clear on what/how a security boundary is being >> crossed. How does this elevate privileges or give you remote access >> that you wouldn't already if you can upload arbitrary PHP scripts? > XSLT 1.0, as defined by the W3C, doesn't allow to save the result of a > XSL transformation to the file system. This feature is an extension > provided by libxslt itself. As PHP 5 uses libxslt as its XSLT engine, > PHP applications parsing external/untrusted XSLT expose this feature. > > An attacker can provide specially crafted XSLT code which will create an > arbitrary file with chosen content ("0wn3d.php" in my example). Then, > this PHP file is requested by the attacker and executed. > > Somewhat similar to an undocumented file upload feature ... Right, but in this case to upload the file you need to put a custom php script on the server, so no additional privilege or access is gained. Is it common for these scripts to allow a remote user to specify the output location (this seems unlikely to me)? > Regards, > Nicolas > >   --   -- Kurt Seifried / Red Hat Security Response Team   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      