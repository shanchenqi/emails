  oss-security - Re: CVE request: Wireshark multiple vulnerabilities            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Thu, 19 Jan From: Kurt Seifried <kseifried@...hat.com> To: oss-security@...ts.openwall.com CC: Huzaifa Sidhpurwala <huzaifas@...hat.com>,         Agostino Sarubbo <ago@...too.org> Subject: Re: CVE request: Wireshark multiple vulnerabilities  On PM, Huzaifa Sidhpurwala wrote: > On AM, Kurt Seifried wrote: > On AM, Kurt Seifried wrote: >> On AM, Huzaifa Sidhpurwala wrote: >>> On AM, Kurt Seifried wrote: >>>> >>>> I agree in principle, however in practice this is a lot of work (as >>>> you >>>> well know =). I guess my question/concern would be is who does the >>>> research to verify all this, and what if it varies by version (i.e. it >>>> is 6 separate issues in an older version but the newer version >>>> combined >>>> some code into a common library for example so it's only a single >>>> issue, >>>> but with multiple avenues of attack/etc.). In other words a lot of >>>> potential work. >>> >>> >>> I did some research, with details available at: >>> and >>> >>> >>> In my opinion only 1 and 2 (ie ws bug and ws bug >>> should be allocated a CVE. >>> >>> Others are application crashes. >> >> Ok doke, so we already got Assigned for all of these. I >> slightly re-ordered them from the info at >> and an irc chat to >> confirm: >> >> ====== >> Type-cast error: Caused because of casting unsigned to signed int (ws >> bug >> This leaves the app in an unstable state. >> - >> 1. >> This is a type cast issue, caused because of casting an unsigned int to >> signed >> int. >> In the unfixed version this would throw an exception which the >> application >> would catch, but leave it in an unstable state. The patch makes sure >> that the >> value passed was less than G_MAXINT >> Patch: >> >> >> ======= >> Application crash/Dos because of trying to allocate too large a >> buffer size >> (ws bug >> - >> 2. >> 5Views file format DoS due to request to allocate too large a buffer >> size. >> Normally glib should terminate the application with something like >> "GLib-ERROR **: failed to allocate bytes" >> Resolved by clamping the value of packet_size >> Patch: >> >> >> 3. >> Same problem and solution but with i4b capture format now >> Patch: >> >> >> 5. >> Similar issue with netmon file format. >> Patch: >> >> >> ======= >> Integer underflow causing too large buffer to be allocated and a crash >> (ws bug >> - >> 4. >> Same problem and solution but with iptrace capture format. Also some >> checks for >> bad file format. >> Patch: >> >> >> ======= >> Memory corruption (buffer-overflow) when reading novell capture file >> format. glibc however detects this and terminates the application (ws >> bug >> - >> 6. >> Similar issue with netmon file format. >> Patch: >> >> >> ======= >> >> So we already have one CVE assigned for all these, my thought would be >> to use for the first one and assign new CVE's for >> the rest. Comments/questions? >> > > > You are correct, we may need to split this into 4 parts: > > > - typecast flaw Please continue to use for this issue  > - Dos due to too large buffer alloc requst Please use for these issues  > - Dos due to integer underflow and too large buffer alloc. request Please use for this issue  > - memory corruption due to buffer underflow Please use for this issue  --   -- Kurt Seifried / Red Hat Security Response Team   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      