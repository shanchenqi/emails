  oss-security - Re: Re: pwgen: non-uniform distribution of passwords            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 20 Jan From: Michael Niedermayer <michaelni@....at> To: oss-security@...ts.openwall.com Cc: valentino.angeletti@...l.com, bugtraq@...urityfocus.com, tytso@....edu Subject: Re: Re: pwgen: non-uniform distribution of passwords  On Thu, Jan 19, at Solar Designer wrote: > On Thu, Jan 19, at valentino.angeletti@...l.com wrote: > > may ask you what software (and how it works brute force ecc) you used? >  > John the Ripper, indeed - generating a custom .chr file (which is based > on trigraph frequencies) from a sample of 1 million of pwgen'ed > passwords and then using this file to crack another (non-overlapping) > sample of pwgen'ed passwords.  My initial notification to oss-security > and Bugtraq included these links, which describe this in more detail: >  > > > > >  > However, as I wrote in a followup posting to oss-security 2 days ago: >  > "I might update/revise my analysis on this issue in a few days. >  > Specifically, I now suspect that a (large) part of the apparent > non-uniformity of the distribution was in fact an artifact of my > analysis approach.  I only analyzed sets of 1 million of pwgen'ed > passwords, so I could not directly check the distribution of full > passwords (1 million is too little, even compared to the small keyspace > of these passwords), whereas JtR only uses trigraph frequencies. >  > I am now generating 1 billion of pwgen'ed passwords, which should take a > couple of days to complete. [...]" >  > >  > This has in fact completed by now: >  > $ ./pwgen -1cn 8 | dd obs=10M > 1g > records in > records out > bytes (9.0 GB) copied, seconds, kB/s >  > And I analyzed this larger sample briefly: >  > $ time -v -mem=25 1gu < 1g > Total lines read Unique lines written >  > real    > user    > sys     >  > So that's million unique passwords in 1 billion, which for a uniform > distribution would correspond to a total keyspace size of 1.3 billion: >  > $ ./solve > >  > I've attached the solve.c program to this message.  [ BTW, I verified > that there's no fatal precision loss in its expected_different() > function (despite of the risky expression) for the value ranges on which > it is called here.  I did so by also computing the expected different > value with a different (much slower) algorithm - just not as part of > equation solving (which would be slower yet). ] >  > However, let's see what numbers we get for smaller samples (actually, > subsets of the 1 billion sample above, but that's OK in this case): >  > Total lines read Unique lines written > Total lines read Unique lines written > Total lines read Unique lines written >  > $ ./solve > > $ ./solve > > $ ./solve >  Its also interresting to note that some password lengths are a lot worse than others and that longer does not equal better in some cases  $ pwgen -1cn 4 | sort | uniq -u |wc -l $ pwgen -1cn 5 | sort | uniq -u |wc -l $ pwgen -1cn 6 | sort | uniq -u |wc -l $ pwgen -1cn 7 | sort | uniq -u |wc -l $ pwgen -1cn 8 | sort | uniq -u |wc -l  lucky the default is not 5  [...]  --  Michael     GnuPG fingerprint:  The real ebay dictionary, page 2 positive feedback" - "All either got their money back or didnt complain" "Best seller ever, very honest" - "Seller refunded buyer after failed scam"  Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      