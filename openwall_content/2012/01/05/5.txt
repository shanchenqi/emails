  oss-security - Re: speaking of DoS, openssh and dropbear             Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 5 Jan From: The Fungi <fungi@...goth.org> To: oss-security@...ts.openwall.com Subject: Re: speaking of DoS, openssh and dropbear   On David Hicks wrote: > OpenBSD's pf also allows for connection rate limiting with the > "max-src-conn-rate" restriction. I haven't investigated how this works > in comparison to iptables/hashlimit or whether it can support grouping > of addresses sharing a common mask.  As far as I know, it doesn't. I use it like this in front of my public shell servers:     # stall brute force attacks... expects options like:    # (max-src-conn max-src-conn-rate overload <brutes> flush global)    # after a rule that can add brutes to the table of offenders    # once an hour, a cron job removes all entries at least an hour old    # (this can be adjusted near the end of /var/cron/tabs/root if necessary)    # to see what's in the table: sudo pfctl -t brutes -T show    # to manually remove entries: sudo pfctl -t brutes -T delete       table <brutes> persist    block drop log quick from <brutes> [...]    pass log quick proto tcp to $shell port ssh keep state ( max-src-conn max-src-conn-rate overload <brutes> flush global )  ...and then in /var/cron/tabs/root I have:     0 * * * * /sbin/pfctl -q -t brutes -T expire  Works well enough for a single-address attacker or an attacker with a limited number of addresses available, but it's obviously not robust against an attacker who decides to source connections from their entire IPv6 /64. To date it's put a good dent in the brute-force account guessing noise in my logs, though I'm not sure how long that will last as more and more attackers start working around the increasing number of source tracking mechanisms throttling their efforts. --  { IRL(Jeremy_Stanley); WWW(http://fungi.yuggoth.org/); WHOIS(STANL3-ARIN); SMTP(fungi@...goth.org); FINGER(fungi@...goth.org); IRC(fungi@....yuggoth.org#ccl); }  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      