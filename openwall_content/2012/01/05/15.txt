  oss-security - Re: CVE Requests for FFmpeg            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 5 Jan From: Michael Niedermayer <michaelni@....at> To: Kurt Seifried <kseifrie@...hat.com> Cc: oss-security@...ts.openwall.com Subject: Re: CVE Requests for FFmpeg  On Thu, Jan 05, at Kurt Seifried wrote: > On AM, Michael Niedermayer wrote: > > Hi > > > > Id like to request some CVE #s for ffmpeg > > to lookup the git hashes see: > > http://source.ffmpeg.org/?p=ffmpeg.git;a=summary > > or put "http://source.ffmpeg.org/?p=ffmpeg.git;a=commitdiff;h=" > > before each hash > > > > I tried to sort the issues a little according to type to make this huge list a > > bit less ugly. Also feel free to skip things considered too minor, iam > > not sure where the threshold of "too minor" is. > > > > > > Out of array reads: > > vc1dec: fix invalid memory access for small video dimensions > > rv34: fix invalid memory access for small video dimensions > > qpeg: Check for overread in qpeg_decode_intra. > > vcr1dec: Check that there is sufficient input data. > > Check for sufficient input data. > > Fix a possible overread in decode_nal_units() > > kvmc: fix invalid reads > > proresdec: Check yuv slice data sizes. > >                                          > > truespeech: fix invalid reads in truespeech_apply_twopoint_filter() > > alac: Check for bitstream overread > >                                          > > xl: Fix overreads > > smacker: Check for overread in smka_decode_frame() > > flicvideo: input buffer pointer checks. > > flicvideo: fix overread. > > ulti: Fix invalid reads > > msrledec: Check for overreads > > 4xm: check if there are bits left in decode_i_block() > >                                          > > aascdec: Check input buffer size on raw data. > > mpeg12dec: reset first_field with picture_structure changes. > >                                          > > > > > > HEAP buffer overflows: (write) > > lavfi: add missing check in avfilter_filter_samples() > >     Simple case of missing check, there wasnt much using the audio filters so > >     this probably is not practically exploitable > > > > ws_snd1: Fix wrong samples count and crash. > >     Simple case of amount written and check mismatching > > > > j2kdec: Fix integer overflow leading to a segfault > >                                          > >     The check missed negative values, j2k is marked as experimental though so > >     depending on the user app this may require the user to enable it. > > > > aacsbr: Fix memory corruption. > >                                          > >     v_off becoming negative and writes based on this overwriting various fields > >     of the struct which valgrind didnt detect. > > > > check chroma_format_idc range. > >                                          > > > > adpcm: Fix crash > >                                          > >     Allocation for X channels, write for 2, this adds a X!=2 check > > > > atrac3: Fix crash in tonal component decoding. > >                                          > >     Simple case of index becoming bigger than array without checks > > > > CODEC_ID_SOL_DPCM: Fix used write buffer. > >     Wrong pointer being used to write after recent audio API change. > > > > j2kdec: Check curtileno for validity > >     Simple missing check for index and array size. j2k is marked as experimental though so > >     depending on the user app this may require the user to enable it. > > > > Fix regression / crash with lowres. > >                                          > >     memset of the full size in a reduced size buffer, this requires the user > >     to enable lowres > > > > HEAP+possible STACK buffer overflow: (write) > > j2kdec: Fix crash in get_qcx > >     Simple missing check for index and array size. j2k is marked as experimental though so > >     depending on the user app this may require the user to enable it. > > > > > > Infinite loops: > > Fix possible infinite loop decoding als. > > mlp_parser: Fix infinite loop with 0 bytes_left. > > shorten: validate values in fmt chunk search > > golomb: Fix infinite loop in svq3_get_ue_golomb() > > asfdec: fix endless loop on EOF > > lzo: fix memcpy_backptr() with 0 offset > > Fix a possible endless loop when decoding aac. > > mxfdec: Sanity check PreviousPartition > > mxfdec: Check url_feof() in mxf_read_local_tags() > > avidec: move eof check before continue. > >                                          > > adx_parser: rewrite. > > adx_parser: Fix infinite loop. > > Fix possible endless loop when decoding amr. > > avidec: Fix infinite loop caused by rounding of timestamps in non interleaved avis. > >                                          > > > > > > (near) Null pointer dereferences: > > nsvdec: Check av_malloc(string_size) > > indeo5: Fix null pointer dereferences of ref_mb > > indeo5: fix null pointer crash with ref_mb > > Fix crash due to partially initialized gop vars. > > mxfdec: Check for NULL component > > indeo3: Fix null ptr dereference > >                                          > > indeo5: Fix null pointer dereference > >                                          > > tm2: Check remaining size before init_get_bits() > >                                          > > aacdec: Fix null pointer crash > > applehttp: Properly clean up if unable to probe a segment > > soxdec: check av_malloc return. > > mxfdec: Move the current_partition check inside mxf_read_header() > > ffmpeg: check return code from av_vsrc_buffer_add_frame() > >                                          > > > > > > Division by zero: > > electronicarts: Fix division by zero. Fixes Ticket > >                                          > > indeo5: fix division by 0 in ff_ivi_init_tiles() > > Fix a crash when reading gray pam files. > >                                          > > mpeg4videodec: Fix division by zero in mpeg4_decode_sprite_trajectory() > > j2kdec: fix division by zero, check tile dimensions for validity > > ipmovie: fix FPE > >                                          > > adxdec: Fix division by zero > > adpcm: Check for channels to be a non-zero integer > > cljr: Check if width or height are positive integers > > mtv: Fix FPE with 0 dimensions. > >                                          > > rl2demux: Fix FPE > > westwood: Make sure audio header info is present when parsing audio packets > > > > > > Things that didnt fit in above: > > shorten: Fix invalid free() > >     Adding a offset after realloc() but not undoing that before a possible > >     2nd realloc() > > > > > > vorbis: Fix last quarter of > >     This fixes a apparently forgoten case in the original patchset from google > >     Ive reproduced this by setting multiplier to the maximal value that it could > >     reach > > > > swr: fix assert failure > > > > riff: Fix freeing of random value. > >     someone tried to free an array from the stack > >                                          > > > > > > > > Thanks > Can you or someone else take this and comment on the security > implications of each of these? (code exec, dos, etc.) and indicate if it > crosses a security boundary? (the list is to big for me to take on > anytime this week).  The divisions by zero and null ptr dereferences should all allow one to crash the lib and application. Which makes them DOS in some use cases  The infinite loops should all be DOS  The out of array reads may or may not cause a crash  In case of the writes i dont feel qualified to call any with certainity not "code exec" exploitable. Though i doubt could be exploited, it just writes a fixed byte value that the attacker cannot control  Nothing in ffmpeg runs with elevated rights so there should be no way to get extra rights from any of these.  And almost all of these have been found through using zzuf so they can be triggered by crafted input and that can be remote like via http   > Also are these all CVEs?  I dont know what seperates and CVEs ? The list includes all things found after FFmpeg 0.9 (december   [...] --  Michael     GnuPG fingerprint:  During times of universal deceit, telling the truth becomes a revolutionary act. -- George Orwell  Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      