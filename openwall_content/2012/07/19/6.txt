  oss-security - and Squashfs overflows            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Thu, 19 Jul (EDT) From: cve-assign@...re.org To: oss-security@...ts.openwall.com Cc: cve-assign@...re.org Subject: and Squashfs overflows  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1   We wanted to mention these two recent open-source CVEs here because the upstream vendor expressed a position that the issues don't qualify for CVE inclusion, and indicated that he often uses CVE in his work on code unrelated to Squashfs.  This post isn't meant to suggest any level of urgency for Linux distributions to produce new Squashfs packages. It's conceivable that actual exploitation of these vulnerabilities will never occur anywhere.  Although Squashfs is a Linux filesystem, these two CVEs are about a utility program that is, in some ways, similar to tar or other archive programs. In general, if an archive file might be obtained from an untrusted remote source, and crafted data within the archive file potentially leads to arbitrary code execution during extraction, the issue can be included in CVE. There are many CVEs in this category (e.g., see and in also fits into this category.  is different because the crafted data isn't in the archive file. Specifically, the crafted data must be in a list file that's similar to the list file used with the "tar -T" option. One threat model is that an attacker announces 'We have created an example of our project as a squashfs filesystem. The downloadable files are myproject.sqsh and myproject.list. If you only want the source code, you can extract it by running the "unsquashfs myproject.sqsh -ef myproject.list" command.' If myproject.list is long enough (e.g., thousands of lines with reasonable source-code filenames and one line with exploit code), probably most people wouldn't notice that the file isn't legitimate.  Some similar issues involving archive programs don't qualify for CVE inclusion because there is no plausible threat model. Ones that are proposed occasionally include situations where a crafted filename must be entered on the command line, and situations where the victim must use a crafted configuration file.  - --  CVE assignment team, MITRE CVE Numbering Authority M/S Burlington Road, Bedford, MA USA [ PGP key available through http://cve.mitre.org/cve/obtain_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG (SunOS)  =Ov+l -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      