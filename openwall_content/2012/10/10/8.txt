  oss-security - Fwd: IPv6 DOS vulnerabilities            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Wed, 10 Oct From: Marc Heuse <mh@...sec.de> To: oss-security@...ts.openwall.com CC: Solar Designer <solar@...nwall.com> Subject: Fwd: IPv6 DOS vulnerabilities  Alexander kicked me several times in the ass to finally forward this email to oss-security as the embargo time is gone ... so here it is.   -------- Original-Nachricht -------- Betreff: IPv6 DOS vulnerabilities Von: Marc Heuse <mh@...sec.de> An: Microsoft Security Response Center <secure@...rosoft.com>, security-officer@...eBSD.org, product-security@...le.com Kopie (CC): distros@...openwall.org  Hi folks,  this is just a short, quick email about two unspectecular IPv6 implementation weaknesses that result in local network denial-of-service issues in Windows, *BSD (Free and Net, Open not tested) and OS X. distros@ is in cc: for information purposes, although it seems that Linux is not affected, you might want to test though as I have only tested this with a 2.6.x kernel.   Issue #1:  Flooding the local target with ICMPv6 Neighbor Solicitation messages. As this is handled by the kernel, it consumes all CPU power that is there, leaving no or too little CPU for the user space.  All except of OS/X went to CPU, OS X went to 60%+ on a QuadCore Macbook Pro. But my test machine was not able to produce enough packets to even closely get to the satturation point of the network, so the CPU might be reachable there too.  In short: a fast multicore CPU helps to negate the impact (unless you are Windows, then this does not help).  Test tool: flood_solicate eth0 <IPv6-Linklocal-Address-of-Target> (from the package at www.thc.org/thc-ipv6)   Issue #2:  Flooding the local network with ICMPv6 Router Advertisement packets containing multiple Routing entries result in either CPU (Windows all Versions with IPv6 enabled) or some noticable CPU impact however IPv6 seem to break for *BSD and OS X. The BSD based systems do not reply to any ICMPv6 Neighbor Solicitation requests anymore, when trying to send locally from the victim systems you get errors (e.g. "connect failed" or "no multicast address on interface")  (yes, this is basically a similar issue like RA flooding with autoconfig prefixes from two years ago)  I have an unreleased test tool for this attack, if necessary I can package it and send it if needed.   (I am sitting on this for over a half year now, sorry for that)  Greets, Marc  -- Marc Heuse www.mh-sec.de  PGP: FEDD F8DF 5CB9  7FDD BF4F  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      