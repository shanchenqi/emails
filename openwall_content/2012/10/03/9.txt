  oss-security - Re: CVE Request: Ruby safe level bypasses            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Wed, 03 Oct From: Kurt Seifried <kseifried@...hat.com> To: Tyler Hicks <tyhicks@...onical.com> CC: oss-security@...ts.openwall.com, coley@...us.mitre.org,         security@...ntu.com, security@...y-lang.org Subject: Re: CVE Request: Ruby safe level bypasses  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  On PM, Tyler Hicks wrote: > On Kurt Seifried wrote: >> On PM, Tyler Hicks wrote: >>> Hello - Upstream Ruby has fixed[1] exception methods that  >>> incorrectly allowed safe level bypasses. These bypasses >>> allowed untainted strings to be modified by untrusted code in >>> safe level 4. >>>  >>> Note that the changes to exc_to_s() and name_err_to_s(), in  >>> error.c, are similar to the fix for but the >>> Ruby advisory[2] made it clear that Ruby 1.9.x was not affected >>> by It turns out that the vulnerability was >>> later reintroduced to Ruby's trunk in revision Ruby >>> and later is affected. >>>  >>> While Shugo Maeda was fixing the issue above, he noticed that  >>> name_err_mesg_to_str() had a similar flaw. Ruby 1.8.x, along >>> with and later is affected. >>>  >>> I believe that these issues need two separate CVEs. Both >>> issues are fixed in the same upstream patch[1]. Could you >>> please allocate ids? >>>  >>> Thanks, Tyler >>>  >>> [1]  >>> >>> >>> >> >>>  [2] >> >>> >> >> >>  Please use for this issue. >  > Hi Kurt - I think that two CVE ids are needed here. >  > All issues are fixed in the same upstream patch but some issues in > that patch affect different versions. I'll use the notation from > "CVE Abstraction Content Decisions: Rationale and Application" to > describe how I see it: >  > S1: The vulnerability found in exc_to_s() S2: The vulnerability > found in name_err_to_s() S3: The vulnerability found in > name_err_mesg_to_str() >  > S1, S2 and S3 are the same type of bug. S1 and S2 appear in the > same versions and newer), so MERGE them. S3 appears in > 1.8.x, as well as and newer, so SPLIT it from S1 and S2.  And this is why I should probably be more aggressive about asking for commits to be broken out by software version if multiple versions are affected =).  Ok let's continue to use for the exc_to_s() and name_err_to_s() issues which affect and newer.  For name_err_mesg_to_str() which affects both and newer and 1.8.x please use  > Tyler >    - --  Kurt Seifried Red Hat Security Response Team (SRT) PGP: A90B 66BF  -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux) Comment: Using GnuPG with Mozilla - http://www.enigmail.net/  =jfkc -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      