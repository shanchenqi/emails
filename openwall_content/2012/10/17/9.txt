  oss-security - Re: CVE request: ruby file creation due in insertion  of illegal NUL character            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 17 Oct From: Simon McVittie <smcv@...ian.org> To: oss-security@...ts.openwall.com Subject: Re: CVE request: ruby file creation due in insertion  of illegal NUL character  On Kurt Seifried wrote: > Avtually looking at that page it appears that no modern file  > systems allows NUL in a file name (and in general I suspect it's a > bad idea/leads to some nasty edge case issues).  Anything that, directly or indirectly, uses Unix-style APIs to access files can't possibly support NUL in a filename anyway, since those APIs receive the filename as a NUL-terminated string.  > Personally I think the perlopentut case makes sense, using NUL as > an end of string marker. What happens if stuff comes after it > though?  For Perl, one possibility would be to continue to treat an input of "foo\0" as equivalent to "foo" (so that you can use "./ foo \0" to mean " foo ", as documented), but disallow NULs anywhere except the last position.      S  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      