  oss-security - [PATCH] memory consumption (DoS) in openssl            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Wed, 13 Jan From: "Michael K. Johnson" <johnsonm@...th.com> To: oss-security <oss-security@...ts.openwall.com> Subject: [PATCH] memory consumption (DoS) in openssl  Previously, an initialization-related memory leak involving openssl was given and worked around in mod_ssl; see for example  However, this did not resolve the general problem, and an rPath customer recently reproduced essentially the same memory leak via another pathway.  This new pathway was assigned Initially, the suggestion was to fix the leak via modifications to php or curl in the same way that mod_ssl was previously fixed, but then Andy Grimm provided a patch to openssl that would not only resolve the issue for curl/php but also for any other as-yet-unknown new vectors.  Dr. Stephen Henson, an openssl core team member, provided a new openssl patch which rPath has confirmed resolves the issue, and which Dr. Henson is committing to upstream openssl. Dr. Henson's patch is attached to this email.  The specific symptom of this new pathway is that any vulnerable system will leak hundreds of KB of memory per SSLv3 connection after apache has been gracefully restarted (SIGHUP).  Temporary mitigation strategies include limiting the number of requests that an apache worker can serve to limit the quantity of leaked memory, and doing full restarts rather than graceful restarts of apache.  Some discussion regarding this issue is in two issue reports:  (I cannot make the Red Hat bugzilla report public, but assume that it will be made public today.)  View attachment of type "text/plain" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      