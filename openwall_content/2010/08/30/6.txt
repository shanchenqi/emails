  oss-security - Re: [PATCH] exec argument expansion can inappropriately trigger OOM-killer            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 30 Aug From: Solar Designer <solar@...nwall.com> To: Roland McGrath <roland@...hat.com> Cc: Kees Cook <kees.cook@...onical.com>, linux-kernel@...r.kernel.org, 	oss-security@...ts.openwall.com, Al Viro <viro@...iv.linux.org.uk>, 	Andrew Morton <akpm@...ux-foundation.org>, 	Oleg Nesterov <oleg@...hat.com>, 	KOSAKI Motohiro <kosaki.motohiro@...fujitsu.com>, 	Neil Horman <nhorman@...driver.com>, linux-fsdevel@...r.kernel.org Subject: Re: [PATCH] exec argument expansion can inappropriately trigger OOM-killer  On Mon, Aug 30, at Solar Designer wrote: > Additionally, 64bit_dos.c mentions that "it triggers a BUG() as the > stack tries to expand around the address space when shifted". [...] > which is likely part of a fix (but not the entire fix) for what the > comment in 64bit_dos.c refers to.  However, I was not able to trigger > the BUG_ON() on RHEL5'ish kernels by simply running the 64bit_dos > program (64-bit to 32-bit exec) on two systems, one with 2 GB RAM, the > other with 4 GB.  Of course, I set "ulimit -s unlimited" first.  I am finally able to trigger the BUG by replacing "/bin/sh" with "/bin/false" in 64bit_dos.c, relying on our library-free implementation of /bin/false on Owl:  owl!solar:~$ objdump -d /bin/false  /bin/false:     file format  Disassembly of section .text:  <.text>:        b8 01 00 00 00          mov    $0x1,%eax        bb 01 00 00 00          mov    $0x1,%ebx        cd 80                   int     owl!solar:~$ file 64bit_dos 64bit_dos: ELF 64-bit LSB executable, AMD version 1 (SYSV), for GNU/Linux statically linked, for GNU/Linux stripped  (the "exploit" is statically-linked since I brought it from another machine, I don't think this matters).  After looping in the kernel for about 10 seconds, I got:  Kernel BUG at [...] Call Trace:       [...] Code: 0f 0b 68 fe 93 3e 80 c2 17 02 48 8b 7c 24 08 4c 89 fe e8 da  RIP   The kernel is a revision and custom build of (whatever I happened to readily have installed on a test system). I think the problem should be reproducible with current RHEL5 kernels and likely with latest mainstream kernels as well.  The process is stuck:  solar     2.8 pts/0 D+     [false]  (uninterruptible)  3 GB memory is still taken.  Alexander  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      