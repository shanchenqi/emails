  oss-security - kernel: can: add limit for nframes and clean up signed/unsigned  variables            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Fri, 20 Aug From: Eugene Teo <eugeneteo@...nel.sg> To: oss-security@...ts.openwall.com CC: "Steven M. Christey" <coley@...us.mitre.org> Subject: kernel: can: add limit for nframes and clean up signed/unsigned  variables  Upstream commit:  Discovered by Ben Hawkes. From the description of the patch: "This patch  adds a limit for nframes as the number of frames in TX_SETUP and  RX_SETUP are derived from a single byte multiplex value by default.  Use-cases that would require to send/filter more than CAN frames  should be implemented in userspace for complexity reasons anyway.  Additionally the assignments of unsigned values from userspace to signed  values in kernelspace and vice versa are fixed by using unsigned values  in kernelspace consistently."  This can lead to a local denial of service or privilege escalation.  This can be mitigated by blacklisting the can/can_bcm modules.   I got the CVE name from a recent Ubuntu advisory.  Thanks, Eugene --  main(i) { >> (i-1) * && main(++i); }  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      