  oss-security - Re: Request -- ssmtp -- standardise() --  Buffer overflow            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Thu, 19 Aug (EDT) From: "Steven M. Christey" <coley@...us.mitre.org> To: oss-security <oss-security@...ts.openwall.com> cc: "Steven M. Christey" <coley@...us.mitre.org> Subject: Re: Request -- ssmtp -- standardise() --  Buffer overflow   On Mon, 26 Jul Jan Lieskovsky wrote:  >  Brendan Boerner reported: >  [1] > > a deficiency in the way ssmtp removed trailing '\n' sequence > by processing lines beginning with a leading dot. A local user, > could send a specially-crafted e-mail message via ssmtp send-only > sendmail emulator, leading to ssmtp executable denial of service (exit with: > ssmtp: standardise() -- Buffer overflow). Different vulnerability > than  was assigned to this, but is it really a vulnerability?  It  seems like the attacker can only DoS himself.  Thoughts?  from one of our CVE analysts:     The product's first relevant behavior is to call "fgets(buf,    sizeof(buf), stdin)" -- this is a safe call and cannot overflow a    buffer. There is a "char buf[(BUF_SZ + 1)]" declaration, and BUF_SZ is    The product then (in the standardise function) assigns sl to the    strlen value of buf. It then performs the test "if((sl + 2) > BUF_SZ"    and calls "exit(1)" if this test succeeds. If sl is or more, the    test succeeds. If sl is or less, the test fails. In the case,    the buffer has characters obtained from stdin, followed by a '\0'    character. In this case, the product then calls memmove to move    characters forward by one in the buffer. In other words, characters at    positions 0 through (inclusive) are moved to positions 1 through    This is OK because the valid positions in the buffer are 0 through    There are arguably two problems in the code. The first is that the    fgets perhaps should not read more than characters, because the    standardise function does not want to see more than This is only a    usability problem. The role of the sSMTP product is to read a single    e-mail message from stdin and then exit. The product does not maintain    state, listen for connections, use setuid privileges, etc. The    mishandling of messages with certain long lines only means that the    sender of such a message can DoS himself. The issue does not cross    privilege boundaries. Also note that the product cleanly detects the    long line and calls exit(1) -- the product does not crash. The other    problem in the code is that the standardise function apparently can    handle characters but chooses to reject anything larger than    Again, this is solely a usability problem.   - Steve     > References: >  [2] >  [3] >  [4] >  [5]  > >  [6]  > >  [7]  > > > Debian Linux distribution patch: >  [8]  > > > Public PoC (from >  [9] ( 0. Install & configure ssmtp, of course ) >        1. (echo -n . ; for i in ; do echo -n $i ; done) | mail  > root > > Couldn't find ssmtp identifier for this > (http://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=ssmtp). > > Steve, could you allocate one? > > Thanks && Regards, Jan. > -- > Jan iankko Lieskovsky / Red Hat Security Response Team >  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      