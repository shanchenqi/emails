  oss-security - Re: filesystem capabilities            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 10 Nov From: Kees Cook <kees@...ntu.com> To: oss-security@...ts.openwall.com Subject: Re: filesystem capabilities  On Mon, Nov 08, at Steve Grubb wrote: > >While in general this is a good idea, there are issues with it,  > >in arbitrary order: > > > >- Some currently-SUID programs are aware of them being (potentially) SUID, and  > >will drop the "more privileged" euid when it is no longer needed, but they will > >probably not be aware of them possessing capabilities. >  > This is an artifact of having a capabilities library that takes several lines of code  > to do anything. It is more correct to check for capabilities that trusting that euid  > means that you have certain powers. In my opinion, a lot of this code should be  > cleaned up so that its correct.  Right, it's not just a matter of dropping setuid bits and adding fscaps; these tools each need to be changed to understand fscaps and correctly drop privs. Which is especially true for "mixed" environments where the code could run _either_ as setuid or with fscaps. Building that logic into the cap library (which ever one) is the plan, as I understand.  > The intent of this project is to get the patches and user space work done. We know  > that just setting the bit is not all that has to be done.  Yup, and Debian and Ubuntu have even further to go since their userspace and package manager don't even handle xattrs. It would be nice if upstream tar took the xattr patches. Steve, are there any plans to make that happen?  -Kees  --  Kees Cook Ubuntu Security Team  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      