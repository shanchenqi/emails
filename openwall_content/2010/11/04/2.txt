  oss-security - Re: CVE request: kernel: sys_semctl: fix kernel stack  leakage            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Thu, 04 Nov From: Eugene Teo <eugene@...hat.com> To: oss-security@...ts.openwall.com CC: "Steven M. Christey" <coley@...us.mitre.org> Subject: Re: CVE request: kernel: sys_semctl: fix kernel stack  leakage  On PM, Eugene Teo wrote: > "The semctl syscall has several code paths that lead to the leakage of > uninitialized kernel stack memory (namely the IPC_INFO, SEM_INFO, > IPC_STAT, and SEM_STAT commands) during the use of the older, obsolete > version of the semid_ds struct. > > The copy_semid_to_user() function declares a semid_ds struct on the > stack and copies it back to the user without initializing or zeroing the > "sem_base", "sem_pending", "sem_pending_last", and "undo" pointers, > allowing the leakage of 16 bytes of kernel stack memory. > > The code is still reachable on 32-bit systems - when calling semctl() > newer glibc's automatically OR the IPC command with the IPC_64 flag, but > invoking the syscall directly allows users to use the older versions of > the struct." > > Upstream commit: > > > Credit: Dan Rosenberg > > Reference: >  Whoops, this has been assigned  Thanks, Eugene --  main(i) { >> (i-1) * && main(++i); }  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      