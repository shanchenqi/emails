  oss-security - xen: emulator instruction decoding inconsistency            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Fri, 07 May From: Eugene Teo <eugene@...hat.com> To: oss-security@...ts.openwall.com CC: coley@...us.mitre.org Subject: xen: emulator instruction decoding inconsistency  Assigned with It does not affect upstream. For more info,  please see  Due to a mismatch between the opcode decoding table and the  implementation of the operand decoder in platform.c, the ARPL  instruction would cause the guest to crash if executed on a MMIO area.  While this is difficult to exploit from non-root, it is theoretically  possible to do so.  This fix changes the failure path to inject #UD instead of crashing the  domain. The guest kernel will transform the #UD into a SIGILL. ---   arch/x86/hvm/platform.c |    4 +++-   1 files changed, 3 insertions(+), 1 deletions(-)  diff --git a/arch/x86/hvm/platform.c b/arch/x86/hvm/platform.c index --- a/arch/x86/hvm/platform.c +++ b/arch/x86/hvm/platform.c @@ @@ void handle_mmio(unsigned long gpa)           for ( i = 0; i < inst_len; i++ )               printk(" %02x", inst[i] & 0xFF);           printk("\n"); -        domain_crash_synchronous(); + +	hvm_inject_exception(TRAP_invalid_op, -1, 0); +	return;       }        regs->eip += inst_len; /* advance %eip */ --   --  main(i) { >> (i-1) * && main(++i); }  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      