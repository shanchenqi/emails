  oss-security - [PATCH 2/3] execve: improve interactivity with large arguments            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue,  7 Sep (PDT) From: Roland McGrath <roland@...hat.com> To: Linus Torvalds <torvalds@...ux-foundation.org>,         Andrew Morton <akpm@...ux-foundation.org> CC: linux-kernel@...r.kernel.org, oss-security@...ts.openwall.com,         Solar Designer <solar@...nwall.com>,         Kees Cook <kees.cook@...onical.com>, Al Viro <viro@...iv.linux.org.uk>,         Andrew Morton <akpm@...ux-foundation.org>,         Oleg Nesterov <oleg@...hat.com>,         KOSAKI Motohiro <kosaki.motohiro@...fujitsu.com>,         Neil Horman <nhorman@...driver.com>, linux-fsdevel@...r.kernel.org,         pageexec@...email.hu,         "Brad Spengler <spender@...ecurity.net>     Eugene Teo" <eugene@...hat.com> Subject: [PATCH 2/3] execve: improve interactivity with large arguments  This adds a preemption point during the copying of the argument and environment strings for execve, in copy_strings().  There is already a preemption point in the count() loop, so this doesn't add any new points in the abstract sense.  When the total argument+environment strings are very large, the time spent copying them can be much more than a normal user time slice. So this change improves the interactivity of the rest of the system when one process is doing an execve with very large arguments.  Signed-off-by: Roland McGrath <roland@...hat.com> ---  fs/exec.c |    2 ++  1 files changed, 2 insertions(+), 0 deletions(-)  diff --git a/fs/exec.c b/fs/exec.c index --- a/fs/exec.c +++ b/fs/exec.c @@ @@ static int copy_strings(int argc, const char __user *const __user *argv,  		while (len > 0) {  			int offset, bytes_to_copy;   +			cond_resched(); +  			offset = pos % PAGE_SIZE;  			if (offset == 0)  				offset = PAGE_SIZE;  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      