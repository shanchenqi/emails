  oss-security - [PATCH 3/3] execve: make responsive to SIGKILL with large arguments            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue,  7 Sep (PDT) From: Roland McGrath <roland@...hat.com> To: Linus Torvalds <torvalds@...ux-foundation.org>,         Andrew Morton <akpm@...ux-foundation.org> CC: linux-kernel@...r.kernel.org, oss-security@...ts.openwall.com,         Solar Designer <solar@...nwall.com>,         Kees Cook <kees.cook@...onical.com>, Al Viro <viro@...iv.linux.org.uk>,         Andrew Morton <akpm@...ux-foundation.org>,         Oleg Nesterov <oleg@...hat.com>,         KOSAKI Motohiro <kosaki.motohiro@...fujitsu.com>,         Neil Horman <nhorman@...driver.com>, linux-fsdevel@...r.kernel.org,         pageexec@...email.hu,         "Brad Spengler <spender@...ecurity.net>     Eugene Teo" <eugene@...hat.com> Subject: [PATCH 3/3] execve: make responsive to SIGKILL with large arguments  An execve with a very large total of argument/environment strings can take a really long time in the execve system call.  It runs uninterruptibly to count and copy all the strings.  This change makes it abort the exec quickly if sent a SIGKILL.  Note that this is the conservative change, to interrupt only for SIGKILL, by using fatal_signal_pending().  It would be perfectly correct semantics to let any signal interrupt the string-copying in execve, i.e. use signal_pending() instead of fatal_signal_pending(). We'll save that change for later, since it could have user-visible consequences, such as having a timer set too quickly make it so that an execve can never complete, though it always happened to work before.  Signed-off-by: Roland McGrath <roland@...hat.com> ---  fs/exec.c |    7 +++++++  1 files changed, 7 insertions(+), 0 deletions(-)  diff --git a/fs/exec.c b/fs/exec.c index --- a/fs/exec.c +++ b/fs/exec.c @@ @@ static int count(const char __user * const __user * argv, int max)  			argv++;  			if (i++ >= max)  				return -E2BIG; + +			if (fatal_signal_pending(current)) +				return -ERESTARTNOHAND;  			cond_resched();  		}  	} @@ @@ static int copy_strings(int argc, const char __user *const __user *argv,  		while (len > 0) {  			int offset, bytes_to_copy;   +			if (fatal_signal_pending(current)) { +				ret = -ERESTARTNOHAND; +				goto out; +			}  			cond_resched();    			offset = pos % PAGE_SIZE;  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      