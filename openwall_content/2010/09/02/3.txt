  oss-security - Re: CVE id request: libc fortify source information disclosure            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 2 Sep From: Dan Rosenberg <dan.j.rosenberg@...il.com> To: oss-security@...ts.openwall.com Cc: coley@...us.mitre.org Subject: Re: CVE id request: libc fortify source information disclosure  Tomas,  > For the sake of correctness, protective technology that kicks in in the > Dan's example is stack protector, not FORTIFY_SOURCE.  Though it's > probably still glibc to blame for using the same error-reporting > function in both cases.  You are correct.  Both the __stack_chk_fail(), which is inserted due to stack protection, and the more general __chk_fail(), which is inserted due to FORTIFY_SOURCE and may trigger for static buffer overflows in other segments, call out to the same __fortify_fail() function to print out the stack trace.  > > It seems the fix would need to remove all possibly-useful info from the > error message. >  The backtrace or memory map don't really contain any potentially sensitive information that couldn't be obtained otherwise.  It's just the reference to argv[0] (in glibc/debug/fortify_fail.c) that worries me, because this can be directly influenced to cause a printout of process memory.  > -- > Tomas Hoger / Red Hat Security Response Team >  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      