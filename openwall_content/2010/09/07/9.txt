  oss-security - Re: Re: [Security] /proc infoleaks            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 7 Sep From: Marcus Meissner <meissner@...e.de> To: oss-security@...ts.openwall.com Cc: Andrew Morton <akpm@...ux-foundation.org>, security@...nel.org, 	spender@...ecurity.net Subject: Re: Re: [Security] /proc infoleaks  On Tue, Sep 07, at Sebastian Krahmer wrote: > On Tue, Sep 07, at Andrew Morton wrote: > > On Tue, 7 Sep Sebastian Krahmer <krahmer@...e.de> wrote: > >  > > > I have been elected to receive the bashing from all sides, > > > so here we go. > > > It is not about a new vulnerability or even a new discussion > > > but needs to be discussed, at least that we have a clear > > > statement about the status quo. > > >  > > > Recent i-CAN-haz-MODHARDEN.c has shown once *again* that > > > certain file permissions make no sense except to exploitation > > > development. There is no reason to have files like > > >  > > > /proc/kallsyms > > > /proc/slabinfo > > > /proc/zoneinfo > > >  > > > and probably a lot of others world readable. The symbol > > > addresses might be hard-coded for a certain targetlist > > > inside the exploit so you can argue that there > > > wont be any protection benefit from making it unreadable. > > > However this argument aint a reason to also leak it for self-compiled > > > kernels and doesnt even hold for dynamic/runtime content > > > like slabinfos etc. > > > It would be nice to have something like > > >  > > > echo 1 > /proc/quiet > > >  > > > or something like a umask for kernel-owned proc > > > entries so that you have a polite default and are > > > still able to enable it for certain profiling tools > > > or whereever you need it. > >  > > chmod /proc/slabinfo > >  > Heh, indeed. :-) > Would it be a bad idea to have proc_create() use a more strict > mode so it is non-leaking by default?  Yeah, sane and a bit more strict, defaults are missing.  The little pieces of information leakage out of the kernel should be fixed, to raise the bar for kernel exploits in little steps at a time.  Ciao, Marcus  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      