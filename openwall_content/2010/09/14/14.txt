  oss-security - Re: [PATCH 1/3] setup_arg_pages: diagnose excessive argument size            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 14 Sep (PDT) From: Roland McGrath <roland@...hat.com> To: pageexec@...email.hu Cc: KOSAKI Motohiro <kosaki.motohiro@...fujitsu.com>,         Brad Spengler <spender@...ecurity.net>,         Linus Torvalds <torvalds@...ux-foundation.org>,         Andrew Morton <akpm@...ux-foundation.org>,         linux-kernel@...r.kernel.org, oss-security@...ts.openwall.com,         Solar Designer <solar@...nwall.com>,         Kees Cook <kees.cook@...onical.com>, Al Viro <viro@...iv.linux.org.uk>,         Oleg Nesterov <oleg@...hat.com>, Neil Horman <nhorman@...driver.com>,         linux-fsdevel@...r.kernel.org, Eugene Teo <eugene@...hat.com> Subject: Re: [PATCH 1/3] setup_arg_pages: diagnose excessive argument size  > obviously an AT_ARGMAX computed at execve time would be based on the rlimits > as well and if later userland changed the rlimits, it'd be userland's problem, > not that of the kernel (or the kernel could refuse a change that would violate > its earlier promise).  This would thoroughly defeat the purpose of adding the thing.  The only reason to have a new thing is so that userland does not have to mirror the kernel's policy (as it attempts to do now, with the 1/4 calculation).  If the new thing is not something that userland can use consistently so as not to have to know what the kernel's actual policy is, then I don't see the point of it at all.  > >  auxv is only appropriate for things that > > are known at the time of the exec and won't change thereafter. >  > you mean stuff like AT_EUID et al.? ;)  The information that these give is about the conditions at startup. That's what they mean to userland, and userland only uses them to know the situation before it has made any calls.  The definition of AT_EUID is "effective user ID at program startup", and that fact does not change.  You proposed AT_ARGMAX for a purpose that requires knowing the current information in the process at the time it might attempt an execve call, not at startup.  It is not an equivalent case.   Thanks, Roland   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      