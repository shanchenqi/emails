  oss-security - Re: [PATCH 1/3] setup_arg_pages: diagnose excessive argument size            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 14 Sep (PDT) From: Roland McGrath <roland@...hat.com> To: pageexec@...email.hu Cc: KOSAKI Motohiro <kosaki.motohiro@...fujitsu.com>,         Brad Spengler <spender@...ecurity.net>,         Linus Torvalds <torvalds@...ux-foundation.org>,         Andrew Morton <akpm@...ux-foundation.org>,         linux-kernel@...r.kernel.org, oss-security@...ts.openwall.com,         Solar Designer <solar@...nwall.com>,         Kees Cook <kees.cook@...onical.com>, Al Viro <viro@...iv.linux.org.uk>,         Oleg Nesterov <oleg@...hat.com>, Neil Horman <nhorman@...driver.com>,         linux-fsdevel@...r.kernel.org, Eugene Teo <eugene@...hat.com> Subject: Re: [PATCH 1/3] setup_arg_pages: diagnose excessive argument size  > userland could never rely on the kernel's policy at all since get_arg_page > could have failed for more reasons than overstepping the currently hardcoded > ARG_MAX check in there.   I don't see how it could fail except for OOM cases where get_user_pages() failed rather than blocking.  Is that what you mean?  > so what AT_ARGMAX would buy us is to allow the kernel > policy to change over time, but it's never been about guarantees, whether > POSIX wants such a thing or not.  I understand the motivation for an explicit mechanism for the kernel to tell userland its limit.  Since the kernel policy today depends on something that can change between execs, AT_ARGMAX is inadequate for that purpose for today's policy, let alone any future different policy.  > > The information that these give is about the conditions at startup. > > That's what they mean to userland, and userland only uses them to know > > the situation before it has made any calls.  The definition of AT_EUID > > is "effective user ID at program startup", and that fact does not > > change. >  > just for my own curiosity, where does this definition come from?  You mean documentation?  I'm not really sure if there is any for that. But it's the inherent definition of auxv that all its information can only be about the conditions at program startup.   Thanks, Roland  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      