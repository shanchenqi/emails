  oss-security - Re: CVE request - kernel: DoS on            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 3 Feb From: dann frazier <dannf@...ian.org> To: oss-security@...ts.openwall.com Cc: "Steven M. Christey" <coley@...us.mitre.org> Subject: Re: CVE request - kernel: DoS on  On Mon, Feb 01, at Eugene Teo wrote: > Reported by Mathias Krause. The problem seams to be located in > fs/binfmt_elf.c:load_elf_binary(). It calls SET_PERSONALITY() prior   > checking that the ELF interpreter is available. This in turn makes the   > previously 32 bit process a 64 bit one which would be fine if execve()   > would succeed. But after the SET_PERSONALITY() the open_exec() call   > fails (because it cannot find the interpreter) and execve() almost   > instantly returns with an error. If you now look at /proc/PID/maps   > you'll see, that it has the vsyscall page mapped which shouldn't be. But   > the process is not dead yet, it's still running. By now generating a   > segmentation fault and in turn trying to generate a core dump the > kernel just dies. > > Steps to Reproduce: > 1. Enable core dumps > 2. Start an 32 bit program that tries to execve() an 64 bit program > 3. The 64 bit program cannot be started by the kernel because it can't   > find the interpreter, i.e. execve returns with an error > 4. Generate a segmentation fault > 5. panic > > Upstream commit: >  Thanks Eugene.  Also note this fix for a regression in the above:    --  dann frazier   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      