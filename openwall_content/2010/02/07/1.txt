  oss-security - CVE request: information leak / potential crash in sys_move_pages            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Sun, 7 Feb From: Marcus Meissner <meissner@...e.de> To: OSS Security List <oss-security@...ts.openwall.com> Subject: CVE request: information leak / potential crash in sys_move_pages  Hi,  I spotted a problem in sys_move_pages, where "node" value is read from userspace, but not limited to the node set within the kernel itself.  Due to the bit tests in mm/migrate.c:do_move_pages it is easy to read out the kernel memory (as node can also be negative).  (The node_isset and node_state functions just map to test_bit, which has   no limiter in the normal implementations.)  There also is (in my eyes) the chance we can corrupt kernel memory later on if we have all the right bits setup, but I did not research this further.  Issue was present starting as sys_move_pages was introduced in Solved in mainline by commit below.  Needs a CVE for information leakage at least.  Have a nice weekend, Marcus  commit Author: Linus Torvalds <torvalds@...ux-foundation.org> Date:   Fri Feb 5      Fix potential crash with sys_move_pages          We incorrectly depended on the 'node_state/node_isset()' functions     testing the node range, rather than checking it explicitly.  That's not     reliable, even if it might often happen to work.  So do the proper     explicit test.          Reported-by: Marcus Meissner <meissner@...e.de>     Acked-and-tested-by: Brice Goglin <Brice.Goglin@...ia.fr>     Acked-by: Hugh Dickins <hugh.dickins@...cali.co.uk>     Cc: stable@...nel.org     Signed-off-by: Linus Torvalds <torvalds@...ux-foundation.org>  diff --git a/mm/migrate.c b/mm/migrate.c index --- a/mm/migrate.c +++ b/mm/migrate.c @@ @@ static int do_pages_move(struct mm_struct *mm, struct task_struct *task,  				goto out_pm;    			err = -ENODEV; +			if (node < 0 || node >= MAX_NUMNODES) +				goto out_pm; +  			if (!node_state(node, N_HIGH_MEMORY))  				goto out_pm;    Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      