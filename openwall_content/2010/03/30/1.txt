  oss-security - CVE request: kernel: tipc: Fix oops on send prior to entering networked  mode            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Tue, 30 Mar From: Eugene Teo <eugeneteo@...nel.sg> To: oss-security@...ts.openwall.com CC: "Steven M. Christey" <coley@...us.mitre.org> Subject: CVE request: kernel: tipc: Fix oops on send prior to entering networked  mode  TIPC - Transparent Inter-Process Communication protocol  Discussion:  Patch:  Reference:  "Fix TIPC to disallow sending to remote addresses prior to entering  NET_MODE. User programs can oops the kernel by sending datagrams via  AF_TIPC prior to entering networked mode.  The following backtrace has  been observed:  ID:  TASK:  CPU: 0   COMMAND: "tipc-client" [exception RIP: tipc_node_select_next_hop+90] RIP:  RSP:  RFLAGS: RAX:  RBX:  RCX: RDX:  RSI:  RDI: RBP:   R8:   R9: R10:  R11:  R12: R13:  R14:  R15: ORIG_RAX: ffffffffffffffff  CS:  SS: RIP:  RSP:  RFLAGS: RAX:  RBX:  RCX: RDX:  RSI:  RDI: RBP:   R8:   R9: R10:  R11:  R12: R13:  R14:  R15: ORIG_RAX:  CS:  SS:  What happens is that, when the tipc module in inserted it enters a  standalone node mode in which communication to its own address is  allowed but not to other addresses, since the appropriate data  structures have not been allocated yet (specifically the tipc_net  pointer).  There is nothing stopping a client from trying to send such a  message however, and if that happens, we attempt to dereference  tipc_net.zones while the pointer is still NULL, and explode.  The fix is  pretty straightforward.  Since these oopses all arise from the  dereference of global pointers prior to their assignment to allocated values, and since these allocations are small (about 2k total), lets  convert these pointers to static arrays of the appropriate size.  All  the accesses to these bits consider 0/NULL to be a non match when  searching, so all the lookups still work properly, and there is no  longer a chance of a bad dererence anywhere.  As a bonus, this lets us  eliminate the setup/teardown routines for those pointers, and elimnates  the need to preform any locking around them to prevent access while  their being allocated/freed."  Thanks, Eugene  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      