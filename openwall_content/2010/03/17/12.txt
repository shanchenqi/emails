  oss-security - CVE Request -- Transmission             Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Wed, 17 Mar From: Jan Lieskovsky <jlieskov@...hat.com> To: "Steven M. Christey" <coley@...us.mitre.org> CC: oss-security <oss-security@...ts.openwall.com> Subject: CVE Request -- Transmission   Hi Steve, vendors,     Transmission upstream has recently released latest, version:      [1] http://trac.transmissionbt.com/wiki/Changes     fixing one (potentially two) security issues:      a, Fix potential buffer overflow when adding maliciously-crafted magnet links     References:      [2]      [3] http://trac.transmissionbt.com/wiki/Changes      [4]       --       b, Fix possible data corruption issue caused by data sent by bad peers during endgame         (this one I am not completely sure of, but when looking at the relevant bug record:      [5]          there is written:      [6]          "My theory is that for some reason Transmission will download a corrupt part           from someone but not realize it until you do a manual verify. At this point           T will recognize the bad part and redownload it from the same person, which          just causes the problem again."           so to prevent someone from successfully downloading content of some torrent file,          for an attacker to should be enough to download a part of it, corrupt it and          share it. Not sure about the algorithm, Transmission decides which torrent          to retrieve content from, but if it is deterministic / predictable behavior /          algorithm, such attack could succeed).     References:      [7]      [8]      [9] http://trac.transmissionbt.com/wiki/Changes  Could you allocate CVE id(s) for this / these issue(s)?  Thanks && Regards, Jan. -- Jan iankko Lieskovsky / Red Hat Security Response Team    Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      