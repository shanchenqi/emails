  oss-security - WordPress Plugin - Broken Link  Checker <= - Reflected XSS            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Wed, 16 Oct From: SBA Research Advisory <advisory@...-research.org> To: <oss-security@...ts.openwall.com> Subject: WordPress Plugin - Broken Link  Checker <= - Reflected XSS  # WordPress Plugin - Broken Link Checker - Reflected XSS #  Link:  ## Vulnerability Overview ##  The broken-link-checker plugin through for WordPress (aka Broken Link Checker) is susceptible to Reflected XSS due to improper encoding and insertion of an HTTP GET parameter into HTML. The filter function on the page listing all detected broken links can be exploited by providing an XSS payload in the s_filter GET parameter in a filter_id=search request. NOTE: this is an end-of-life product.  * **Identifier**            : * **Type of Vulnerability** : Cross-site Scripting * **Software/Product Name** : [Broken Link Checker](https://wordpress.org/plugins/broken-link-checker/) * **Vendor**                : [ManageWP](https://managewp.com/) * **Affected Versions**     : <= * **Fixed in Version**      : - * **CVE ID**                : * **CVSSv3 Vector**         : AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:N * **CVSSv3 Base Score**     : 8.1 (High)  ## Vendor Description ##  > This plugin will monitor your blog looking for broken links and let you know if any are found.  Active Installations:  Source: <https://wordpress.org/plugins/broken-link-checker/>  ## Impact ##  By exploiting the documented vulnerability, an external attacker without any privileges can execute JavaScript code in a victim's browser. This can be misused, e.g for phishing attacks by displaying a fake login form and sending the victim's credentials to the attacker. Furthermore malicious actions can be performed in the context of an authenticated user. The impact depends on the level of access of the attacked user. In case of an admin this can lead to the execution of PHP code and the compromise of the server.  ## Vulnerability Description ##  The filter function on the page listing all detected broken links can be exploited by providing HTML and JavaScript code in one of the parameters. All users with access to the "Broken Link Checker" are in danger.  This is possible because the CSS class of the table contains the value of the `s_filter` GET parameter if it is not empty. Additionally it is necessary to provide the special filter id "search" via parameter `filter_id=search` in order to reach this execution path:  In `includes/link-query.php` the value of `$base_filter` is determined, with `filter_id=search` the right path will be reached:  ```php $base_filter = ''; if ( array_key_exists($filter_id, $this->native_filters) ) {     $base_filter = $filter_id; } else if ( isset($current_filter['params']['s_filter']) && !empty($current_filter['params']['s_filter']) ) {     $base_filter = $current_filter['params']['s_filter']; } else if ( isset($_GET['s_filter']) && !empty($_GET['s_filter']) ) {     $base_filter = $_GET['s_filter']; } ```  In `admin/table-printer.php` the value of the CSS class of the table is determined and set. Here the value of the GET parameter is inside `$current_filter['base_filter']`.  ```php $table_classes = array( 'widefat' ); if ( $compact ) {     $table_classes[] = 'compact'; }; if ( $this->core->conf->options['table_color_code_status'] ) {     $table_classes[] = 'color-code-link-status'; }; $table_classes[] = 'base-filter-' . $current_filter['base_filter']; printf(     '<table class="%s" id="blc-links"><thead><tr>',     implode( ' ', $table_classes ) ); ```  ## Proof of Concept ##  This example shows how an attacker can craft a URL to execute a payload in the browser of the victim. When a user clicks on the link and is logged-in, the payload (in this case a simple JavaScript alert) will be executed. Otherwise the user will be taken to the login page and redirected to the exploit after a successful login. Replace `<YOUR_DOMAIN_HERE>` with the URL to your WordPress installation:  ```text ```  ## Recommended Countermeasures ##  We recommend to properly escape the output by using the encoding functions provided by WordPress, like the `esc_*`- or `wp_kses_*`-[functions][1].  [1]: https://developer.wordpress.org/themes/theme-security/data-sanitization-escaping/#escaping-securing-output  ## Timeline ##  * Identified the vulnerability * Contacted ManageWP * Contacted plugins@...dpress.org * Response by ManageWP requesting more details * Response by ManageWP that they are not actively maintaining the plugin and don't provide support * CVE assigned * Public disclosure  ## References ##  * <https://wordpress.org/plugins/broken-link-checker/> * <https://wordpress.org/plugins/broken-link-checker/#developers>  ## Credits ##  * Tobias Fink ([SBA Research](https://www.sba-research.org/))  Download attachment of type "application/pgp-keys" bytes)  Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      