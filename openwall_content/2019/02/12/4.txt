  oss-security - Re: runc container breakout (all  versions)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 13 Feb From: Aleksa Sarai <cyphar@...har.com> To: Steve Grubb <sgrubb@...hat.com> Cc: oss-security@...ts.openwall.com, Florian Weimer <fweimer@...hat.com>, 	dev@...ncontainers.org, 	Christian Brauner <christian.brauner@...ntu.com> Subject: Re: runc container breakout (all  versions)  On Steve Grubb <sgrubb@...hat.com> wrote: > On Tuesday, February 12, AM EST Florian Weimer wrote: > > * Aleksa Sarai: > > > +	memfd = memfd_create(MEMFD_COMMENT, MFD_CLOEXEC|MFD_ALLOW_SEALING); > > > +	if (memfd < 0) > > > +		goto err_binfd; > >  > > Is it really necessary to use a memfd_create here?  Do you really need > > sealing?  It's a bit odd to add a new system call dependency in a > > security update. >  > That's along the lines of what I was thinking also. This looks like more of a  > workaround than a root cause fix. Without seeing the exploit or a full  > discussion of the theory of operation, we really can't pinpoint where the  > issue is. Was it because of CAP_DAC_OVERRIDE? Is there a missing permission  > check crossing a trust boundary? Was excessive permissions requested in a  > syscall? Given the patch, we can sort of see what the issue is but not the  > exact issue.  It's not because of CAP_DAC_OVERRIDE. It's just regular DAC. As for it not being a root cause fix, I disagree (it protects against a variety of concerning attacks that aren't related to this CVE). Obviously if everyone used correctly-configured user namespaces then this wouldn't be a problem -- but here were are.  But if you would like an even better fix there is the O_THISROOT patchset[1] which I'm going to re-send tomorrow and would help fix this and could help fix a wide variety of other container runtime issues that have been bothering me for a couple of years. :P  [1]:  --  Aleksa Sarai Senior Software Engineer (Containers) SUSE Linux GmbH <https://www.cyphar.com/>  Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      