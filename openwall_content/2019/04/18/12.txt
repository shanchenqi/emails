  oss-security - Linux kernel < drivers/net/ethernet/chelsio/libcxgb/libcxgb_ppm.c  kernel address dumps to user space            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Thu, 18 Apr From: Fuqian Huang <huangfq.daxian@...il.com> To: oss-security@...ts.openwall.com Subject: Linux kernel < drivers/net/ethernet/chelsio/libcxgb/libcxgb_ppm.c  kernel address dumps to user space  In ppm_destory will dump the address of ppm into dmesg, which allows local user to read the kernel address via dmesg. static void ppm_destroy(struct kref *kref) {     ...     pr_info("ippm: kref 0, destroy %s ppm 0x%p.\n",         ppm->ndev->name, ppm);     ... }  In and and cxgbi_ppm_init will dump the address of ppm into dmesg, which allows local user to read the kernel address via dmesg. int cxgbi_ppm_init(void **ppm_pp, struct net_device *ndev,            struct pci_dev *pdev, void *lldev,            struct cxgbi_tag_format *tformat,            unsigned int ppmax,            unsigned int llimit,            unsigned int start,            unsigned int reserve_factor) {     ...     if (ppm) {         pr_info("ippm: %s, ppm 0x%p,0x%p already initialized, %u/%u.\n",             ndev->name, ppm_pp, ppm, ppm->ppmax, ppmax);         kref_get(&ppm->refcnt);         return 1;     }     ...     if (*ppm_pp) {         ...         pr_info("ippm: %s, ppm 0x%p,0x%p already initialized, %u/%u.\n",             ndev->name, ppm_pp, *ppm_pp, ppm->ppmax, ppmax);          kref_get(&ppm->refcnt);         return 1;     }     ...     pr_info("ippm %s: ppm 0x%p, 0x%p, base %u/%u, pg %lu,%u, rsvd %u,%u.\n",         ndev->name, ppm_pp, ppm, ppm->base_idx, ppm->ppmax, PAGE_SIZE,         ppm->tformat.pgsz_idx_dflt, ppm->pool_rsvd,         ppm->pool_index_max);     ... }  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      