  oss-security - Linux kernel < drivers/net/ethernet/netronome/nfp/nfp_net_debugfs.c  kernel address dumps to user space            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Thu, 18 Apr From: Fuqian Huang <huangfq.daxian@...il.com> To: oss-security@...ts.openwall.com Subject: Linux kernel < drivers/net/ethernet/netronome/nfp/nfp_net_debugfs.c  kernel address dumps to user space  In drivers/net/ethernet/netronome/nfp/nfp_net_debugfs.c:65 and drivers/net/ethernet/netronome/nfp/nfp_net_debugfs.c:77, nfp_net_debugfs_rx_q_read will dump the address of rx_rings->rxds and frag to debugfs, which allows local user to read the kernel address via debugfs.  static int nfp_net_debugfs_rx_q_read(struct seq_file *file, void *data) {     seq_printf(file, cnt=%u dma=%pad host=%p   H_RD=%u H_WR=%u FL_RD=%u FL_WR=%u\n",            rx_ring->idx, rx_ring->fl_qcidx,            rx_ring->cnt, &rx_ring->dma, rx_ring->rxds,            rx_ring->rd_p, rx_ring->wr_p, fl_rd_p, fl_wr_p);     ...         if (frag)             seq_printf(file, " frag=%p", frag);     ... }  In and and nfp_net_debugfs_tx_q_read will dump the address of rx_rings->rxds and skb->head and frag to debugfs, which allows local user to read the kernel address via debugfs.  static int nfp_net_debugfs_tx_q_read(struct seq_file *file, void *data) {     ...     seq_printf(file, cnt=%u dma=%pad host=%p H_RD=%u H_WR=%u D_RD=%u D_WR=%u\n",            tx_ring->idx, tx_ring->qcidx,            tx_ring == r_vec->tx_ring ? "" : "xdp",            tx_ring->cnt, &tx_ring->dma, tx_ring->txds,            tx_ring->rd_p, tx_ring->wr_p, d_rd_p, d_wr_p);      ...         if (tx_ring == r_vec->tx_ring) {             struct sk_buff *skb = READ_ONCE(tx_ring->txbufs[i].skb);              if (skb)                 seq_printf(file, " skb->head=%p skb->data=%p",                        skb->head, skb->data);         } else {             seq_printf(file, " frag=%p",                    READ_ONCE(tx_ring->txbufs[i].frag));         }     ... }  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      