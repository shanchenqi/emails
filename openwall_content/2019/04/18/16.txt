  oss-security - Linux kernel < drivers/nfc/nfcmrvl/usb.c kernel address  dumps to user space            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Thu, 18 Apr From: Fuqian Huang <huangfq.daxian@...il.com> To: oss-security@...ts.openwall.com Subject: Linux kernel < drivers/nfc/nfcmrvl/usb.c kernel address  dumps to user space  In nfcmrvl_tx_complete will dump the address of urb to dmesg, which allows local user to read kernel address via dmesg.  static void nfcmrvl_tx_complete(struct urb *urb) {     ...     nfc_info(priv->dev, "urb %p status %d count %d\n",          urb, urb->status, urb->actual_length);     ... }  In nfcmrvl_probe will dump the address of inf to dmesg, which allows local user to read kernel address via dmesg.  static int nfcmrvl_probe(struct usb_interface *intf,              const struct usb_device_id *id) {     ...     nfc_info(&udev->dev, "intf %p id %p\n", intf, id);     ... }  In nfcmrvl_disconnect will dump the address of inf to dmesg, which allows local user to read kernel address via dmesg.  static void nfcmrvl_disconnect(struct usb_interface *intf) {     ...     nfc_info(&drv_data->udev->dev, "intf %p\n", intf);     ... }  In nfcmrvl_suspendwill dump the address of inf to dmesg, which allows local user to read kernel address via dmesg.  static int nfcmrvl_suspend(struct usb_interface *intf, pm_message_t message) {     ...     nfc_info(&drv_data->udev->dev, "intf %p\n", intf);     ... }   In nfcmrvl_resume dump the address of inf to dmesg, which allows local user to read kernel address via dmesg.  static int nfcmrvl_resume(struct usb_interface *intf) {     ...     nfc_info(&drv_data->udev->dev, "intf %p\n", intf);     ... }  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      