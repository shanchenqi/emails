  oss-security - ghostscript: and  (.forceput exposed)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Wed, 28 Aug From: Cedric Buissart <cbuissar@...hat.com> To: oss-security@...ts.openwall.com Subject: ghostscript: and  (.forceput exposed)  Hello,  This is to report another 4 CVEs in ghostscript, rated important. They are all similar to the recently reported (reference to `.forceput` can be accessed)  Ghostscript is a suite of software providing an interpreter for Adobe Systems' PostScript (PS) and Portable Document Format (PDF) page description languages.  Its primary purpose includes displaying (rasterization & rendering) and printing of document pages, as well as conversions between different document formats. URL : www.ghostscript.com  1- : Safer Mode Bypass by .forceput Exposure in .pdf_hook_DSC_Creator  2- : Safer Mode Bypass by .forceput Exposure in setuserparams  3- : Safer Mode Bypass by .forceput Exposure in setsystemparams  4- : Safer Mode Bypass by .forceput Exposure in .pdfexectoken and other procedures  In each case, a specially crafted script could get a reference to .forceput and use that to disable the -dSAFER protection. This then allows the script to access file system outside of resitricted areas and execute arbitrary commands. Regarding only the .pdfexectoken procedure was proven to be vulnerable, the other fixed methods were only potentially vulnerable.  Preventing the modification of the error handler might protect most of these vulnerable functions  The fixes have been pushed upstream :  :   :   Acknowledgments : were reported to upstream by Hiroki MATSUKUMA of Cyber Defense Institute, Inc.   Noteworthy (similar to : A recent modification, started in upstream commit changed the access to file permissions. After this commit, the ability to modify the /PermitFile* entries from systemdict's /userparams entry should have no effect. That is to say: getting a reference to highly privileged function (such as .forceput), can still be used to remove SAFER, and modify the /PermitFile* lists. However, the interpreter will still refuse to access files outside of a list provided from a set of command line options. This should mitigate the class of ghostscript vulnerabilities similar to the one described above.  Best regards  -- Cedric Buissart Product Security Red Hat  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      