  oss-security - CSRF in MediaWiki extension OAuth2 Client 0.3            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Sun, 18 Aug From: Justin Bull <me@...tinbull.ca> To: oss-security@...ts.openwall.com, bugtraq@...urityfocus.com,  	fulldisclosure@...lists.org Subject: CSRF in MediaWiki extension OAuth2 Client 0.3  CSRF in MediaWiki extension OAuth2 Client 0.3  Happy Sunday everyone.  A security bulletin for you all.  Software: -------- MediaWiki OAuth2 Client (https://github.com/Schine/MW-OAuth2Client)  Description: ---------- MediaWiki implementation of the PHP League's OAuth2 Client, to allow MediaWiki to act as a client to any OAuth2 server.  Not Affeted: ------------ 0.2 and earlier.  Affected Versions: --------------- 0.3  Fixed Versions: ------------- 0.4  Problem: --------  In the OAuth2 Client extension 0.3 for MediaWiki, a CSRF vulnerability exists due to the OAuth2 state parameter not being checked in the callback function.  Per OAuth 2.0 spec, the authorization code grant flow is susceptible to CSRF and clickjacking attacks unless an appropriate "state" parameter is chosen and  Although the software correctly generates an unguessable state value and sets it in the URL to the OAuth 2.0 server, it fails to actually check/validate the parameter in the callback against what it previously selected.  The regression was introduced when switching underlying vendor code.[4]  Impact: -------  As described in the OAuth 2.0 RFC spec, this opens the site relying on the software up to clickjacking and CSRF attacks.[1]  A successful attack can lead to loss of integrity of the user/victim.  Solution: ---------  Update callback function to verify presence and correct `state` value as previously chosen prior to initiating the OAuth2 flow[5], as done in v0.4 release.[6]  Timeline: ---------  Bug discovered CVE requested, assigned, privately disclosed to maintainer,             bugfix/patch authored Maintainer acknowledged, patched version 0.4 is released  Credit: ------- Discovery by me.  Thanks to the maintainer Schine GmbH. for a quick acknowledgement and release.  References: -----------  [1]: [2]: https://auth0.com/docs/protocols/oauth2/mitigate-csrf-attacks [3]: https://auth0.com/docs/protocols/oauth2/oauth-state [4]: [5]: [6]:   --  Best Regards, Justin Bull PGP Fingerprint: E09D 38DE 8FB7 A0F4 1A2B DEAA 68FD B34C  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      