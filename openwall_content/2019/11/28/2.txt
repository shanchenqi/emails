  oss-security - Multiple issues in lemonldap-ng            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Thu, 28 Nov From: Raphael Geissert <geissert@...ian.org> To: Open Source Security <oss-security@...ts.openwall.com> Cc: yadd@...ian.org Subject: Multiple issues in lemonldap-ng  Hi,  Looking at lemonldap-ng I noticed that it uses low-level crypto primitives, not without some issues. Notably:  * it uses AES in CBC mode directly without setting an IV to encrypt data that is stored client-side * that same data is not signed, only encrypted  Despite my strong recommendation to use a library that abstracts some of the fine details, like NaCl, libsodium, etc, upstream has responded to the issue by issuing version with the following changes[1]:  * an IV is set but it might be generated with rand() and time() in case of urandom being unavailable or in case the code asks for a "low" mode * using as a checksum (literally just of the data, not despite the code using the name hmac in some places), as in: message = || data, key, iv). Upstream calling this MtE and using this approach instead of my recommendation of using EtM  Some "minor" issues were also fixed, like the use of a prng instead of a csprng.  Tracked with issue [2], the main issue is still open to possibly use an abstraction library in a future version.  I've neglected making a public report of this but I hope that it is going to help things move forward.   Cheers, --  Raphael Geissert - Debian Developer www.debian.org  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      