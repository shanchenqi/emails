  oss-security - Re: Mitigating malicious packages in gnu/linux            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 20 Nov (CST) From: Bob Friesenhahn <bfriesen@...ple.dallas.tx.us> To: Aditya Sirish Arunkumar Yelgundhalli cc: oss-security@...ts.openwall.com Subject: Re: Mitigating malicious packages in gnu/linux  The ideas I have seen posted on this topic thus far are about assuring  correct provenance and that installed binaries are based on what the  maintainer/developer intended.  The extreme focus on delivery mechanisms entirely ignores the fact  that development source code is produced in environments which are not  assured to be trustworthy (possibly sitting on hard drives for months  or multiple years), and then stored in environments which may or may  not be trustworthy (e.g. somewhere in a communal cloud).  This means  that changes may be inserted into the source code without the  developer/maintainer being aware.  There is also the implicit assumption that all developers and  maintainers have the intention of being good and not intentionally  inserting malicious code.  This is not always the case, particularly  if a developer becomes deranged or disgruntled.  Not all developers  are equally competent and sometimes a developer submits code with  severe flaws.  Modern GNU/Linux systems have far too much executing code to  reasonably secure.  Paring down the amount of executing code helps  quite a lot with improving security.  Bob --  Bob Friesenhahn bfriesen@...ple.dallas.tx.us, http://www.simplesystems.org/users/bfriesen/ GraphicsMagick Maintainer,    http://www.GraphicsMagick.org/ Public Key,     http://www.simplesystems.org/users/bfriesen/public-key.txt  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      