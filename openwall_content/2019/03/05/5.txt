  oss-security - Xen Security Advisory v2 - x86: insufficient TLB flushing  when using PCID            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Tue, 05 Mar From: Xen.org security team <security@....org> To: xen-announce@...ts.xen.org, xen-devel@...ts.xen.org,  xen-users@...ts.xen.org, oss-security@...ts.openwall.com CC: Xen.org security team <security-team-members@....org> Subject: Xen Security Advisory v2 - x86: insufficient TLB flushing  when using PCID  -----BEGIN PGP SIGNED MESSAGE----- Hash:                      Xen Security Advisory                               version 2              x86: insufficient TLB flushing when using PCID  UPDATES IN VERSION 2 ====================  Metadata updated to remove dependency on  Public release.  ISSUE DESCRIPTION =================  Use of Process Context Identifiers (PCID) was introduced into Xen in order to improve performance after (and in particular its Meltdown sub-issue).  This enablement implied changes to the TLB flushing logic.  The particular case of context switch to a vCPU of a PCID-enabled guest left open a time window between the full TLB flush, and the actual address space switch, during which additional TLB entries (from the address space about to be switched away from) can be accumulated, which will not subsequently be purged.  IMPACT ======  Malicious PV guests may be able to cause a host crash (Denial of Service) or to gain access to data pertaining to other guests. Privilege escalation opportunities cannot be ruled out.  Additionally, vulnerable configurations are likely to be unstable even in the absence of an attack.  VULNERABLE SYSTEMS ==================  Only x86 systems are vulnerable.  ARM systems are not vulnerable.  Only systems running x86 PV guests are vulnerable.  Systems running only x86 HVM or PVH guests are not vulnerable.  Only systems with at least one PCID-enabled PV guest are vulnerable.  Systems where PCID or INVPCID are unavailable or entirely disabled are not vulnerable.  Note that PCID is enabled by default for both 64-bit dom0 and 64-bit domU when hardware supports it.  PCID acceleration has been backported to the following versions:  - Xen  - Xen and onwards,  - Xen and onwards,  - Xen and onwards,  - Xen  To exploit this vulnerability, problematic TLB entries must be created between the full TLB flush and the address space switch.  The NMI watchdog handler (enabled via the "watchdog" command line option) is known to create such entries; other vectors cannot be ruled out.  MITIGATION ==========  Running only HVM or PVH guests will avoid this vulnerability.  Running only 32-bit PV guests alongside the other two types mentioned above will also avoid this vulnerability, provided Dom0 is also 32-bit or is not using PCID.  Making a 64-bit Dom0 not use PCID can be achieved by e.g. "xpti=no-dom0 pcid=xpti".  Disabling use of PCID entirely, by passing "pcid=0" or "invpcid=0" as a command line option to the hypervisor, will also avoid this vulnerability (albeit re-introducing the XPTI performance regression use of PCID was intended to reduce).  Disabling the watchdog timer will remove the only known way of reliably creating problematic TLB entries, potentially reducing the risk of a successful attack.  CREDITS =======  This issue was discovered by Sergey Dyasli and Andrew Cooper of Citrix.  RESOLUTION ==========  Applying the attached patch resolves this issue.            xen-unstable, Xen ... Xen  $   $  DEPLOYMENT DURING EMBARGO =========================  Deployment of the patches and/or mitigations described above (or others which are substantially similar) is permitted during the embargo, even on public-facing systems with untrusted guest users and administrators.  But: Distribution of updated software is prohibited (except to other members of the predisclosure list).  Predisclosure list members who wish to deploy significantly different patches and/or mitigations, please contact the Xen Project Security Team.  (Note: this during-embargo deployment notice is retained in post-embargo publicly released Xen Project advisories, even though it is then no longer applicable.  This is to enable the community to have oversight of the Xen Project Security Team's decisionmaking.)  For more information about permissible uses of embargoed information, consult the Xen Project community's agreed Security Policy:   http://www.xenproject.org/security-policy.html -----BEGIN PGP SIGNATURE-----  =mVRN -----END PGP SIGNATURE-----  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      