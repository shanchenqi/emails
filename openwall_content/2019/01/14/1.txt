  oss-security - SCP client multiple vulnerabilities            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Mon, 14 Jan (EET) From: Harry Sintonen <security-advisories@...er.fi> To: oss-security@...ts.openwall.com Subject: SCP client multiple vulnerabilities  scp client multiple vulnerabilities =================================== The latest version of this advisory is available at: https://sintonen.fi/advisories/scp-client-multiple-vulnerabilities.txt   Overview --------  SCP clients from multiple vendors are susceptible to a malicious scp server performing unauthorized changes to target directory and/or client output manipulation.   Description -----------  Many scp clients fail to verify if the objects returned by the scp server match those it asked for. This issue dates back to and rcp, on which scp is based. A separate flaw in the client allows the target directory attributes to be changed arbitrarily. Finally, two vulnerabilities in clients may allow server to spoof the client output.   Impact ------  Malicious scp server can write arbitrary files to scp target directory, change the target directory permissions and to spoof the client output.   Details -------  The discovered vulnerabilities, described in more detail below, enables the attack described here in brief.  1. The attacker controlled server or Man-in-the-Middle(*) attack drops .bash_aliases     file to victim's home directory when the victim performs scp operation from the     server. The transfer of extra files is hidden by sending ANSI control sequences     via stderr. For example:      user@...al:~$ scp user@...ote:readme.txt .     readme.txt                                              1.6KB/s       user@...al:~$  2. Once the victim launches a new shell, the malicious commands in .bash_aliases get     executed.   *) Man-in-the-Middle attack does require the victim to accept the wrong host     fingerprint.   Vulnerabilities ---------------  1. CWE-20: scp client improper directory name validation  The scp client allows server to modify permissions of the target directory by using empty 0 \n") or dot 0 .\n") directory name.   2. CWE-20: scp client missing received object name validation  Due to the scp implementation being derived from rcp [1], the server chooses which files/directories are sent to the client. However, scp client only perform cursory validation of the object name returned (only directory traversal attacks are prevented). A malicious scp server can overwrite arbitrary files in the scp client target directory. If recursive operation (-r) is performed, the server can manipulate subdirectories as well (for example overwrite .ssh/authorized_keys).  The same vulnerability in WinSCP is known as   3. scp client spoofing via object name  Due to missing character encoding in the progress display, the object name can be used to manipulate the client output, for example to employ ANSI codes to hide additional files being transferred.   4. scp client spoofing via stderr  Due to accepting and displaying arbitrary stderr output from the scp server, a malicious server can manipulate the client output, for example to employ ANSI codes to hide additional files being transferred.   Proof-of-Concept ----------------  Proof of concept malicious scp server will be released at a later date.   Vulnerable versions -------------------  The following software packages have some or all vulnerabilities:                      ver      #1  #2  #3  #4 OpenSSH scp        <=7.9    x   x   x   x PuTTY PSCP         ?        -   -   x   x WinSCP scp mode      -   x   -   -  Tectia SSH scpg3 is not affected since it exclusively uses sftp protocol.   Mitigation ----------  1. OpenSSH  1.1 Switch to sftp if possible  1.2 Alternatively apply the following patch to harden scp against most server-side      manipulation attempts: https://sintonen.fi/advisories/scp-name-validator.patch       NOTE: This patch may cause problems if the the remote and local shells don't      agree on the way glob() pattern matching works. YMMV.  2. PuTTY  2.1 No fix is available yet  3. WinSCP  3.1. Upgrade to WinSCP or later    Similar or prior work ---------------------  1. - scp overwrites arbitrary files   References ----------  1. https://www.jeffgeerling.com/blog/brief-history-ssh-and-remote-access   Credits -------  The vulnerability was discovered by Harry Sintonen / F-Secure Corporation.   Timeline --------   initial discovery of vulnerabilities #1 and #2  reported vulnerabilities #1 and #2 to OpenSSH  OpenSSH acknowledged the vulnerabilities  discovered & reported vulnerability #3 to OpenSSH  discovered & reported vulnerability #4 to OpenSSH  reported PSCP vulnerabilities (#3 and #4) to PuTTY developers  reported WinSCP vulnerability (#2) to WinSCP developers  WinSCP developers reported the vulnerability #2 fixed  requested a status update from OpenSSH  OpenSSH fixed vulnerability #1  requested a status update from OpenSSH  requested CVE assignments from MITRE  received CVE assignments from MITRE  public disclosure of the advisory  added a warning about the potential issues caused by the patch  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      