  oss-security - Xen Security Advisory v2 - Spectre V1 gadgets exploitable  with L1TF            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Mon, 21 Jan From: Xen.org security team <security@....org> To: xen-announce@...ts.xen.org, xen-devel@...ts.xen.org,  xen-users@...ts.xen.org, oss-security@...ts.openwall.com CC: Xen.org security team <security-team-members@....org> Subject: Xen Security Advisory v2 - Spectre V1 gadgets exploitable  with L1TF  -----BEGIN PGP SIGNED MESSAGE----- Hash:                      Xen Security Advisory                               version 2                 Spectre V1 gadgets exploitable with L1TF  UPDATES IN VERSION 2 ====================  Include references for `smatch' in Correct embargo end date in  Public release.  ISSUE DESCRIPTION =================  Previously reported vulnerabilities / (Spectre V1) and / (L1TF) can, when combined, be leveraged to more easily gather leaked information.  The Spectre V1 approach would be used to bring data into the cache on on hyperthread of a given CPU core, while L1TF would be utilized to read out the cached data on another hyperthread of the same CPU core.  A number of specific exploitable gadgets have been identified.  There are no new vulnerabilities.  There is only new information about existing vulnerabilities: specifically, confirmation that existing, previously disclosed, vulnerabilities, can be exploited in specific ways.  (Previously, it was merely expected, and stated in and that such the vulnerabilities would be exploitable.)  IMPACT ======  An attacker can potentially read arbitrary host RAM.  This includes data belonging to Xen, data belonging to other guests, and data belonging to different security contexts within the same guest.  An attacker could be a guest kernel (which can manipulate the pagetables directly), or could be guest userspace either directly (e.g. with mprotect() or similar system call) or indirectly (by gaming the guest kernel's paging subsystem).  See and for more general information about the underlying vulnerabilities.  VULNERABLE SYSTEMS ==================  Systems running all versions of Xen are affected.  Only x86 processors are vulnerable.  ARM processors are not known to be affected.  Only systems with Symmetric Multi Threading (SMT, aka hyperthreading) available and enabled are vulnerable.  Only Intel Core based processors (from at least Merom onwards) are potentially affected.  Other processor designs (Intel Atom/Knights range), and other manufacturers (AMD) are not known to be affected.  MITIGATION ==========  As discussed in disabling SMT / hyperthreading will avoid the L1TF vulnerability.  It will therefore prevent the use of the exploitable code patterns discussed in this advisory.  Disabling SMT may be achieved via a BIOS option (preferred) or the "smt=0" hypervisor command line option.  CREDITS =======  This issue was discovered by Norbert Manthey, Julian Stecklina, and Pawel Wieczorkiewicz of the Xen Security Team at Amazon.  RESOLUTION ==========  These are hardware bugs, so technically speaking they cannot be properly fixed in software.  See and for a fuller discussion of the general situation, background, etc.  TECHNICAL DETAILS =================  For the specific technical details of the now-known-explitable code patterns, please see the attached patches.  These patches are intended by their authors to mitigate these vulnerabilities.  In some form they are likely to be included in future Xen releases.  We very much welcome this contribution to the Xen community's response to Spectre/L1TF.  However:   * These patches have not been validated by the Xen Project    Security Team.  Work is ongoing.   * We expect that there may be other exploitable code patterns and    gadgets, similar to but beyond those disclosed here.   * Should further such exploitable code patterns be discovered, we    will not necessarily issue a further advisory, or update this    advisory.  Instead, we would usually recommend that any    improvements to reduce the exploitability be handled in public, in    accordance with the public status of the underlying vulnerabilities    and   * We therefore do not recommend responding to this advisory by    applying these patches.  Instead, we recommend using hardware    without this bug, or failing that, disabling hyperthreading (SMT)    as discussed in  $                 $  DEPLOYMENT DURING EMBARGO =========================  Deployment of the patches and/or mitigations described above (or others which are substantially similar) is permitted during the embargo, even on public-facing systems with untrusted guest users and administrators.  But: Distribution of updated software is prohibited (except to other members of the predisclosure list).  Predisclosure list members who wish to deploy significantly different patches and/or mitigations, please contact the Xen Project Security Team.  (Note: this during-embargo deployment notice is retained in post-embargo publicly released Xen Project advisories, even though it is then no longer applicable.  This is to enable the community to have oversight of the Xen Project Security Team's decisionmaking.)  For more information about permissible uses of embargoed information, consult the Xen Project community's agreed Security Policy:   http://www.xenproject.org/security-policy.html -----BEGIN PGP SIGNATURE-----  =PAIM -----END PGP SIGNATURE-----  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      