  oss-security - wget / chromium: URL metadata and potential password leaks via  extended filesystem attributes            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Tue, 1 Jan From: Hanno Bรถck <hanno@...eck.de> To: oss-security@...ts.openwall.com Subject: wget / chromium: URL metadata and potential password leaks via  extended filesystem attributes  Hi,  Via some twitter discussions [1] I recently learned about a worrying behavior of wget and Chromium / Chrome.  The URL of downloads gets stored via filesystem attributes on systems that support Unix extended attributes.  You can see these attributes on Linux systems by running getfattr -d [filename] (The download URL is stored in a variable "user.xdg.origin.url")  This is worrying for a number of reasons: * In combination with HTTP authentication a username and password can   be part of the URL (HTTP authentication can be accessed via an URL of   the form https://[username]:[password]@[hostname]/). * Sometimes URLs may contain secret tokens, e.g. private file shares on   a file hosting service. * In general storing metadata at unexpected places should be avoided.  What's limiting this issue a bit is that tar does not by default store these extended attributes. I haven't tested other archiving tools.  wget has released an update and got assigned [2]. It changes the default behavior: extended attributes only get stored if a user explicitly enables it with a parameter. I believe this is a good solution.  It's been reported to Chrome as well. (Currently private bug report, but given this was already discussed on Twitter I don't think this needs to be kept confidential.)  It may be worthwhile checking if other tools share this behavior.  [1] [2]  --  Hanno Bรถck https://hboeck.de/  mail/jabber: hanno@...eck.de GPG:  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      