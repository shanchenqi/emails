  oss-security - Re: Re: Asserts considered harmful (or GMP spills its  sensitive information)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 2 Jan From: Jeffrey Walton <noloader@...il.com> To: oss-security@...ts.openwall.com Cc: gmp-bugs@...lib.org Subject: Re: Re: Asserts considered harmful (or GMP spills its  sensitive information)  On Tue, Jan 1, at AM Simon McVittie <smcv@...ian.org> wrote: > > On Tue, 01 Jan at Niels Mรถller wrote: > > A security sensitive application can easily disable generation of core > > files, using setrlimit (on the linux kernel, prctl may also be useful). > > If you want to avoid core dumps being recorded on Linux in the presence of > system configuration that writes them into a pipe to a command instead > of to a core file (systemd-coredump, corekeeper, abrt, apport etc., > using a string starting with | in /proc/sys/kernel/core_pattern), then > you need to use prctl PR_SET_DUMPABLE. Setting RLIMIT_CORE to 0 prevents > the kernel from creating core dump files itself, but does not prevent > it from writing them to pipes.  This is kind of interesting. It looks like systems running systemd with coredumpctl store the dumps in journald. Systemd does not appear to offer a way to clear them, so a '/var/log/journal/*/*' is needed.  $ cat coredump.c #include <stdio.h> #include <assert.h>  int main(int argc, char* argv[]) {     char     printf("Please enter your password:\n");     if(fgets(password, sizeof(password), stdin) != NULL) {         /* do some real work, detect an error condition, then... */         assert(0);     }      return 0; }   $ gcc coredump.c -o coredump.exe $ ./coredump.exe Please enter your password: supersecretpassword coredump.exe: coredump.c:11: main: Assertion `0' failed. Aborted (core dumped)   $ coredumpctl list TIME                            PID   UID   GID SIG COREFILE  EXE Wed EST       6 present   /home/jwalton/...   $ coredumpctl -o coredump.exe.core dump            PID: (coredump.exe)            UID: (jwalton)            GID: (jwalton)         Signal: 6 (ABRT)   $ strings coredump.exe.core | grep supersecret supersecretpassword supersecretpassword  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      