  oss-security - Re: Linux Kernel deadlock vulnerability.            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 8 Jan From: Greg KH <gregkh@...uxfoundation.org> To: Entropy Moe Cc: security@...nel.org, oss-security@...ts.openwall.com Subject: Re: Linux Kernel deadlock vulnerability.  On Tue, Jan 08, at Entropy Moe wrote: > Hello, > I wanted to let you know that there seem to be a deadlock vulnerability on > the linux kernel > I am attaching the result report from syzkaller which also got the c code > for replication. >  > thank you,  > Syzkaller hit 'possible deadlock in console_unlock' bug. >  > RBP: R08: R09: > R10: R11: R12: > R13: ffffffffffffffff R14: R15: >  > ====================================================== > WARNING: possible circular locking dependency detected > #8 Not tainted > ------------------------------------------------------ > is trying to acquire lock: > (console_owner){-.-.}, at: log_next [inline] > (console_owner){-.-.}, at: >  > but task is already holding lock: > (&(&port->lock)->rlock){-.-.}, at: >  > which lock already depends on the new lock.   Are you sure this is a real problem?  Can you deadlock this when running?  Also, try a number of tty core changes went in there to try to resolve these types of issues.  They have not been backported to yet as they need to get more testing.  If you could run your same test suite on that kernel, it would be great to find out your results.  thanks,  greg k-h  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      