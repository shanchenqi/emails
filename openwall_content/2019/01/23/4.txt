  oss-security - Re: Multiple vulnerabilities in Jenkins            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Wed, 23 Jan From: Daniel Beck <ml@...kweb.net> To: oss-security@...ts.openwall.com Subject: Re: Multiple vulnerabilities in Jenkins    > On 10. Oct at Daniel Beck <ml@...kweb.net> wrote: >  > > A path traversal vulnerability in Stapler allowed viewing routable objects  > with views defined on any type. This could be used to access internal data  > of routable objects, e.g. by showing their string representation (#toString).   > > Users with Job/Configure permission could specify a relative path escaping  > the base directory in the file name portion of a file parameter definition.  > This path would be used to archive the uploaded file on the Jenkins master,  > resulting in an arbitrary file write vulnerability. >  > File parameters that escape the base directory are no longer accepted and  > the build will fail.   > > The wrapper query parameter for the XML variant of the Jenkins remote API  > did not validate the specified tag name. This resulted in a reflected cross- > site scripting vulnerability. >  > Only legal XML tag names are now allowed for the wrapper query parameter.   > > By accessing a specific crafted URL on Jenkins instances using Jenkins' own  > user database, users without Overall/Read access could create ephemeral  > user records. >  > This behavior could be abused to create a large number of ephemeral user  > records in memory. >  > Accessing this URL now no longer results in a user record getting created.   > > When signing up for a new user account on instances using Jenkins' own user  > database, Jenkins did not invalidate the existing session and create a new  > one. This allowed session fixation. >  > Jenkins now invalidates the existing session and creates a new one when  > logging in after user signup.   > > When Jenkins fails to process form submissions due to an internal error,  > the error message shown to the user and written to the log typically  > includes the serialized JSON form submission. Secrets, such as submitted  > passwords, might be included with the JSON object, and shown or written to  > disk in plain text. >  > Jenkins now masks values in these error messages from view if they were  > shown on the UI as password form fields.    Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      