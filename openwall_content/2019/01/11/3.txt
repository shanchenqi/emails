  oss-security - Memory leak in protocol            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Fri, 11 Jan From: Dhiraj Mishra <mishra.dhiraj95@...il.com> To: oss-security@...ts.openwall.com Subject: Memory leak in protocol  Hi List,  ## Summary: An issue has been found in Memory_malloc in hal/memory/lib_memory.c has a memory leak when called from Asn1PrimitiveValue_create in mms/asn1/asn1_ber_primitive_value.c, as demonstrated by goose_publisher_example.c and  ## Snip code from goose_publisher_example.c#L30 :     LinkedList_add(dataSetValues,     LinkedList_add(dataSetValues, MmsValue_newBinaryTime(false));     LinkedList_add(dataSetValues,  ## Memory leak:  LeakSanitizer: detected memory leaks Direct leak of 10 byte(s) in 1 object(s) allocated from:     #0 in __interceptor_malloc     #1 in Memory_malloc     #2 in Asn1PrimitiveValue_create     #3 in BerInteger_createInt32     #4 in BerInteger_createFromInt32     #5 in MmsValue_newIntegerFromInt32     #6 in main     #7 in __libc_start_main  Direct leak of 10 byte(s) in 1 object(s) allocated from:     #0 in __interceptor_malloc     #1 in Memory_malloc     #2 in Asn1PrimitiveValue_create     #3 in BerInteger_createInt32     #4 in BerInteger_createFromInt32     #5 in MmsValue_newIntegerFromInt32     #6 in main     #7 in __libc_start_main  Direct leak of 5 byte(s) in 1 object(s) allocated from:     #0 in __interceptor_calloc     #1 in Memory_calloc     #2 in Asn1PrimitiveValue_create     #3 in BerInteger_createInt32     #4 in BerInteger_createFromInt32     #5 in MmsValue_newIntegerFromInt32     #6 in main     #7 in __libc_start_main  Direct leak of 5 byte(s) in 1 object(s) allocated from:     #0 in __interceptor_calloc     #1 in Memory_calloc     #2 in Asn1PrimitiveValue_create     #3 in BerInteger_createInt32     #4 in BerInteger_createFromInt32     #5 in MmsValue_newIntegerFromInt32     #6 in main     #7 in __libc_start_main  SUMMARY: AddressSanitizer: 30 byte(s) leaked in 4 allocation(s).  Later was assigned to this issue.   Thank you @mishradhiraj_   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      