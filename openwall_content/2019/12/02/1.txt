  oss-security - Django and Privilege escalation in the  Django admin.            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Mon, 2 Dec From: Carlton Gibson <carlton.gibson@...il.com> To: oss-security@...ts.openwall.com Subject: Django and Privilege escalation in the  Django admin.   In accordance with `our security release policy <https://docs.djangoproject.com/en/dev/internals/security/>`_, the Django team is issuing `Django and `Django These release addresses the security issue detailed below. We encourage all users of Django to upgrade as soon as possible.  Privilege escalation in the Django admin. =========================================================  Since Django 2.1, a Django model admin displaying a parent model with related model inlines, where the user has view-only permissions to a parent model but edit permissions to the inline model, would display a read-only view of the parent model but editable forms for the inline.  Submitting these forms would not allow direct edits to the parent model, but would trigger the parent model's ``save()`` method, and cause pre and post-save signal handlers to be invoked. This is a privilege escalation as a user who lacks permission to edit a model should not be able to trigger its save-related signals.  To resolve this issue, the permission handling code of the Django admin interface has been changed. Now, if a user has only the "view" permission for a parent model, the entire displayed form will not be editable, even if the user has permission to edit models included in inlines.  This is a backwards-incompatible change, and the Django security team is aware that some users of Django were depending on the ability to allow editing of inlines in the admin form of an otherwise view-only parent model.  Given the complexity of the Django admin, and in-particular the permissions related checks, it is the view of the Django security team that this change was necessary: that it is not currently feasible to maintain the existing behavior whilst escaping the potential privilege escalation in a way that would avoid a recurrence of similar issues in the future, and that would be compatible with Django's *safe by default* philosophy.  For the time being, developers whose applications are affected by this change should replace the use of inlines in read-only parents with custom forms and views that explicitly implement the desired functionality. In the longer term, adding a documented, supported, and properly-tested mechanism for partially-editable multi-model forms to the admin interface may occur in Django itself.  Thank you to Shen Ying for reporting this issue.  Affected supported versions ===========================  * Django master branch * Django 3.0 (which will be released in a separate blog post later today) * Django 2.2 * Django 2.1  Resolution ==========  Patches to resolve the issue have been applied to Django's master branch and the 3.0, 2.2, and 2.1 release branches. The patches may be obtained from the following changesets:  * On the `master branch * On the `3.0 release branch * On the `2.2 release branch * On the `2.1 release branch  The following releases have been issued:  * Django (`download Django | checksums * Django (`download Django | checksums  The PGP key ID used for these releases is Carlton Gibson:  General notes regarding security reporting ==========================================  As always, we ask that potential security issues be reported via private email to ``security@...ngoproject.com``, and not via Django's Trac instance or the django-developers list. Please see `our security policies <https://www.djangoproject.com/security/>`_ for further information.    Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      