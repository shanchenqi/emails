  oss-security - Kernel: kvm: OOB memory write via  kvm_dev_ioctl_get_cpuid            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Mon, 16 Dec (IST) From: P J P <ppandit@...hat.com> To: oss security list <oss-security@...ts.openwall.com> Subject: Kernel: kvm: OOB memory write via  kvm_dev_ioctl_get_cpuid     Hello,  An out-of-bounds memory write issue was found in the way Linux kernel's KVM  hypervisor handled 'KVM_GET_EMULATED_CPUID' ioctl(2) request to get cpuid  features emulated by the KVM hypervisor. A user/process able to access  '/dev/kvm' device could use this flaw to crash the system resulting in DoS  issue.  It was found by Syzkaller    ->  was assigned by Red Hat Inc.  Thank you. -- Prasad J Pandit / Red Hat Product Security Team B54C C6EB 8B5A DE8D   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      