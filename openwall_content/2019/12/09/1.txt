  oss-security - Shell wildcards considered dangerous?            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Mon, 9 Dec From: Georgi Guninski <gguninski@...il.com> To: oss-security@...ts.openwall.com Subject: Shell wildcards considered dangerous?  Remote version of this affects wu-ftpd from  Summary:  For trusted command PROGRAM, executing PROGRAM *.EXT may lead to arbitrary code execution, e.g. for PROGRAM=EXT=tar  The main idea is the wildcard to add program options.  Open problem:  Are popular programs other than tar vulnerable?  Since shell wildcards are unlikely to change, should best practice include not using *.EXT in shell?   Example exploit vector: starting program in untrusted directories.  Poc: ==== $rm -rf /tmp/1 ;mkdir /tmp/1 ; cd /tmp/1 ; tar cf a.tar /etc/issue $ : >  --to-command="yes .tar"  #end creating, starts PoC tar xf *.tar  #.tar (repeats) ====   --  CV:    https://j.ludost.net/resumegg.pdf site:  http://www.guninski.com blog:  https://j.ludost.net/blog  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      