  oss-security - Re: Privileged File Access from Desktop  Applications            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 11 Jul (CDT) From: Bob Friesenhahn <bfriesen@...ple.dallas.tx.us> To: oss-security@...ts.openwall.com cc: Malte Kraus <malte.kraus@...e.com> Subject: Re: Privileged File Access from Desktop  Applications  On Thu, 11 Jul Perry E. Metzger wrote: > > It seems like a bad idea. > > If one wants to have mechanisms by which the operating system can > allow unprivileged programs to temporarily assume privileges (which > is a frequent idea in security), then they should be carefully > designed and part of the OS, rather than creating an ad hoc facility > via a subsystem that isn't intended for it. There are good ways to do > that, like capabilities.  I agree.  It is rather common that more than one file needs to be  modified at one time.  If a more complex mechanism like a sqlite3  database needs to be updated, then the implementation of sqlite3 will  expect to be able to access files in a normal way and it will expect  to be use all the abilities it normally uses.  It is rather common  that atomic operations are required, locking is required, the ability  to link/rename files is required, and that synchronization of file  content and directories is required.  In addition to the security concerns, it is difficult to see how a  virtual filesystem intended for use by simplistic GUI file managers  will satisfy common administrative requirements.  Bob --  Bob Friesenhahn bfriesen@...ple.dallas.tx.us, http://www.simplesystems.org/users/bfriesen/ GraphicsMagick Maintainer,    http://www.GraphicsMagick.org/ Public Key,     http://www.simplesystems.org/users/bfriesen/public-key.txt  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      