  oss-security - Re: Thousands of vulnerabilities, almost no CVEs:  OSS-Fuzz            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Mon, 1 Jul From: Adrien Nader <adrien@...k.org> To: oss-security@...ts.openwall.com Subject: Re: Thousands of vulnerabilities, almost no CVEs:  OSS-Fuzz  Hello,  On Mon, Jun 24, Stuart D. Gathman wrote: > Question: is fuzzing useful for languages like Java/python?  Obviously, > you eventually reach a native code module in both cases, but fuzzing > the entire virtual machine is cumbersome.  Maybe native code > libraries > for "safe" languages should include fuzzing as part of testing.  AFL is used in the OCaml world despite it being clearly a "safe" language. There's a git repo with a couple examples and there are more in the wild: https://github.com/NathanReb/ocaml-afl-examples .  OCaml guarantees that you don't have undefined behaviour but there's nothing that prevents you from doing a typo in a string value, using multiplication instead of addition, not catching an exception you wanted to catch or as others have said, use more memory than expected. These are basically logic errors and very few languages guarantee that you'll avoid them (static typing helps in more than 90% of cases but less than of them).  --  Adrien  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      