  oss-security - deepin-clone: various symlink attacks            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Thu, 4 Jul From: Matthias Gerstner <mgerstner@...e.de> To: oss-security@...ts.openwall.com Subject: deepin-clone: various symlink attacks  Hello,  deepin-clone [1] is a command line and graphical disk backup utility that is part of the deepin desktop environment (a desktop environment focused on Chinese users).  In the course of a review [2] of polkit privileges used by the application the following major security issues have been found:  in GUI mode deepin-clone creates   `/tmp/.deepin-clone.log` as root and follows symlinks there.    `Helper::temporaryMountDevice()` uses a predictable path   `/tmp/.deepin-clone/mount/<block-dev-basename>` to temporarily mount a   file system there. These paths can be prepared by an attacker and   symlinks will be followed during mounting. If the attacker wins a race   condition by quickly entering the mount point then it can also prevent   the following unmount. This logic can e.g. be triggered by running   `deepin-clone -i /dev/sdX`.    An attacker can thus cause the file system to be permanently mounted   at an arbitrary location in the file system.  `Helper::getPartitionSizeInfo()` uses /tmp/partclone.log   as a fixed path during execution of partclone. The same issues about   symlink attacks etc.  like in 1) apply here.  similarly in `BootDoctor::fix()` the fixed path   `/tmp/repo.iso` is created and the fixed directory /tmp/.deepin-clone   is used. The same concerns as in 1) and 3) apply. By winning a race   condition to replace the `/tmp/repo.iso` symlink by an attacker   controlled iso file further privilege escalation may be possible.  The issues have been fixed via the upstream commit [3].  Best Regards  Matthias  [1]: https://github.com/linuxdeepin/deepin-clone [2]: [3]:  --  Matthias Gerstner <matthias.gerstner@...e.de> Dipl.-Wirtsch.-Inf. (FH), Security Engineer https://www.suse.com/security Phone: +49 53 GPG Key ID:  SUSE Linux GmbH GF: Felix Imendรถrffer, Mary Higgins, Sri Rasiah HRB (AG Nuernberg)  Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      