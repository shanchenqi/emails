  oss-security - Re: Privileged File Access from Desktop Applications            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 12 Jul From: Jordan Glover <Golden_Miller83@...tonmail.ch> To: "oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com> Cc: Simon McVittie <smcv@...ian.org> Subject: Re: Privileged File Access from Desktop Applications  On Friday, July 12, AM, Perry E. Metzger <perry@...rmont.com> wrote:  > On Thu, 11 Jul Simon McVittie smcv@...ian.org > wrote: > > > On Thu, 11 Jul at Perry E. Metzger wrote: > > > > > having to add file i/o subsystems inside of dbus(!) probably does > > > add lots of threats > > > > I think you might be misunderstanding the scope of D-Bus. > > Not really. The whole point is that instead of having the operating > system alone as part of your file security implementation you now > have a brand new service, an IPC mechanism, and loads of other stuff, > instead of having your app just do open(2) and write(2) etc.  Do you mean that IPC and D-bus aren't part of the OS? Then what is?  > It seems architecturally bad from a security perspective. The number > the number of trusted entities, the number of moving parts, the number > of mechanisms, and thus the number of ways things can go wrong keeps > going up. This is a mistake. And btw, this is a major piece of > mechanism being added just to handle the problem of someone wanting to > pop open an editor inside a GUI to edit a system config file, which is > not a major attack vector. But, now I have to worry about this new > file access service providing an attack surface that didn't exist > before. > > What's the right way to handle this stuff? Capabilities, > probably. It's what they're designed for.  They're completely not designed for this case. Setting CAP_DAC_OVERRIDE or CAP_SYS_ADMIN is very close to SUID root. See: https://grsecurity.net/false_boundaries_and_arbitrary_code_execution.php  Jordan  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      