  oss-security - Re: Thousands of vulnerabilities, almost no CVEs:  OSS-Fuzz            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Sat, 15 Jun (CDT) From: Bob Friesenhahn <bfriesen@...ple.dallas.tx.us> To: oss-security@...ts.openwall.com Subject: Re: Thousands of vulnerabilities, almost no CVEs:  OSS-Fuzz  On Sat, 15 Jun Alex Gaynor wrote: > > I think you're quite right that the central challenge here is the mismatch > between how Linux distributions operate and what their claims/people's > expectations are.  Within four years, most users will encounter updated software which  includes the fixes, assuming that an available developer did produce a  fix.  If you are interested in improving the software, I suggest rolling up  your sleeves and getting involved with implementing fixes.  Indeed,  only a small fraction of involved people are working on implementing  fixes.  > PS: I'd be remiss if I didn't at least mention that basically all the bug > classes we're discussing are induced by C/C++'s memory unsafety and better > programming language prevent them outright.  The "better" programming languages may prevent some of these problems  due to not allowing direct access to memory, but they introduce  new/different types of problems which can also be serious.  Indeed  some popular languages like Python, Perl, or Javascript seem more  dangerous than C/C++ programs.  Bob --  Bob Friesenhahn bfriesen@...ple.dallas.tx.us, http://www.simplesystems.org/users/bfriesen/ GraphicsMagick Maintainer,    http://www.GraphicsMagick.org/ Public Key,     http://www.simplesystems.org/users/bfriesen/public-key.txt  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      