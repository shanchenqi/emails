  oss-security - Re: Thousands of vulnerabilities, almost no CVEs:  OSS-Fuzz            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 24 Jun (EDT) From: "David A. Wheeler" <dwheeler@...eeler.com> To: "oss-security" <oss-security@...ts.openwall.com> Subject: Re: Thousands of vulnerabilities, almost no CVEs:  OSS-Fuzz  > On Mon, 24 Jun Bob Friesenhahn wrote: > > Most oss-fuzz issue detections are not CVE worthy.  For example, a one-byte  > > read "heap overflow" is not likely to cause any actual harm but oss-fuzz  > > would classify it as "heap overflow".  On Mon, 24 Jun (EDT), "Stuart D. Gathman" <stuart@...hman.org> wrote: > Nevertheless, it is a bug.  Fuzzers are amazing.  Going forward, the > best plan is for more projects to include fuzzing as part of the > build process testing.  It is a bug, fuzzers are amazing, and more projects should include fuzzing.  But CVEs are supposed to only be assigned to vulnerabilities or exposures. Many bugs are not vulnerabilities or exposures that lead to vulnerabilities.  If a bug *is* a vulnerability, then yes, it should have a CVE assignment, and there are clearly a lot of vulnerabilities without CVE assignments.  In particular, many organizations have a rapid upgrade process if some software version has a CVE, and a slow process otherwise. (There are things that need doing besides upgrading software.) If a particular version of software has a serious vulnerability, it needs at least one of the most serious vulnerabilities assigned a CVE so that people will upgrade it more rapidly.  In the end, the goal should be to get software fixed *and* deployed - if it's not deployed when it needs to be, it didn't help. Downstream needs to do their part by being prepared to upgrade... but suppliers need to make it clear why something needs to be upgraded quickly (if that's the case) so that the faster process will be used. We should be focusing on the "final impact", that is, we should be trying to reduce the cases where an attacker can exploit a known vulnerability in deployed software... *without* breaking the bank.  --- David A. Wheeler Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      