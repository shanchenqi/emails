  oss-security - Multiple vulnerabilities in Jenkins plugins            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Tue, 11 Jun From: Daniel Beck <ml@...kweb.net> To: oss-security@...ts.openwall.com Subject: Multiple vulnerabilities in Jenkins plugins  Jenkins is an open source automation server which enables developers around the world to reliably build, test, and deploy their software. The following releases contain fixes for security vulnerabilities:  * ElectricFlow Plugin * JX Resources Plugin * Token Macro Plugin 2.8  Summaries of the vulnerabilities are below. More details, severity, and attribution can be found here:  We provide advance notification for security updates on this mailing list: https://groups.google.com/d/forum/jenkinsci-advisories  If you discover security vulnerabilities in Jenkins, please report them as described here: https://jenkins.io/security/#reporting-vulnerabilities  ---  / Token Macro Plugin did not configure its XML parser in a way that would  prevent XML External Entity (XXE) processing.  This allowed attackers able to control the contents of files processed with  the ${XML} macro to have Jenkins parse a maliciously crafted XML file that  uses external entities for extraction of secrets from the Jenkins agent,  server-side request forgery, or denial-of-service attacks.  Token Macro Plugin no longer processes XML External Entities in XML documents.   / (CSRF), (improper authorization) JX Resources Plugin did not perform permission checks on a method  implementing form validation. This allowed users with Overall/Read access to  Jenkins to connect to an attacker-specified Kubernetes server and obtain  information about an attacker-specified namespace. Doing so might also leak  service account credentials used for the connection. Additionally, it allowed  attackers to obtain the value of any attacker-specified environment variable  for the Jenkins master process.  Additionally, this form validation method did not require POST requests,  resulting in a cross-site request forgery vulnerability.  This form validation method now requires POST requests and Overall/Administer  permissions.   (1) / (CSRF), (improper authorization) A missing permission check in a form validation method in ElectricFlow Plugin  allowed users with Overall/Read permission to initiate a connection test to  an attacker-specified server with attacker-specified username and password.  Additionally, the form validation method did not require POST requests,  resulting in a CSRF vulnerability.  This form validation method now requires POST requests and Overall/Administer  permissions.   (2) / Various form validation and form autocompletion methods in ElectricFlow  Plugin lacked permission checks. This allowed attackers with Overall/Read  access to obtain information about the configuration of ElectricFlow Plugin,  as well as the configuration and data of connected ElectricFlow servers.  These form validation and autocompletion methods now require  Overall/Administer or Job/Configure permission, as appropriate for the given  method.   / ElectricFlow Plugin unconditionally disabled SSL/TLS certificate validation  for the entire Jenkins master JVM during the deployment/publication of an  application.  ElectricFlow Plugin no longer does that. Instead, the existing opt-in option to ignore SSL/TLS errors is used during deployment for the specific connection.   / The plugin adds metadata displayed on build pages during its operations.  Any user content was not escaped, resulting in a cross-site scripting  vulnerability allowing users with Job/Configure permission, or attackers  controlling API responses received from ElectricFlow to render arbitrary HTML  and JavaScript on Jenkins build pages.  Build metadata is now filtered through a HTML formatter that only allows  showing basic HTML, neutralizing any unsafe data. Additionally, all builds  executed after the security update is applied will now properly escape  content received from ElectricFlow.   / The configuration forms of various post-build steps contributed by  ElectricFlow Plugin were vulnerable to cross-site scripting.  This allowed attackers able to control the output of connected ElectricFlow  servers' APIs to inject arbitrary HTML and JavaScript into the configuration  form.  ElectricFlow Plugin no longer interprets HTML/JavaScript in responses from  ElectricFlow server APIs on job configuration forms.   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      