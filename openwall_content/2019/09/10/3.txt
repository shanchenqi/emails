  oss-security - Linux kernel: powerpc: data leak with FP/VMX   triggerable by unavailable exception in transaction            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Tue, 10 Sep From: Michael Neuling <mikey@...ling.org> To: oss-security <oss-security@...ts.openwall.com> Cc: Michael Ellerman <michael@...erman.id.au>,  linuxppc-dev@...ts.ozlabs.org,  linux-kernel@...r.kernel.org,  Linuxppc-users <linuxppc-users@...ts.ozlabs.org>,  Gustavo Romero  <gromero@...ux.vnet.ibm.com> Subject: Linux kernel: powerpc: data leak with FP/VMX   triggerable by unavailable exception in transaction  The Linux kernel for powerpc since has a bug in it's TM handling where any user can read the FP/VMX registers of a difference user's process. Users of TM + FP/VMX can also experience corruption of their FP/VMX state.  To trigger the bug, a process starts a transaction and reads a FP/VMX register. This transaction can then fail which causes a rollback to the checkpointed state. Due to the kernel taking an FP/VMX unavaliable exception inside a transaction and the kernel's incorrect handling of this, the checkpointed state can be set to the FP/VMX registers of another process. This checkpointed state can then be read by the process hence leaking data from one process to another.  The trigger for this bug is an FP/VMX unavailable exception inside a transaction, hence the process needs FP/VMX off when starting the transaction. FP/VMX availability is under the control of the kernel and is transparent to the user, hence the user has to retry the transaction many times to trigger this bug.   All 64-bit machines where TM is present are affected. This includes all POWER8 variants and POWER9 VMs under KVM or LPARs under PowerVM. POWER9 bare metal doesn't support TM and hence is not affected.  The bug was introduced in commit:   ("powerpc/tm: Fix FP and VMX register corruption") Which was originally merged in  The upstream fix is here:    The fix can be verified by running the tm-poison from the kernel selftests. This test is in a patch here: which should eventually end up here: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/tools/testing/selftests/powerpc/tm/tm-poison.c  cheers Mikey       Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      