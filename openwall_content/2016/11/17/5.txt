  oss-security - bash - popd controlled free            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Thu, 17 Nov From: Fernando MuĂąoz <fernando@...l-life.com> To: oss-security@...ts.openwall.com Cc: Chester Ramey <chet.ramey@...e.edu> Subject: bash - popd controlled free  bash - popd controlled free ====================  popd can be tricked to free a user supplied address in the following way:  $ popd  This could be used to bypass restricted shells (rsh) on some environments to cause use-after-free.  This was already reported to bash devs and only considered a bug, if Mitre consider it could have a security impact, please assign a CVE.  Details ====== $ gdb bash ... (gdb) r -c 'popd The program being debugged has been started already. Start it from the beginning? (y or n) y Starting program: /root/bashinstrumentado/bash-4.3/bash -c 'popd  Program received signal SIGSEGV, Segmentation fault. in popd_builtin (list=<optimized out>) at          free (pushd_directory_list[i]); (gdb) print pushd_directory_list[i] Cannot access memory at address  ---- $ export AA=`perl -e 'print $ gdb ./bash ... (gdb) x/s *((char **)environ+13)    "AA=", 'A' <repeats times>... (gdb) run -c 'popd The program being debugged has been started already. Start it from the beginning? (y or n) y Starting program: /root/bash/bash-4.3/bash -c 'popd  Program received signal SIGSEGV, Segmentation fault. internal_free "./pushd.def", flags=<optimized out>) at      if (p->mh_alloc == ISMEMALIGN)   - Fernando  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      