  oss-security - Xen Security Advisory - qemu incautious about  shared ring processing            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Tue, 22 Nov From: Xen.org security team <security@....org> To: xen-announce@...ts.xen.org, xen-devel@...ts.xen.org,  xen-users@...ts.xen.org, oss-security@...ts.openwall.com CC: Xen.org security team <security@....org> Subject: Xen Security Advisory - qemu incautious about  shared ring processing  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1              Xen Security Advisory /                               version 3               qemu incautious about shared ring processing  UPDATES IN VERSION 3 ====================  Added email header syntax to patches, for e.g. git-am.  Public release.  ISSUE DESCRIPTION =================  The compiler can emit optimizations in qemu which can lead to double fetch vulnerabilities.  Specifically data on the rings shared between qemu and the hypervisor (which the guest under control can obtain mappings of) can be fetched twice (during which time the guest can alter the contents) possibly leading to arbitrary code execution in qemu.  IMPACT ======  Malicious administrators can exploit this vulnerability to take over the qemu process, elevating its privilege to that of the qemu process.  In a system not using a device model stub domain (or other techniques for deprivileging qemu), malicious guest administrators can thus elevate their privilege to that of the host.  VULNERABLE SYSTEMS ==================  All Xen versions with all flavors of qemu are affected.  Only x86 HVM guests expose the vulnerability.  x86 PV guests do not expose the vulnerability.  ARM systems are not vulnerable.  MITIGATION ==========  Running only PV guests will avoid the vulnerability.  Enabling stubdomains will mitigate this issue, by reducing the escalation to only those privileges accorded to the service domain. In a usual configuration, a service domain has only the privilege of the guest, so this eliminates the vulnerability.  The vulnerability can be avoided if the guest kernel is controlled by the host rather than guest administrator, provided that further steps are taken to prevent the guest administrator from loading code into the kernel (e.g. by disabling loadable modules etc) or from using other mechanisms which allow them to run code at kernel privilege.  CREDITS =======  This issue was discovered by yanghongke of Huawei Security Test Team.  RESOLUTION ==========  Applying the appropriate attached patch resolves this issue.          qemu-upstream    xen-unstable, Xen 4.7.x         qemu-traditional xen-unstable, Xen 4.7.x, Xen 4.6.x     qemu-upstream    Xen 4.6.x     qemu-upstream    Xen 4.5.x     qemu-traditional Xen 4.5.x, Xen 4.4.x     qemu-upstream    Xen 4.4.x  $       $  DEPLOYMENT DURING EMBARGO =========================  Deployment of the patch described above (or others which are substantially similar) and the PV guest mitigation are permitted during the embargo, even on public-facing systems with untrusted guest users and administrators.  HOWEVER deployment of the stubdomain mitigation described above is NOT permitted (except where all the affected systems and VMs are administered and used only by organisations which are members of the Xen Project Security Issues Predisclosure List).  Specifically, deployment on public cloud systems is NOT permitted.  This is because in that case the configuration change may be visible to the guest which could lead to the rediscovery of the vulnerability.  But: Distribution of updated software is prohibited (except to other members of the predisclosure list).  Predisclosure list members who wish to deploy significantly different patches and/or mitigations, please contact the Xen Project Security Team.  (Note: this during-embargo deployment notice is retained in post-embargo publicly released Xen Project advisories, even though it is then no longer applicable.  This is to enable the community to have oversight of the Xen Project Security Team's decisionmaking.)  For more information about permissible uses of embargoed information, consult the Xen Project community's agreed Security Policy:   http://www.xenproject.org/security-policy.html -----BEGIN PGP SIGNATURE----- Version: GnuPG v1  =SBVo -----END PGP SIGNATURE-----  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      