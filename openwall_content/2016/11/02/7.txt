  oss-security - [SECURITY ADVISORY] curl glob parser write/read out of bounds            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Wed, 2 Nov (CET) From: Daniel Stenberg <daniel@...x.se> To: curl security announcements -- curl users <curl-users@...l.haxx.se>,         curl-announce@...l.haxx.se,         libcurl hacking <curl-library@...l.haxx.se>,         oss-security@...ts.openwall.com Subject: [SECURITY ADVISORY] curl glob parser write/read out of bounds  glob parser write/read out of bounds ====================================  Project cURL Security Advisory, November 2, -  VULNERABILITY -------------  The curl tool's "globbing" feature allows a user to specify a numerical range through which curl will iterate. It is typically specified as [1-5], specifying the first and the last numbers in the range. Or with [a-z], using letters.  1. The curl code for parsing the second *unsigned* number did not check for a leading minus character, which allowed a user to specify `[1--1]` with no complaints and have the latter `-1` number get turned into the largest unsigned long value the system can handle. This would ultimately cause curl to write outside the dedicated malloced buffer after no less than iterations, since it would have room for 5 digits but not 6.  2. When the range is specified with letters, and the ending letter is left out `[L-]`, the code would still advance its read pointer 5 bytes even if the string was just 4 bytes and end up reading outside the given buffer.  This flaw exists only in the curl tool, not in the libcurl library.  We are not aware of any exploit of this flaw.  INFO ----  The Common Vulnerabilities and Exposures (CVE) project has assigned the name to this issue.  AFFECTED VERSIONS -----------------  This flaw exists in the following curl versions.  - Affected versions: curl to and including - Not affected versions: curl < and curl >=  libcurl is used by many applications, but not always advertised as such!  THE SOLUTION ------------  In version the function reading data will consider reading a zero size to be an error and bail out.  A [patch for is available.  RECOMMENDATIONS ---------------  We suggest you take one of the following actions immediately, in order of preference:    A - Upgrade curl and libcurl to version    B - Apply the patch to your version and rebuild    C - Switch off globbing or make sure you have all ranges in use verified!  TIME LINE ---------  It was first reported to the curl project on October 2 by Lu§t Nguy­n.  We contacted distros@...nwall on October 19.  curl was released on November 2 coordinated with the publication of this advisory.  CREDITS -------  Thanks to Lu§t Nguy­n.  --     / daniel.haxx.se  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      