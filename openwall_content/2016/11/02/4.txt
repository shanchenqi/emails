  oss-security - [SECURITY ADVISORY] curl OOB write via unchecked multiplication            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Wed, 2 Nov (CET) From: Daniel Stenberg <daniel@...x.se> To: curl security announcements -- curl users <curl-users@...l.haxx.se>,         curl-announce@...l.haxx.se,         libcurl hacking <curl-library@...l.haxx.se>,         oss-security@...ts.openwall.com Subject: [SECURITY ADVISORY] curl OOB write via unchecked multiplication  OOB write via unchecked multiplication ======================================  Project cURL Security Advisory, November 2, -  VULNERABILITY -------------  In libcurl's base64 encode function, the output buffer is allocated as follows without any checks on insize:       malloc( insize * 4 / 3 + 4 )  On systems with 32-bit addresses in userspace (e.g. x86, ARM, x32), the multiplication in the expression wraps around if insize is at least 1GB of data. If this happens, an undersized output buffer will be allocated, but the full result will be written, thus causing the memory behind the output buffer to be overwritten.  If a username is set directly via `CURLOPT_USERNAME` (or curl's `-u, --user` option), this vulnerability can be triggered. The name has to be at least big in a 32bit system.  Systems with 64 bit versions of the `size_t` type are not affected by this issue.  We are not aware of any exploit of this flaw.  INFO ----  The Common Vulnerabilities and Exposures (CVE) project has assigned the name to this issue.  AFFECTED VERSIONS -----------------  This flaw exists in the following curl versions.  - Affected versions: curl 7.1 to and including - Not affected versions: curl >=  libcurl is used by many applications, but not always advertised as such!  THE SOLUTION ------------  In version these functions will deny negative string lengths from being used.  A [patch for is available.  RECOMMENDATIONS ---------------  We suggest you take one of the following actions immediately, in order of preference:    A - Upgrade curl and libcurl to version    B - Apply the patch to your version and rebuild    C - Do not use the `CURLOPT_USERNAME` option.  TIME LINE ---------  It was first reported to the curl project on September 23 by Cure53.  We contacted distros@...nwall on October 19.  curl was released on November 2 coordinated with the publication of this advisory.  CREDITS -------  This vulnerability was found during a Secure Open Source audit performed by Cure53.  --     / daniel.haxx.se  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      