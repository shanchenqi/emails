  oss-security - dracut creates world readble initramfs when early cpio  is used            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Mon, 7 Nov From: Andreas Stieger <astieger@...e.com> To: oss-security@...ts.openwall.com Subject: dracut creates world readble initramfs when early cpio  is used  Hello,  An openSUSE community user reported a permissions oddity with his initramfs. Upon further analysis this issued turns out to be a local information disclosure issue in dracut.  SUSE bug:  Dracut generates initramfs images with world-readable permissions when using "early cpio", such as when including microcode updates. Local users may use this to obtain information from these files, typically encryption keys and network storage credentials.  E.g. in dracut  if [[ $create_early_cpio = yes ]]; then     echo 1 > "$early_cpio_dir/d/early_cpio"     # The microcode blob is _before_ the initramfs blob, not after     (cd "$early_cpio_dir/d";     find . -print0 | cpio --null $cpio_owner_root -H newc -o --quiet > $outfile) fi if ! ( umask cd "$initdir"; find . -print0 | cpio --null $cpio_owner_root -H newc -o --quiet | \     $compress >> "$outfile"; ); then     dfatal "dracut: creation of $outfile failed"     exit 1 fi  The permissions of the output file depend on umask at creation time, and appending to an existing file does not change them. create_early_cpio is set to on when microcode updates are being used.  The very similar vulnerability was reported and fixed in  However the addition of microcode update support in re-introduced the issue:  The vulnerability remains in current git master, which does something along the lines of:  if [early_cpio]    cpio [...] > ${DRACUT_TMPDIR}/initramfs.img umask cpio [...] >> ${DRACUT_TMPDIR}/initramfs.img cp --reflink=auto "${DRACUT_TMPDIR}/initramfs.img" "$outfile"  Our fix in upstream master:  was assigned to this issue.  The local workaround is to adjust the permissions of the initramfs files manually, and all back-ported patches will set umask to a suitable value such as prior to first writing the file.  For the SUSE Security Team, Andreas Stieger  --  Andreas Stieger <astieger@...e.com> Project Manager Security SUSE Linux GmbH, GF: Felix ImendĂśrffer, Jane Smithard, Graham Norton, HRB (AG NĂźrnberg)      Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      