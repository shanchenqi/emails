  oss-security - elfutils: memory allocation failure in allocate_elf (common.h)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Wed, 09 Nov From: Agostino Sarubbo <ago@...too.org> To: oss-security@...ts.openwall.com Cc: cve-assign@...re.org Subject: elfutils: memory allocation failure in allocate_elf (common.h)  If it is suitable for a CVE please assign one. Thanks.  Description: elfutils is a set of libraries/utilities to handle ELF objects (drop in  replacement for libelf).  During the fuzz of libdwarf, I noticed a memory allocation failure which  involves elfutils. Actually there is a proposed patch on the elfutils mailing list, but nobody  commented.  The complete ASan output:  # dwarfdump $FILE AddressSanitizer failed to allocate  bytes of LargeMmapAllocator (error code: 12) memory map follows:           /usr/bin/dwarfdump-asan           /usr/bin/dwarfdump-asan           /usr/bin/dwarfdump-asanstack]           [vvar]           [vdso]           [vsyscall] of process memory map. CHECK failed: "((0 && "unable to mmap")) !=  (0)" (0x0, 0x0)     #0 in __asan::AsanCheckFailed(char const*, int, char const*,  unsigned long long, unsigned long long)     #1 in __sanitizer::CheckFailed(char const*, int, char const*,  unsigned long long, unsigned long long)     #2 in __sanitizer::ReportMmapFailureAndDie(unsigned long, char  const*, char const*, int, bool)     #3 in __sanitizer::MmapOrDie(unsigned long, char const*, bool)      #4 in  __sanitizer::LargeMmapAllocator::Allocate(__sanitizer::AllocatorStats*,  unsigned long, unsigned long)     #5 in   0ul, __sanitizer::SizeClassMap,  __asan::AsanMapUnmapCallback>,   0ul, __sanitizer::SizeClassMap, __asan::AsanMapUnmapCallback>  >, __sanitizer::LargeMmapAllocator   0ul, __sanitizer::SizeClassMap, __asan::AsanMapUnmapCallback>  >*, unsigned long, unsigned long, bool, bool) /var/tmp/portage/sys-     #6 in __asan::Allocator::Allocate(unsigned long, unsigned long,  __sanitizer::BufferedStackTrace*, __asan::AllocType, bool)      #7 in __asan::Allocator::Calloc(unsigned long, unsigned long,  __sanitizer::BufferedStackTrace*)     #8 in __asan::asan_calloc(unsigned long, unsigned long,  __sanitizer::BufferedStackTrace*)     #9 in calloc     #10 in allocate_elf /tmp/portage/dev-     #11 in file_read_elf /tmp/portage/dev-     #12 in read_unmmaped_file /tmp/portage/dev-     #13 in read_file /tmp/portage/dev-     #14 in main     #15 in __libc_start_main /var/tmp/portage/sys-     #16 in _start  Affected version:  Fixed version: N/A  Proposed patch:  Credit: This bug was discovered by Agostino Sarubbo of Gentoo.  CVE: N/A  Reproducer:  Timeline: bug discovered and reported to upstream blog post about the issue  Note: This bug was found with American Fuzzy Lop.  Permalink:  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      