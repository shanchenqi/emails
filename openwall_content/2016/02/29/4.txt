  oss-security - Possible Information Leak Vulnerability in Action View.            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Mon, 29 Feb From: Rafael Mendonรงa Franรงa <rafaelmfranca@...il.com> To: "rubyonrails-security@...glegroups.com" <rubyonrails-security@...glegroups.com>, security@...e.de,  	"oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com>,  	"ruby-security-ann@...glegroups.com" <ruby-security-ann@...glegroups.com> Subject: Possible Information Leak Vulnerability in Action View.  Possible Information Leak Vulnerability in Action View.  There is a possible directory traversal and information leak vulnerability in Action View. This was meant to be fixed on However the 3.2 patch was not covering all the scenarios. This vulnerability has been assigned the CVE identifier  Versions Affected:  3.2.x, 4.0.x, 4.1.x Not affected:       4.2+ Fixed Versions:      Impact ------ Applications that pass unverified user input to the `render` method in a controller may be vulnerable to an information leak vulnerability.  Impacted code will look something like this:  ```ruby def index   render params[:id] end ```  Carefully crafted requests can cause the above code to render files from unexpected places like outside the application's view directory, and can possibly escalate this to a remote code execution attack.  All users running an affected release should either upgrade or use one of the workarounds immediately.  Releases -------- The FIXED releases are available at the normal locations.  Workarounds ----------- A workaround to this issue is to not pass arbitrary user input to the `render` method. Instead, verify that data before passing it to the `render` method.  For example, change this:  ```ruby def index   render params[:id] end ```  To this:  ```ruby def index   render verify_template(params[:id]) end  private def verify_template(name)   # add verification logic particular to your application here end ```  Patches ------- To aid users who aren't able to upgrade immediately we have provided patches for it. It is in git-am format and consist of a single changeset.  * - Patch for 3.2 series * - Patch for 4.1 series  Credits ------- Thanks to both Jyoti Singh and Tobias Kraze from makandra for reporting this and working with us in the patch!  Content of type "text/html" skipped  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      