  oss-security - curl: NTLM credentials not-checked for proxy connection re-use            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Mon, 1 Feb (CET) From: Daniel Stenberg <daniel@...x.se> To: oss-security@...ts.openwall.com Subject: curl: NTLM credentials not-checked for proxy connection re-use  NTLM credentials not-checked for proxy connection re-use ========================================================  Project cURL Security Advisory, January 27th -  VULNERABILITY -------------  libcurl will reuse NTLM-authenticated proxy connections without properly making sure that the connection was authenticated with the same credentials as set for this transfer.  libcurl maintains a pool of connections after a transfer has completed. The pool of connections is then gone through when a new transfer is requested and if there's a live connection available that can be reused, it is preferred instead of creating a new one.  Since NTLM-based authentication is *connection oriented* instead of *request oriented* as other HTTP based authentication, it is important that only connections that have been authenticated with the correct username + password are reused. This was done properly for server connections already, but libcurl failed to do it properly for proxy connections using NTLM.  A libcurl application can easily switch user credentials used for a proxy connection between two requests, and that subsequent transfer then MUST make libcurl use another connection. libcurl previously failed to do so.  The effects of this flaw, is that the application could be reusing a proxy connection using the previously used credentials and thus it could be given to or prevented access from resources that it wasn't intended to.  This problem is very similar to which was for direct server connections while this is for proxy connections.  We are not aware of any exploit of this flaw.  INFO ----  This flaw can also affect the curl command line tool if a similar operation series is made with that.  The Common Vulnerabilities and Exposures (CVE) project has assigned the name to this issue.  AFFECTED VERSIONS -----------------  This flaw is relevant for  - Affected versions: libcurl to and including - Not affected versions: libcurl < and libcurl >=  libcurl is used by many applications, but not always advertised as such!  THE SOLUTION ------------  In version libcurl properly verifies the credentials for NTLM proxies and only reuses a connection if there there is a match.  A patch for this problem that changes the default is available at:        RECOMMENDATIONS ---------------  We suggest you take one of the following actions immediately, in order of preference:    A - Upgrade curl and libcurl to version    B - Apply the patch to your version and rebuild    C - Avoid NTLM with proxies, or if you use NTLM with proxies, make sure you       close all the libcurl handles if you ever change proxy credentials so that       libcurl won't get a chance to reuse the wrong connection.  TIME LINE ---------  It was first reported to the curl project on January 13 We contacted distros@...nwall on January 21.  libcurl was released on January 27 coordinated with the publication of this advisory.  CREDITS -------  Reported and patched by Isaac Boukris.  Thanks a lot!  --     / daniel.haxx.se  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      