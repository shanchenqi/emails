  oss-security - Re: CVE Request: bash-completion: dequote command  injection            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Thu, 25 Feb From: John Haxby <john.haxby@...cle.com> To: oss-security@...ts.openwall.com Subject: Re: CVE Request: bash-completion: dequote command  injection  On Kurt Seifried wrote: > I think in this case it's pretty simply "dequoting should not result in > code execution" much like the various deserialization flaws (they should > deserialize the data, not execute random stuff).  My immediate assumption was that an unprivileged user could leave something lying around that root could complete on.  Within bash-completion, most of the uses of dequote are to find a config file so there'd be a degree of social engineering to persuade root to use a config file of your choice.   The other main use seems to be in _parse_help() and _parse_usage() which parse gnu-style help and bsd-style usage respectively and that might not need as much social engineering to exploit.  I didn't investigate further.  Whether or not this turns out to be exploitable at all in bash-completion, I do agree with Kurt though.  jch  >  > On Wed, Feb 24, at PM, Fernando Muñoz <fernando@...l-life.com> > wrote: >  >> Hello Eric, >> >> I never mentioned privilege escalation. >> >> This issue how ever could appear when a different application uses >> user input and calls "dequote" function that not only dequotes, but >> also executes it as a command. If mitre doesn't consider it CVE worth, >> that's OK! >> >> Regards. >> >> >> >> On Wed, Feb 24, at PM, Eric Blake <eblake@...hat.com> wrote: >>> On PM, Fernando Muñoz wrote: >>>> Marcelo Echeverria and Fernando Muñoz discovered that the dequote >>>> function included in bash-completion allows to execute arbitrary >>>> commands since it uses the eval function to call printf and perform >>>> the actual dequoting. bash-completion is included on Debian, Ubuntu >>>> OpenSuse [1] and probably other distros. >>> >>> But what is the privilege escalation?  This is no different than >>> incorrectly using 'eval' in a shell script - you may have buggy code, >>> and have an easy-to-trigger bug, but if you can't escalate privileges, >>> how it is a CVE? >>> >>> -- >>> Eric Blake   eblake redhat com    >>> Libvirt virtualization library http://libvirt.org >>> >> >  >  >    Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      