  oss-security - Re: Ruining the Magic of Magento's Encryption Library            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Wed, 27 Jul (EDT) From: cve-assign@...re.org To: oss-security@...ts.openwall.com Cc: cve-assign@...re.org Subject: Re: Ruining the Magic of Magento's Encryption Library  -----BEGIN PGP SIGNED MESSAGE----- Hash:  We wanted to provide at least one CVE ID for this report, because there are some CVE use cases in which it's of interest to track whether a code review exists, even if there isn't yet a specific association with patch management.  > Magento, one of the largest open source e-commerce platforms, ships a > broken cryptography library that clueless developers are probably using to > encrypt your credit card information for their client's customers.  It's possible that some CVE ID assignments could be made for third-party applications that use this library. doesn't directly discuss what parts of the cryptography code are reachable in default or typical deployments of Magento. We haven't been able to find documentation that describes how independent developers were expected to use the library code. http://devdocs.magento.com/guides/v2.1/ext-best-practices/extension-coding/security-performance-data-bp.html has general comments such as "Avoid using low-level functionality" and "Always encrypt sensitive data or configurations." Finally, there are no recent Crypt.php or Encryptor.php commits on the https://github.com/magento/magento2/tree/develop/lib/internal/Magento/Framework/Encryption page.  Given the above, we will initially focus on       http://php.net/manual/en/function.rand.php says "rand - Generate a random integer ... This function does not generate cryptographically secure values, and should not be used for cryptographic purposes."  Use for the incorrect choice of the rand function within the    $initVector .= $abc[rand(0, strlen($abc) - 1)];  line.  - --  CVE Assignment Team M/S Burlington Road, Bedford, MA USA [ A PGP key is available for encrypted communications at   http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG v1  =DJ+Z -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      