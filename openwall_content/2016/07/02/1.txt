  oss-security - [SECURITY] Apache Qpid: deserialization of untrusted  input while using JMS ObjectMessage            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Sat, 2 Jul From: Robbie Gemmell <robbie@...che.org> To: "dev@...d.apache.org" <dev@...d.apache.org>, "users@...d.apache.org" <users@...d.apache.org>, announce@...che.org,  	"security@...che.org" <security@...che.org>, oss-security@...ts.openwall.com,  	bugtraq@...urityfocus.com Subject: [SECURITY] Apache Qpid: deserialization of untrusted  input while using JMS ObjectMessage  Apache Qpid: deserialization of untrusted input while using JMS ObjectMessage  Severity: Moderate  Vendor: The Apache Software Foundation  Versions Affected: Qpid AMQP 0-x JMS client and earlier Qpid JMS (AMQP 1.0) client and earlier  Description: When applications call getObject() on a consumed JMS ObjectMessage they are subject to the behaviour of any object deserialization during the process of constructing the body to return. Unless the application has taken outside steps to limit the deserialization process, they can't protect against input that might try to make undesired use of classes available on the application classpath that might be vulnerable to exploitation.  Mitigation: Users using ObjectMessage can upgrade to Qpid AMQP 0-x JMS client or Qpid JMS (AMQP 1.0) client or later, and use the new configuration options to whitelist trusted content permitted for deserialization. When so configured, attempts to deserialize input containing other content will be prevented. Alternatively, users of older client releases may utilise other means such as agent-based approach to help govern content permitted for deserialization in their application.  Credit: This issue was discovered by Matthias Kaiser of Code White (www.code-white.com)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      