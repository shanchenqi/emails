  oss-security - Re: cve request: systemd-machined: information  exposure for docker containers            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 28 Jul From: Daniel J Walsh <dwalsh@...hat.com> To: oss-security@...ts.openwall.com Subject: Re: cve request: systemd-machined: information  exposure for docker containers  Actually this package oci-register-machine is called as a hook and could be used by runc, or  as Jesse points out placed in /usr/libexec/oci/hooks.d/oci-register-machine, Red Hats patched  version of docker will execute the hook and register with machinectl.  This same  behaviour happens  with any container tool that registers with machinectl including systemd-nspawn, libvirt-lxc and maybe  lxc tools.  The question is whether or not this is information that should not be available to non privileged  users on a system or not.  The information is not available to processes inside of a container unless they can  talk to systemd.    Lennart is wrong when he states that this only effects "user" containers, any container that registers with  machinectl, will have this information revealed to non privileged user processes.   On PM, Jessica Frazelle wrote: > To be clear this is ONLY in Red Hat's fork of docker which is unsupported > by Docker. There is no oci-register-machine in docker itself. > > On Wednesday, July 27, Jesse Hertz <jesse.hertz@...group.trust> wrote: > >> Just to chime in here, since a docker container would be inside its own >> PID namespace, running ‘ps’ inside a container would not show you other >> processes/containers running on the same host. >> A similar “vulnerability" I “found” was patched in Docker earlier (tl;dr >> '/proc/sched_debug’ is not pid namespace aware). >> >> -jh >>> On Jul 27, at PM, Christian Rebischke < >> Chris.Rebischke@...hlinux.org <javascript:;>> wrote: >>> On Wed, Jul 27, at Daniel J Walsh wrote: >>>> >>>> On PM, Christian Rebischke wrote: >>>>> On Tue, Jul 26, at cve-assign@...re.org >> <javascript:;> wrote: >>>>>> -----BEGIN PGP SIGNED MESSAGE----- >>>>>> Hash: >>>>>> >>>>>>> Once docker containers register themselves to systemd-machined >>>>>>> by oci-register-machine. Any unprivileged user could run >>>>>>> machinectl to list every single containers running in the host >>>>>>> even if the containers do not belong to this user (including >> containers >>>>>>> belong to the root user), and access sensitive information associated >>>>>>> with any individual container including its internal IP address, OS >>>>>>> version, running processes, and file path for its rootfs. >>>>>>> >>>>>>> $ machinectl status >>>>>>> >>>>>>>           Since: Mon UTC; 34s ago >>>>>>>          Leader: (sleep) >>>>>>>         Service: docker; class container >>>>>>>            Root: >> >>>>>>>         Address: >>>>>>>                  >>>>>>>              OS: Red Hat Enterprise Linux Server 7.2 (Maipo) >>>>>>>            Unit: >> >>>>>>>                  sleep >>>>>> Use >>>>> Hello, >>>>> I don't think that the bug for this problem lies in systemd. >>>>> It's more a design mistake in docker or oci-register-machine. >>>>> I have forwarded this issue to the systemd developer team and I don't >>>>> think they will fix this in the future. In their opinion it's a >>>>> bug in docker or oci-register-machine: >>>>> >>>>> >>>>> >>>>> by the way.. I would feel glad if the security researchers would first >>>>> message the developers and then assign a CVE a bug. This is the normal >>>>> way for a full disclosure. >>>>> >>>>> best regards, >>>>> >>>>> Christian Rebischke >>>> Why is this a bug in oci-register-machine?  All it is doing is calling >>>> the systemd-machine call to register with it using the three flags >>>> available. >>>> Is systemd saying we should not use that call? >>> Let me quote Lennart Poettering: >>> >>> --- >>> machined is a system service and is for registering containers running >>> on the system. There's no concept of "user containers" with that, and >>> unprivileged users do not have the privileges to even register any >>> containers with machined. >>> >>> If you ask me the CVE is complete and utter rubbish. At least against >>> systemd. If Docker knows a concept of user containers, then good for >>> them, but in that case they shouldn't register them with machined >>> really, if they are not supposed to be visible on the host. >>> >>> Generally though I think the CVE is without merit entirely, after all >>> "ps" is generally unrestricted, and hence you can always see container >>> processes running on the host anyway. >>> --- >>> >>> In my opinion I would say you shouldn't use this call if you don't want >>> an information leak. Even if systemd would fix the output of >>> `machinectl status ..`. The information leak would still be there >>> because you could still see informations about the container with `ps` >>> or other tools. systemd is not designed for 'user containers'. >>> >>> If yo have further questions. I would say that you ask the >>> systemd-developers on their mailing list directly. >>   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      