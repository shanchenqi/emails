  oss-security - Re: Pylint checks not as static as one would think            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Tue, 12 Jul From: Jakub Wilk <jwilk@...lk.net> To: oss-security@...ts.openwall.com Subject: Re: Pylint checks not as static as one would think  * Jakub Wilk <jwilk@...lk.net>, >$ cat moo.py >from _moo import * > >$ cat moo.c >#include <stdio.h> >#include <signal.h> >void __attribute__((constructor)) moo() { >	printf("moo!\n"); >	kill(0, SIGSEGV); >} > >$ gcc -Wall -shared -fPIC moo.c -o _moo.so > >$ pylint moo.py >No config file found, using default configuration >moo! >Segmentation fault  This was fixed in Pylint  |   * Added new options for controlling the loading of C extensions. |     By default, only C extensions from the stdlib will be loaded |     into the active Python interpreter for inspection, because they |     can run arbitrary code on import. The option |     `--extension-pkg-whitelist` can be used to specify modules |     or packages that are safe to load.  Beware that by default Pylint reads configuration file from cwd, and  this configuration file can whitelist malicious extensions. You probably  want to use --rcfile=/dev/null when cwd is untrusted.  And here's another code execution bug:  --  Jakub Wilk  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      