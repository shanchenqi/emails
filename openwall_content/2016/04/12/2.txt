  oss-security - : out-of-bounds write in horizontalDifference8() in  tiffcp tool            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Tue, 12 Apr From: 张开翔 <zhangkaixiang@....cn> To: "oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com> Subject: : out-of-bounds write in horizontalDifference8() in  tiffcp tool  Details  ============  Product: libtiff  Affected Versions: <=  CVE ID:  Tested system: CentOS Linux release 64bit  Vulnerability Type: out-of-bounds write Vendor URL: http://www.remotesensing.org/libtiff/  Credit: Kaixiang Zhang of the Cloud Security Team, Qihoo    Introduction  ============  An out-of-bounds write flaw was found in libtiff when using tiffcp command to handle malicious tiff file. The vulnerability exist in function horizontalDifference8()  without checking the buffer length.An attacker could control the head data of next heap which contains pre_size field and size filed to result in DoS or may command execution..   Source info  ============           wp += n + stride - 1;     /* point to last one */           ip += n + stride - 1;       /* point to last one */           n -= stride;           while (n > 0) {              REPEAT(stride, wp[0] = CLAMP(ip[0]);                            wp[stride] -= wp[0];                            wp[stride] &= mask;                            wp--; ip--)              n -= stride;           }           REPEAT(stride, wp[0] = CLAMP(ip[0]); wp--; ip--)   Debug info  ============ gdb �Cargs ./tiffcp poc.tif src1.tif tmpout.tif --- --- --- Program received signal SIGSEGV, Segmentation fault. in _int_free () from (gdb) bt #0  in _int_free () from #1  in TIFFClose at #2  in main (argc=3, at (gdb) x/2xg             (gdb) x/2xg            References: [1] http://www.remotesensing.org/libtiff/   Thank you!  Best Regards,  Kaixiang Zhang --- ---  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      