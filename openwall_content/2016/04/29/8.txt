  oss-security - Re: CVE request: three issues in libksba            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 29 Apr (EDT) From: cve-assign@...re.org To: mprpic@...hat.com Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: CVE request: three issues in libksba  -----BEGIN PGP SIGNED MESSAGE----- Hash:  > Denial of Service due to stack overflow in src/ber-decoder.c >  Use (This CVE is about changing the type of error handling after a decoder stack overflow. It is not about changing the decoder so that a decoder stack overflow occurs in fewer cases.)   > Integer overflow in the BER decoder src/ber-decoder.c >  >> The actual bug described below is due to assigning an int >> (val.length) to a size_t (ti.length). The int was too large and thus >> negative so that the condition to check for too large objects didn't >> worked. Changing the type would have been enough but other conditions >> are possible. Thus the introduction of sum_a1_a2_ge_b for overflow >> checking and checks when adding extra bytes to malloc calls are >> added.  We consider this two separate issues.  Use for the use of an incorrect integer data type.  Use for the cases in which the code was simply making no attempt to check for an integer overflow (the "+ cases and the "+= d->val.length" case).   > Integer overflow in the DN decoder src/dn.c >  This might be an error in the original advisory. We did not notice any obvious relationship between and an integer overflow fix. The commit message seems to focus on "read access out of bounds." Also, there is no other recent commit at http://git.gnupg.org/cgi-bin/gitweb.cgi?p=libksba.git;a=history;f=src/dn.c that refers to an integer overflow. Possibly there was an inapplicable copy-and-paste of "Integer overflow in the" from the previous report about the BER decoder.  Use for the issue that is described as "Fix encoding of invalid utf-8 strings in dn.c" and "read access out of bounds."  - --  CVE Assignment Team M/S Burlington Road, Bedford, MA USA [ A PGP key is available for encrypted communications at   http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG v1  =u1+d -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      