  oss-security - - libtiff illegel write            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Fri, 8 Apr From: 张开翔 <zhangkaixiang@....cn> To: "oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com> Subject: - libtiff illegel write  Details  =======    Product: libtiff  Affected Versions: <=  Vulnerability Type: Illegel write  Vendor URL:  http://www.remotesensing.org/libtiff/  CVE ID:  Credit: Kaixiang Zhang of the Cloud Security Team, Qihoo    Introduction  Illegal write occurs in the _TIFFVGetField function in tif_dirinfo.c when using thumbnail command, which allows attackers to exploit this issue to cause denial-of-service or may command excution.                                             if (fip->field_type == TIFF_ASCII                                              || fip->field_readcount == TIFF_VARIABLE                                              || fip->field_readcount == TIFF_VARIABLE2                                              || fip->field_readcount == TIFF_SPP                                              || tv->count > 1) {                                                 *va_arg(ap, void **) = tv->value;                                                 ret_val = 1;  gdb  --args  thumbnail  _ TIFFVGetField.tif  tmpout.tif …… Program received signal SIGSEGV, Segmentation fault. _TIFFVGetField (tif=<optimized out>, tag=<optimized out>, ap=<optimized out>) at                                                                           *va_arg(ap, void **) = tv->value; Missing separate debuginfos, use: dnf debuginfo-install (gdb) bt #0  _TIFFVGetField (tif=<optimized out>, tag=<optimized out>, ap=<optimized out>) at #1  in TIFFGetField at #2  in cpTag (type=TIFF_LONG, count=<optimized out>, tag=<optimized out>, out=<optimized out>, in=<optimized out>) at #3  cpTags (out=<optimized out>, in=<optimized out>) at #4  cpIFD (out=<optimized out>, in=<optimized out>) at #5  main (argc=<optimized out>, argv=<optimized out>) at (gdb) x/xw ap-4 0xbffff2bc:         References: [1] http://www.remotesensing.org/libtiff/   Thank you!  Best Regards,  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      