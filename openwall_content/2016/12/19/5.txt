  oss-security - Re: Announce: OpenSSH 7.4 released            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Mon, 19 Dec From: <cve-assign@...re.org> To: <oss-security@...ts.openwall.com> CC: <cve-assign@...re.org> Subject: Re: Announce: OpenSSH 7.4 released  -----BEGIN PGP SIGNED MESSAGE----- Hash:  > ssh-agent(1): Will now refuse to load PKCS#11 modules from paths > outside a trusted whitelist > ... > code execution on the system running the ssh-agent if the > attacker has control of the forwarded agent-socket (on the host > running the sshd server) and the ability to write to the filesystem > of the host running ssh-agent  Use   > sshd(8): When privilege separation is disabled, forwarded Unix- > domain sockets would be created by sshd(8) with the privileges of > 'root'  Use   > sshd(8): Avoid theoretical leak of host private key material to > privilege-separated child processes via realloc()  Use   > sshd(8): The shared memory manager used by pre-authentication > compression support had a bounds checks that could be elided by > some optimising compilers > ... > potentially allow attacks against the > privileged monitor process from the sandboxed privilege-separation > process  Use   >  * sshd(8): Validate address ranges for AllowUser and DenyUsers >    directives at configuration load time and refuse to accept invalid >    ones. It was previously possible to specify invalid CIDR address >    ranges (e.g. and these would always match, >    possibly resulting in granting access where it was not intended.  This currently has no CVE ID. We do not know of common scenarios where an untrusted party is able to specify an invalid CIDR block, but is unable to specify a valid CIDR block that includes any desired IP address. A relevant scenario might exist if privileged third-party software relies, in part, on user input to construct an sshd configuration file. Even if there were such a scenario, it would probably be the responsibility of third-party software to validate the meaning of the CIDR block, and not (for example) accept any string starting with "10." and ending with "/n" where n is greater than 26.  - --  CVE Assignment Team M/S Burlington Road, Bedford, MA USA [ A PGP key is available for encrypted communications at   http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG v1  3nNNmJLRnyazekpyflpT =kEDT -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      