  oss-security - [SECURITY ADVISORY] curl: uninitialized random            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Fri, 23 Dec (CET) From: Daniel Stenberg <daniel@...x.se> To: curl security announcements -- curl users <curl-users@...l.haxx.se>,         curl-announce@...l.haxx.se,         libcurl hacking <curl-library@...l.haxx.se>,         oss-security@...ts.openwall.com Subject: [SECURITY ADVISORY] curl: uninitialized random  uninitialized random ====================  Project curl Security Advisory, December 23, -  VULNERABILITY -------------  libcurl's (new) internal function that returns a good 32bit random value was implemented poorly and overwrote the pointer instead of writing the value into the buffer the pointer pointed to.  This random value is used to generate nonces for Digest and NTLM authentication, for generating boundary strings in HTTP formposts and more. Having a weak or virtually non-existent random there makes these operations vulnerable.  This function is brand new in and is the result of an overhaul to make sure libcurl uses strong random as much as possible - provided by the backend TLS crypto libraries when present. The faulty function was introduced in [this  We are not aware of any exploit of this flaw.  INFO ----  This mistake managed to slip in because:    1. It wasn't detected by manual code reviews    2. When libcurl is built debug-enabled (which is often the case when libcurl      developers build it), the bug doesn't trigger.    3. When built without -g, the test suite's "valgrind output parser" wrongly      ignored the valgrind output and with libcurl's standard build it is      typically built without -g. Thus hiding this problem to most users.  The Common Vulnerabilities and Exposures (CVE) project has assigned the name to this issue.  AFFECTED VERSIONS -----------------  This flaw exists in the following libcurl versions.  - Affected versions: libcurl only - Not affected versions: libcurl < and libcurl >=  libcurl is used by many applications, but not always advertised as such!  THE SOLUTION ------------  In version we fixed the function and we fixed the valgrind parser in the test suite.  A [patch for is available.  RECOMMENDATIONS ---------------  We suggest you take one of the following actions immediately, in order of preference:    A - Upgrade curl and libcurl to version    B - Apply the patch to and rebuild  TIME LINE ---------  It was first reported to the curl project on December 21 by Kamil Dudka.  We contacted distros@...nwall on December 21.  curl was released on December 23 coordinated with the publication of this advisory.  CREDITS -------  Reported and patched by Kamil Dudka.  --     / daniel.haxx.se  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      