  oss-security - Re: CVE Request: Game Music Emulators: incorrect emulation of the audio co-processor of SNES: arbitrary code execution via malformed SPC music file            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Thu, 15 Dec From: <cve-assign@...re.org> To: <carnil@...ian.org> CC: <cve-assign@...re.org>, <oss-security@...ts.openwall.com> Subject: Re: CVE Request: Game Music Emulators: incorrect emulation of the audio co-processor of SNES: arbitrary code execution via malformed SPC music file  -----BEGIN PGP SIGNED MESSAGE----- Hash:  >  > 1: Missing X register value clamp for the MOV (X)+,A instruction  Use   > 2: Missing SP register value clamp for the RET1 instruction  Use   > Although most operations on the A, X and Y registers clamp the > resulting values carefully, the very interesting new multiply > instruction, MUL, does not: >  > generate 8-bit register values that are out of bounds  Use for this MUL vulnerability.   > the DIV instruction is just as interesting as the MUL one. It also > does transforms on the values of incoming registers, leaving the > results in the A and Y registers, without any clamping on the Y result  > Even though this code is fairly simple, I don.t claim to understand it > particularly with large input values. What I do know is that I > see various integer overflow opportunities, integer underflow > opportunities, less useful div-by-zero issues, etc.  There does not seem to be enough information for a detailed CVE mapping of the DIV behavior.  Use for the divide-by-zero errors.  Use for the other mishandling of integer values.  - --  CVE Assignment Team M/S Burlington Road, Bedford, MA USA [ A PGP key is available for encrypted communications at   http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG v1  =m+et -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      