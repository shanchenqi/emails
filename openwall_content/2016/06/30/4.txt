  oss-security - CVE Request: No demangling of untrusted binaries (2)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Thu, 30 Jun From: Marcel Bรถhme <boehme.marcel@...il.com> To: oss-security@...ts.openwall.com Cc: florian@...h-krohm.de,  nickc@...hat.com,  Bernd Schmidt <bschmidt@...hat.com> Subject: CVE Request: No demangling of untrusted binaries (2)  Hi all,  Another vulnerability in GNU Libiberty was found that impacts the security of binary analysis tools, such as Valgrind, GDB, Binutils (e.g., objdump, nm, ..), Gcov, or other LibBFD-based tools. An attacker might modify a program binary such that it executes malicious code upon *analysis* of the binary (e.g., to find whether it is malicious in the first place) or during the attempt to reverse-engineer an untrusted binary.  Workaround: Until the patches propagate to the vulnerable tools, switch off default demangling! E.g., $ echo "set demangle-style none"  >>  ~/.gdbinit $ echo "--demangle=no" >> ~/.valgrindrc  A stackoverflow in the libiberty demangler causes its host application to crash on a tainted branch instruction. The problem is caused by a self-reference in a mangled type string that is "remembered" for later reference. This leads to an infinite recursion during the demangling. * GDB exploitable classifies the stack overflow as exploitable. * Bug Report: * Patch under review:  All vulnerabilities were found with a more efficient version of the AFL fuzzer, called AFLFast.  Update on the previously reported, related vulnerabilities: Fixed in trunk Fixed in trunk Fixed in trunk Fixed in trunk Fixed in trunk Patch under review Patch accepted Patch accepted  Best regards, - Marcel  --- Marcel Bรถhme Post-doctoral Research Fellow TSUNAMi Security Research Center National University of Singapore Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      