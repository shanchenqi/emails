  oss-security - Re: CVE Request for Denial of Service in pacman            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Tue, 14 Jun (EDT) From: cve-assign@...re.org To: tobias@...eckmann.org Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: CVE Request for Denial of Service in pacman  -----BEGIN PGP SIGNED MESSAGE----- Hash:  > The package manager of Arch Linux, pacman, is vulnerable to a denial of > service attack based on signature files. This issue is located in libalpm > and therefore affects any other frontend >  > While an endless loop on itself is no security issue per-se  We assign CVE IDs to infinite loops in libraries, as long as a real or plausible library-using application runs unattended, and presents an attack surface in which the loop may be triggered by not-fully-trusted input.  Use for this libalpm vulnerability.  (For example, someone may plausibly use libalpm as part of a web application that receives packages with signatures from authors and, after validity checks, hosts those packages for public download.)   > such a > crafted file might trick the end-user to disable signature verification > to get his updates installed. This, on the other hand, would open up > possibilities for malicious packages to be installed.  Maybe, but this would not, by itself, be a reason to assign a CVE ID unless the package manager suggested that course of action, e.g., a dialog stating "A signature-verification process is running slowly. Terminate that process and disable all future verification? [y/N]." For example, if there were a signature-verification infinite loop that only affected a GUI package manager, without that type of dialog, then a CVE ID seems unlikely. First, it's unclear whether there are many end users who have the expertise to determine that a loop is related to signature verification, but also would jump to the conclusion that disabling signature verification was a reasonable solution to their immediate problem. More generally, any DoS bug in any package manager might trick a non-expert end user into not bothering to install new packages, and instead leaving old vulnerable packages installed permanently. That is arguably a security impact, but it seems much too indirect, so we don't want to assign CVE IDs to of DoS bugs in all package managers.  - --  CVE Assignment Team M/S Burlington Road, Bedford, MA USA [ A PGP key is available for encrypted communications at   http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG v1  =UySW -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      