  oss-security - libtiff tiffcrop _TIFFFax3fillruns(): divide  by zero            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Wed, 15 Jun From: 张开翔 <zhangkaixiang@....cn> To: "oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com> Subject: libtiff tiffcrop _TIFFFax3fillruns(): divide  by zero  Details =======  Product: libtiff Affected Versions: <= Vulnerability Type: divide by zero Vendor URL: http://www.remotesensing.org/libtiff/ Credit: Kaixiang Zhang of the Cloud Security Team, Qihoo CVE ID: Tested system version:        fedora23 32bit        fedora23 64bit        CentOS Linux release 64bit  Introduction =======  t was always corrupted when I use tiffcrop command followed by a crafted TIFF image in function _TIFFFax3fillruns () without checking the value of divisor, it causes a divide by zero flaw. Attackers cound exploit this issue to cause denial-of-service.  Here is the stack info: gdb –args ./tiffcrop _TIFFFax3fillruns.tif tmpout.tif --- --- Program received signal SIGSEGV, Segmentation fault. in _TIFFFax3fillruns (buf=0x0, erun=<optimized out>, lastx=64) at                              ZERO(n, cp); (gdb) bt #0  in _TIFFFax3fillruns (buf=0x0, erun=<optimized out>, lastx=64) at #1  in Fax3DecodeRLE buf=0x0, s=<optimized out>) at #2  in TIFFReadEncodedTile tile=8, buf=0x0, size@...ry=-1) at #3  in TIFFReadTile buf=<optimized out>, x=x@...ry=0, y=y@...ry=0, z=z@...ry=0, s=s@...ry=8) at #4  in readSeparateTilesIntoBuffer (bps=1, tw=64, imagewidth=32, imagelength=32, "", at #5  loadImage at #6  in main (argc=<optimized out>, argv=<optimized out>) at (gdb) p cp $2 = (unsigned char *) 0x0    Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      