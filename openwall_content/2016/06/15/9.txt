  oss-security - libtiff rgb2ycbcr: command excution            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Wed, 15 Jun From: 张开翔 <zhangkaixiang@....cn> To: "oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com> Subject: libtiff rgb2ycbcr: command excution  Details =======  Product: libtiff Affected Versions: <= Vulnerability Type: command excution Vendor URL: http://www.remotesensing.org/libtiff/ CVE ID: Credit: Kaixiang Zhang of the Cloud Security Team, Qihoo   Introduction =======  It was always corrupted when I use rgb2ycbcr command followed by a crafted TIFF image. The vulnerability of out-of-bound writes is in PixarLogDecode () function in tif_pixarlog.c, which cause the function pointer of vgetparent to be coverd with any data, command execution could be possible. Tested system version:        fedora23 64bit        CentOS Linux release 64bit command :         ./rgb2ycbcr poc.tif tmpout.tif    Here is the stack info: gdb –args ./rgb2ycbcr poc.tif tmpout.tif --- --- Program received signal SIGSEGV, Segmentation fault. -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------[registers]-- $rax     $rbx     $rcx     $rdx     $rsp     $rbp     $rsi     $rdi     $rip     $r8      $r9      $r10     $r11     $r12     $r13     $r14     $r15     $cs      $ss      $ds      $es      $fs      $gs      $eflags  [ CF AF SF IF RF ] Flags: [ CARRY  parity  ADJUST  zero  SIGN  trap  INTERRUPT  direction  overflow  RESUME  virtualx86  identification ] -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------[stack]-- 0x0                  <- $sp -> -> -> "PredictorVGetField.tif" -> "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[...]" -> -> -> jmp          mov    rdx,QWORD PTR          mov    esi,DWORD PTR [rbp-0x1c]          mov    rcx,QWORD PTR          mov    rdi,rcx         call   rax                <- $pc          leave          ret <PredictorPrintDir>  push   rbp         <PredictorPrintDir+1>  mov    rbp,rsp                case TIFFTAG_PREDICTOR:                         *va_arg(ap, uint16*) = (uint16)sp->predictor;                         break;                default:                         return (*sp->vgetparent)(tif, tag, ap);                    <- $pc     ; -> [...] -> "PredictorVGetField.tif", -> [...] -> -> [...] -> "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[...]"                }                return 1;         } -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------[trace]-- #0  in PredictorVGetField at #1  in TIFFVGetField at #2  in TIFFGetField at -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- in PredictorVGetField at                     return (*sp->vgetparent)(tif, tag, ap); gef> bt #0  in PredictorVGetField at #1  in TIFFVGetField at #2  in TIFFGetField at #3  in tiffcvt at #4  in main (argc=3, at   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      