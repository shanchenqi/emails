  oss-security - CVE Request: Linux kernel HID: hiddev buffer overflows            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Sat, 25 Jun From: Scotty <sbauer@...donthack.me> To: oss-security@...ts.openwall.com Cc: cve-assign@...re.org Subject: CVE Request: Linux kernel HID: hiddev buffer overflows  Good evening,  There is a small buffer overflow in the hiddev driver code which seems to have come due to a re-factor of the driver in  If a user-land process calls the hiddev ioctl with the HIDIOCGUSAGES or HIDIOCSUSAGES command, and passes a report id of HID_REPORT_ID_UNKNOWN it bypasses a series of bounds checks. Later in the code the attacker can loop on some controlled value and overwrite past the bounds of the uref_multi array or the value array.   	switch (cmd) { ... ... ... 		case HIDIOCGUSAGES: /* HEAP OVERFLOW, Attacker controls num_values */ 			for (i = 0; i < uref_multi->num_values; i++) 				uref_multi->values[i] = 				    field->value[uref->usage_index + i]; 			if (copy_to_user(user_arg, uref_multi, 					 sizeof(*uref_multi))) 				goto fault; 			goto goodreturn; 		case HIDIOCSUSAGES: /* HEAP OVERFLOW, attacker controls num_values */ 			for (i = 0; i < uref_multi->num_values; i++) 				field->value[uref->usage_index + i] = 				    uref_multi->values[i]; 			goto goodreturn; 		}  The issue has been fixed upstream here:  Attached is a PoC illustrating the issue.   Thank you.   View attachment "usb_hiddev.c" of type "text/x-csrc" bytes)  Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      