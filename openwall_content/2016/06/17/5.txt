  oss-security - Re: Many invalid memory access issues in libarchive            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Fri, 17 Jun (EDT) From: cve-assign@...re.org To: hanno@...eck.de Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: Many invalid memory access issues in libarchive  -----BEGIN PGP SIGNED MESSAGE----- Hash:  > https://blog.fuzzing-project.org/47-Many-invalid-memory-access-issues-in-libarchive.html  > libarchive version (released on April 30th) fixed a large number > of memory access bugs that I reported to them a while ago.  > > Unclear invalid memory read in CPIO parser  >> hit end-of-file when trying to read a cpio header  Use   > > Null pointer access in RAR parser  Use  There is not a second ID for the "it assumes this is a multivolume archive" discussion in the comment.   > > Null pointer access in CAB parser  >> The real problem though is that the filename in the cabinet is set to >> This single character is not a valid utf8 character and >> therefore the conversion fails.  Use   > > Overlapping memcpy in CAB parser  Use   > > Heap out of bounds read in LHA/LZH parser  Use   > > Stack out of bounds read in ar parser  Use   > > Global out of bounds read in mtree parser  Use   > > Null pointer access in 7z parser  Use   > > Unclear crashes in ZIP parser  >> Issue here was reading a size field as a signed number >> and then using that as an offset.  Use   > > Heap out of bounds read in TAR parser  Use   > > Unclear invalid memory read in mtree parser  >> Fix escaped newline parsing  Use   > > Null pointer access in RAR parser  Use   > > Heap out of bounds read when reading password for malformed ZIP  Use   > > Heap out of bounds read in mtree parser  Use   > I also reported a couple of lower severity issues (leaks, hangs, > undefined behavior issues):  > > Memory leak in TAR parser  Use   > > Endless loop in ISO parser  Use   > > Undefined behavior / signed integer overflow in mtree parser  >> We run on a lot of platforms that don't use glibc  Use   > > Use after free in test suite  This does not have a CVE ID. The vendor response was "Looks like this is just a bug in the test. The test runs a set of checks twice but doesn't correctly reset in between." The code change is in the libarchive/test/test_archive_read_add_passphrase.c file.   > > Undefined behavior / invalid shiftleft in TAR parser  Use   > > Undefined behavior / signed integer overflow in TAR parser  Use   > Unfortunately one out of bounds heap read bug in the RAR parser (sample > file) remained unfixed. I hope a fix will find its way into the next > version.  >  Use  - --  CVE Assignment Team M/S Burlington Road, Bedford, MA USA [ A PGP key is available for encrypted communications at   http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG v1  =TTkk -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      