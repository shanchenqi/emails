  oss-security - Re: CVE's for SSLv2 support            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Tue, 1 Mar From: gremlin@...mlin.ru To: oss-security@...ts.openwall.com Subject: Re: CVE's for SSLv2 support  On Kurt Seifried wrote:   >  > TL;DR: SSLv2 needs to be shot.  Yes, with SSLv3 and TLS 1.0 being the next.   > Now we have yet another significant SSLv2 problem, DROWN, bad  > enough in fact that Red Hat has now disabled SSLv2 in OpenSSL  > by default (already done in NSS/GnuTLS), so from my vendor  > perspective, we're treating SSLv2 support as a security problem,  > the solution of which is to remove said support.  The problem is more wide, as it's in the use of insecure algorithms.   > But more generally, should we look at assigning CVE's for  > support of SSLv2, much like we would for products supporting  > DES or other known insecure cryptographic algorithms, hashes,  > digests and protocols? My personal vote is for yes.  Yes. Including, but not limited to: 1. RSA keys of less than bits (a minimum of should be recommended). 2. Non-EC discrete logarithm based algos (DSA, old GOST 2. EC-based algos with keys of less than bits (as for me, I'd consider bits to be an absolute minimum: chips are cheap, but the energy is still expensive). 3. Symmetric ciphers in any mode other than CFB or counter-based. 4. Symmetric ciphers with key size of less than bits. 5. Hash functions of less than bits.   --  Alexey V. Vissarionov aka Gremlin from Kremlin GPG:  Content of type "application/pgp-signature" skipped  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      