  oss-security - Re: CVE Request: Linux >= 4.5 double fetch leading to heap overflow            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Mon,  1 Aug (EDT) From: cve-assign@...re.org To: sbauer@...donthack.me Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: CVE Request: Linux >= 4.5 double fetch leading to heap overflow  -----BEGIN PGP SIGNED MESSAGE----- Hash:  > Some code was moved from btrfs to the generic vfs ioctl: > >  > During the port a double fetch with userland was introduced which can lead to an undersized allocation and subsequent heap overflow > with potentially controlled data. It has been patched in upstream here: >  >  >> vfs: ioctl: prevent double-fetch in dedupe ioctl >>  >> This prevents a double-fetch from user space that can lead to to an >> undersized allocation and heap overflow.  > I attempted to write an exploit for this but that's not really my forte. I feel like this bug > has the potential for a workable user->root exploit but I couldn't do it. >  > 1: You can control which cache the overflow happens on. I picked the same cache as the File struct. > 2: the code writes 2 different width zeros past the allocation, one 32 bit and the other 64 bit. > 3: I attempted to overflow and write the 32 bit 0 to the top half of a pointer so it would point to userland, > but I couldn't find a suitable structure to overflow into.  > pthread_create(&race_car, NULL, size_change, range);  Use  - --  CVE Assignment Team M/S Burlington Road, Bedford, MA USA [ A PGP key is available for encrypted communications at   http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG v1  =UAFW -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      