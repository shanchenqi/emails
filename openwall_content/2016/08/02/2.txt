  oss-security - CVE Request: CSRF in Grails console            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Mon, 1 Aug From: Dario Bertini <berdario@...il.com> To: oss-security@...ts.openwall.com Subject: CVE Request: CSRF in Grails console  The Grails console (aka Grails Debug Console, Grails Web Console) was vulnerable to CSRF.  https://grails.org/plugin/console https://github.com/sheehan/grails-console  (this is the plugin, not to be confused with the command line grails console: )  The fix has been made available in versions Versions up to and are affected.  This allows an attacker to (create pages that when visited by a victim will) forge requests that will execute arbitrary groovy code on the backend (the documentation explains how to enable it in production, and granting access to administrators only, so this is not simply a development tool).  Bug tracker: https://github.com/sheehan/grails-console/issues/54 fix commit:  Could you allocate a CVE id for this?  Thank you  On a more general note to Grails programmers, Caveat Auditor:  Unfortunately the Grails framework itself ships with some horribly insecure defaults. As of the template code dropped by `grails create-app` will have a UrlMappings.groovy that will allow access to Grails controllers actions via any HTTP method. CSRF protection is also not enabled by default, and there's no documentation on how to enable it globally. Some deprecated builtin modules in widespread but old Grails versions (i.e. formRemote) also make it impossible to add csrf protection to the associated endpoints.  On the bright side, Grails 3.1 added explicit rest mappings: http://docs.grails.org/latest/guide/theWebLayer.html#restfulMappings  which makes it clearer which methods are allowed for every action, and harder to forget about it. Compare to allowedMethods http://docs.grails.org/latest/ref/Controllers/allowedMethods.html which can be distant tens/hundreds line of code from the actual controller-action they are protecting, and moreover can be easily forgotten in a new file, also because they aren't added by default when creating a controller with `grails create-controller`  It's thus likely that you might find more csrf vulnerabilities in other open source plugins, as well as in your closed source applications.  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      