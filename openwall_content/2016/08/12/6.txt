  oss-security - ffmpeg buffer overflow when decoding swf            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Fri, 12 Aug From: 连一汉 <lianyihan@....cn> To: "oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com> Subject: ffmpeg buffer overflow when decoding swf   Hi , I’m Lian ,a security researcher in Qihoo  I found a vulnerability of ffmpeg .  This is a buffer overflow vulnerability when decoding swf, and has been assigned the CVE identifier .  Version Affected:  Fixed Version:         Web site:    http://ffmpeg.org/security.html  Vulnerability detail:   ================== test command =======================    Ffmpeg -i poc.swf -b:v -y output.ts  ============== affected code and crash info =================  On libavcodec/rawdec.c :  raw_decode() { … memcpy(context->palette->data, pal, avpkt->size - vid_size);                          // buffer overflow … }  Back trace:         #0  in raise () from #1  in abort () from #2  in __sanitizer::Abort() ()     at #3  in __sanitizer::Die() ()     at #4  in ~ScopedInErrorReport () at #5  in ReportGenericError () at #6  in __interceptor_memcpy ()    at #7  in raw_decode     at #8  in avcodec_decode_video2     at #9  in decode_video at #10 in process_input_packet no_eof=0) at #11 in process_input (file_index=0) at #12 in transcode_step () at #13 in transcode () at #14 in main (argc=6, at  ====================== patch ===========================  Found-by: <lianyihan@....cn> Signed-off-by: Michael Niedermayer <michael@...dermayer.cc> --- libavcodec/rawdec.c | 25 +++++++++++++++++-------- 1 file changed, 17 insertions(+), 8 deletions(-)  diff --git a/libavcodec/rawdec.c b/libavcodec/rawdec.c index --- a/libavcodec/rawdec.c +++ b/libavcodec/rawdec.c @@ @@ static int raw_decode(AVCodecContext *avctx, void *da= ta, int *got_frame,      if (avctx->pix_fmt =3D=3D AV_PIX_FMT_PAL8) {          const uint8_t *pal =3D av_packet_get_side_data(avpkt, AV_PKT_DATA_= PALETTE,                                                       NULL); -        if (pal) { -            av_buffer_unref(&context->palette); +        int ret; +        if (!context->palette)              context->palette =3D av_buffer_alloc(AVPALETTE_SIZE); -            if (!context->palette) { -                av_buffer_unref(&frame->buf[0]); -                return AVERROR(ENOMEM); -            } +        if (!context->palette) { +            av_buffer_unref(&frame->buf[0]); +            return AVERROR(ENOMEM); +        } +        ret =3D av_buffer_make_writable(&context->palette); +        if (ret < 0) { +            av_buffer_unref(&frame->buf[0]); +            return ret; +        } + +        if (pal) {              memcpy(context->palette->data, pal, AVPALETTE_SIZE);              frame->palette_has_changed =3D 1;          } else if (context->is_nut_pal8) {              int vid_size =3D avctx->width * avctx->height; -            if (avpkt->size - vid_size) { +            int pal_size =3D avpkt->size - vid_size; + +            if (avpkt->size > vid_size && pal_size <=3D AVPALETTE_SIZE) {                  pal =3D avpkt->data + vid_size; -                memcpy(context->palette->data, pal, avpkt->size - vid_size= ); +                memcpy(context->palette->data, pal, pal_size);                  frame->palette_has_changed =3D 1;              }          }  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      