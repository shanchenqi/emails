  oss-security - TLS testing results - OS distro vulnerabilities            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Sat, 20 Aug From: Mauri Miettinen <Mauri.Miettinen@...dent.oulu.fi> To: "oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com> CC: "ouspg@...oulu.fi" <ouspg@...oulu.fi> Subject: TLS testing results - OS distro vulnerabilities  To whom it may concern,  We developed a tool to check if languages and libraries verify TLS certificates properly. While testing this tool we did a shootout against supported versions of the some major Linux distributions.   Results are available from:  https://github.com/ouspg/trytls/blob/shootout-0.3/shootout/README.md  It seems it may be unsafe to do TLS in some of the  common distros. E.g. the native Python version in the distros varies, and not all fixes have been backported. In these cases Python still doesn't always have certificate checking enabled by default.  We have contacted Python developers about the results.    They gave us a couple of good pointers on how configuration could be used to mitigate the issues in some of the distributions. We are afraid this is still a hazard where neither software developers or users realize that code that works well for the developer may not be safe for the users.  Would you have any other resources, advice or pointers we should document when communicating about this in the TryTLS project?  Mauri Miettinen  PS. Results have indications of weak crypto issues as well. Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      