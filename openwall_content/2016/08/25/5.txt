  oss-security - Re: CVE Request - Gnu Wget - Design Error Vulnerability            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 25 Aug From: Jordan Bettis <jordanb@...d.org> To: oss-security@...ts.openwall.com Subject: Re: CVE Request - Gnu Wget - Design Error Vulnerability  On PM, Kurt Seifried wrote: >  > Please note that the attacker would also have to have access to the local > file system, either shell access or by some additional exploit, > additionally they would have to have read access to the file wget is > downloading (so same security context, or really poor permissions). >  ... > Please note again that to exploit this you would need a situation where the > attacker can control what wget is fetching, or execute a man in the middle > attack, AND has local access to the system downloading the file AND has > permissions to read the file AND some sort of additional vulnerability that > requires being able to read a file in order to escalate privileges. >   Suppose I convince web admin to wget jpeg files from my server into his web root. The jpeg directory also contains the file evil.php. During the download, evil.php now exists in his web root and I can cause it to be executed by visiting the correct path via http.   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      