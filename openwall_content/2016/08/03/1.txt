  oss-security - Re: CVE Request: CSRF in Grails console            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 3 Aug From: Dario Bertini <berdario@...il.com> To: cve-assign@...re.org Cc: oss-security@...ts.openwall.com Subject: Re: CVE Request: CSRF in Grails console  Thanks  On Tue, Aug 2, at PM,  <cve-assign@...re.org> wrote: > It is possible that a behavior like this could have its own CVE ID if > it is undocumented or interacts incorrectly with run-app. For example, > > says "the HTTP method (GET, POST, PUT or DELETE)." Do you mean, for > example, that the OPTIONS or TRACE method can allow access, but the > documentation suggests that only GET, POST, PUT, and DELETE need to be > anticipated?  Nothing that fancy (I actually forgot about the HTTP method mapping you linked to...)  The template code dropped by `grails create-app` is the same one you can see here:  ``` "/$controller/$action?/$id?"{     constraints {         // apply constraints here     } } ```  This code is then kept by Grails programmer, who only rarely add more constrained mappings to this file, and instead relying on "convention over configuration". That is: they add controllers, and every non-private Closure/method defined in such controllers is accessible via any HTTP method, unless the snippet above is not removed.  You can easily find demonstrations that this happens in real code:  The same Grails Console plugin (note that in fact their fix requires a CSRF token even for GET requests)  The reference app for the Grails in Action book:  ( There are even people that proposed custom annotations to provide a mechanism to constrain the methods closer to the actual method/function definition: http://burtbeckwith.com/blog/?p=80 ... I'd say that this is a simptom of how there are several ways to constrain HTTP methods for each controller, and yet none of these is truly used universally)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      