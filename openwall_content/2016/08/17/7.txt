  oss-security - Libgcrypt and GnuPG 1.4 RNG output prediction            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Wed, 17 Aug From: Solar Designer <solar@...nwall.com> To: oss-security@...ts.openwall.com Cc: Werner Koch <wk@...pg.org> Subject: Libgcrypt and GnuPG 1.4 RNG output prediction  Hi,  This was just announced on gnupg-announce and Twitter @gnupg, and I think it should also be in here:   > Felix Drre and Vladimir Klebanov from the Karlsruhe Institute of > Technology found a bug in the mixing functions of Libgcrypt's random > number generator: An attacker who obtains bits from the RNG can > trivially predict the next bits of output.  This bug exists since > in all GnuPG and Libgcrypt versions. >  >  > Impact > ====== > All Libgcrypt and GnuPG versions released before are affected > on all platforms. >  > A first analysis on the impact of this bug in GnuPG shows that existing > RSA keys are not weakened.  For DSA and Elgamal keys it is also unlikely > that the private key can be predicted from other public information. > This needs more research and I would suggest _not to_ overhasty revoke > keys.  Also off Twitter:  <@rgacogne> @gnupg @solardiz The CVE number seems to have been used to track another security issue rubygem-actionview, is that correct?  There does in fact appear to be a CVE ID clash, with:   Alexander  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      