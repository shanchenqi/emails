  oss-security - XSS vulnerability in rails-html-sanitizer            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Mon, 25 Jan From: Aaron Patterson <tenderlove@...y-lang.org> To: security@...e.de, rubyonrails-security@...glegroups.com, 	oss-security@...ts.openwall.com, ruby-security-ann@...glegroups.com Subject: XSS vulnerability in rails-html-sanitizer  XSS vulnerability in rails-html-sanitizer  There is a XSS vulnerability in `Rails::Html::FullSanitizer` used by Action View's `strip_tags`. This vulnerability has been assigned the CVE identifier  Versions Affected:  Not affected:       Fixed Versions:      Impact ------ Due to the way that `Rails::Html::FullSanitizer` is implemented, if an attacker passes an already escaped HTML entity to the input of Action View's `strip_tags` these entities will be unescaped what may cause a XSS attack if used in combination with `raw` or `html_safe`.  For example:      strip_tags("&lt;script&gt;alert('XSS')&lt;/script&gt;")  Would generate:      <script>alert('XSS')</script>  After the fix it will generate:      &lt;script&gt;alert('XSS')&lt;/script&gt;  All users running an affected release should either upgrade or use one of the workarounds immediately.  Releases -------- The FIXED releases are available at the normal locations.  Workarounds ----------- If you can't upgrade, please use the following monkey patch in an initializer that is loaded before your application:  ``` $ cat config/initializers/strip_tags_fix.rb class ActionView::Base   def strip_tags(html)     self.class.full_sanitizer.sanitize(html)   end end ```  Patches ------- To aid users who aren't able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.  * Do-not-unescape-already-escaped-HTML-entities.patch  Credits ------- Thank you to Arthur Neves from GitHub and Spyros Livathinos from Zendesk for reporting the problem and working with us to fix it.  --  Aaron Patterson http://tenderlovemaking.com/  View attachment "Do-not-unescape-already-escaped-HTML-entities.patch" of type "text/plain" bytes)  Content of type "application/pgp-signature" skipped  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      