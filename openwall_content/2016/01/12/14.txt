  oss-security - GRR <= (all versions) RCE with privilege escalation through  file upload filter bypass (authenficated)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Tue, 12 Jan From: Jean-Marie Bourbon <mail.bourbon@...il.com> To: "oss-security@...ts.openwall.com" <oss-security@...ts.openwall.com> Subject: GRR <= (all versions) RCE with privilege escalation through  file upload filter bypass (authenficated)  Hi guys,  I'd like to request a CVE ID for the following security issue.   I. APPLICATION ======================================================================================   GRR is an open source resources manager tool used in many french public institutions (not only!). It permit for example to manage rooms reservations, and so much more.  Software Link:   II. ADVISORY ======================================================================================    The application allows administrators to change the enterprise's logo uploading a new image with .png,.jpg or .gif extension only.  Once uploaded, image name is "splitted" in an array and renamed with the name "logo" followed by the extention saved as 2nd array's element.  This file called for example "logo.jpg" is also "chmoded" as permission and directly accessible in image folder (img_grr by default) by all users.  Besides, the application does only a basic conditional php test on the extension of the uploaded file.  It's possible for an attacker to add a second extension that will be used when the image will be renamed in order to bypass this basic filter (double extension upload filter bypassing).  So, a file called backdoor.php.jpg will be renamed as logo.php with chmod permissions and could be used by attacker to gain more privileges on the targeted server (privesc due to bad file permissions and RCE).  To trigger this vulnerability it is necessary to have an administrator account on the GRR application.  This vulnerability is a combination of 3 issues: - predictable uploaded file names and path - upload of any kind of file - bad files permission when we upload this file that permit us to gain privilegied access.  Note that it could be "dorkable" in order to find targets ... and sometimes with trivial admin credentials ;-).   III. PROOF OF CONCEPT ======================================================================================   Generate backdoor:      kmkz@...z:~#  weevely generate /tmp/3lrvs.php     Generated backdoor with password in '/tmp/3lrvs.php' of byte size.     kmkz@...z:~# mv /tmp/3lrvs.php /tmp/3lrvs.php.jpg   Login as admin and upload this new 'logo' > Administration > logo  Enjoy your shell!        kmkz@...z:~# weevely http://laboratoire.target.fr/images/logo.php     [+] weevely      [+] Target:    laboratoire.target.fr:F:\server\grr\images     [+] Session:    /kmkz/.weevely/sessions/ laboratoire.target.fr/logo_1.session     [+] Shell:    System shell      [+] Browse the filesystem or execute commands starts the connection     [+] to the target. Type :help for more information.      weevely> whoami     autorite nt\system    IV. RISK ======================================================================================  By uploading a script, an attacker may be able to execute arbitrary code on the server with elevated privileges.  This flaw may compromise the integrity of the system (with access to sensitive informations, network shares...) and it may conduce to  full information system's compromission using pivots techniques and imagination!   V. VERSIONS AFFECTED ======================================================================================  GRR is vulnerable (and all previous versions)   VI. TIMELINE ======================================================================================  December 17th, Vulnerability identification January 7th, Vendor and project developers notification January 11th, Project developers response  @kmkz_security   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      