  oss-security - Re: Prime example of a can of worms            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 21 Jan From: Florent Daigniere <florent.daigniere@...stmatta.com> To: oss-security@...ts.openwall.com Subject: Re: Prime example of a can of worms  On Thu, at gremlin@...mlin.ru wrote: > On Kurt Seifried wrote: >  >  > I finally got the article written and published, it's at: >  > > oduli/ >  > In that article you wrote: >  >  > I think the best plan for dealing with this in the short term >  > is deploying larger primes bits minimum, ideally >  > bits) right now wherever possible. >  > bit keys seem to be the absolute minimum, and personally I've > already moved to bit keys. >   I'd like to know where you guys picked those numbers from: http://www.keylength.com/en/compare/ suggests that bits is okay for everyone but the BSI (at least not past Surely a recommendation today should have a higher standard than that.  On the other bits seems to be enough for everyone for the next decade or so.  I haven't found anyone suggesting that bigger groups are either necessary or worth it. If you want QC proof crypto you need groups of ~16k bits.  My favourite recommendation (ECRYPT II): http://www.keylength.com/en/3/ where bits -> level 3 bits -> level 5 bits -> level 7 for any of the modelled adversaries.  > Here are some numbers: >  > `openssl dhparam -2 took to generate (HH:MM:SS); > `openssl dhparam -5 took > `openssl dhparam -2 took > `openssl dhparam -5 took >  >  > Why not huge primes? >  > Why not simply use really large primes? Because computation >  > is expensive, battery life matters more than ever and latency >  > will become problems that users will not tolerate. >  > Any and all cryptographic transforms must be expensive - that means > at least time and electric power.   There is a good reason why no one wants custom-groups in protocol design. I haven't seen it mentioned much so far so I will spell it out again:  Custom groups need to be transmitted for each handshake: that's problematic on most networks (none of the group sizes suggested will fit on a MTU worth of data) as it will involve fragmentation and potentially retransmission.  If anything, TLS has proven that it won't work; both because  - no one will use the feature, even if it's present (status-quo with bits groups today) - it's impractical for it to be used anywhere where the connectivity is anything less than perfect (mobile networks, high-latency networks, ...)  K.I.S.S.!  Florent Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      