  oss-security - Re: Qualys Security Advisory - Roaming through the  OpenSSH client: and            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Fri, 15 Jan From: Yann Droneaud <ydroneaud@...eya.com> To: oss-security@...ts.openwall.com Subject: Re: Qualys Security Advisory - Roaming through the  OpenSSH client: and  Hi,  Le vendredi 15 janvier à Florian Weimer a écrit : > On PM, Qualys Security Advisory wrote: > > Internal stdio buffering is the most severe of the three problems > > discussed in this section, although GNU/Linux is not affected > > because the glibc mmap()s and munmap()s (and therefore cleanses) > > stdio buffers. >  > This will change in glibc stdio will use regular malloc and > free for its buffers.  I did not expect this change to have security > implications.  Considering that the actual bug lies elsewhere, and > stdio usage is based on copying out of the buffer (so leaks can still > happen elsewhere), I do not wish to revert this change. >   Would setvbuf(stream, NULL, _IONBF, 0); be used to disable buffer before reading/writting sensible data to a stream ?  What about a buffering flag (_IOSBF) that would enable "secure"  handling of the buffer, that is, on fclose() and fflush(), write back and cleanse buffer on output stream, cleanse buffer on input stream ?  Regards.  --  Yann Droneaud OPTEYA   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      