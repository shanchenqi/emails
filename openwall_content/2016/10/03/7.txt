  oss-security - Buffer overflow in DBD-mysql error reporting (Perl DBI module)            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Mon, 03 Oct From: Florian Weimer <fw@...eb.enyo.de> To: oss-security@...ts.openwall.com Subject: Buffer overflow in DBD-mysql error reporting (Perl DBI module)  When a reporting a variable bind error, DBD-mysql would try to construct the error message in a fixed-size buffer on the stack, possibly leading to arbitrary code execution.  It depends on the application whether untrusted data is included in the error message.  -D_FORTIFY_SOURCE=2 would catch this and turn the issue into a mere crash.  Upstream commit:     Upstream credits Pali Rohรกr with reporting and fixing this issue.  Here is what I used to validate the patch:  use strict; use warnings;  use DBI;  my $dbh = DBI->connect("DBI:mysql:mysql:",                        "root", "",                        { PrintError => 0, RaiseError => 1});  $dbh->do('CREATE TEMPORARY TABLE t (i INTEGER NOT NULL)'); $dbh->begin_work; my $st = $dbh->prepare('INSERT INTO t VALUES (?)'); $st->bind_param(1, 'X' x 64, DBI::SQL_INTEGER); $dbh->commit;  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      