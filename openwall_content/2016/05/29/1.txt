  oss-security - Re: Fwd: PHP-FPM fpm_log.c memory leak and buffer overflow            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Sat, 28 May (EDT) From: cve-assign@...re.org To: oss-security@...ts.openwall.com Cc: cve-assign@...re.org Subject: Re: Fwd: PHP-FPM fpm_log.c memory leak and buffer overflow  -----BEGIN PGP SIGNED MESSAGE----- Hash:  > Date: Tue, 2 Feb > To: <oss-security@...ts.openwall.com>  > Date:	Mon, 25 Jan > To:	bugtraq@...urityfocus.com  > The FastCGI Process Manager (FPM) SAPI of PHP was vulnerable to memory > leak and buffer overflow in the access logging feature.  > the PHP engine performed an out-of-boundaries read and also wrote a \n > character outside of the allocated memory.  > >  >> as it has some strict prerequisites, the severity is low.  >> This was just an expanded version of the default access.format >> template, we added the REMOTE_ADDR and REQUEST_URI fields  As explained in the www.search-lab.hu post (in the section between "We found the answer by reviewing the source code" and "And here we are"), there was really only one underlying problem: the code misinterpreted the semantics of the snprintf return value. Use The other outcomes were consequences of this. The "memory leak" is the same as the "out-of-boundaries read": extra bytes from process memory were being written to a log file that might be readable by untrusted users. The "buffer overflow" is the same as the "wrote a \n character outside of the allocated memory."  - --  CVE Assignment Team M/S Burlington Road, Bedford, MA USA [ A PGP key is available for encrypted communications at   http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG v1  iQIcBAEBCAAGBQJXSmAHAAoJEHb/MwWLVhi2KkwQAJYehVlnt9SusqqgXhyhdZgt =ONL0 -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      