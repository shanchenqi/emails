  oss-security - : kernel-rt - Sending SysRq command via ICMP echo request            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Tue, 17 May From: Wade Mealing <wmealing@...hat.com> To: oss-security@...ts.openwall.com Subject: : kernel-rt - Sending SysRq command via ICMP echo request  Gday,  A flaw was found in the kernel-rt in which an attacker could submit a specially crafted ICMP echo request which can trigger a sysrq function based on values in the ICMP packet.  This feature was introduced in the kernel-rt only and is not shipping with standard Red Hat Enterprise Linux kernels.  Other kernels also ship this patch.  When enabled, remote attacker who are able to send ICMP packets to the host could exploit this feature using bruteforce to submit arbitrary SysRq commands.  A local user can find the cookie immediately by inspecting the cookie file:  $ ls -l /proc/sys/net/ipv4/icmp_echo_sysrq -rw-r--r--. 1 root root 0 Apr 28 /proc/sys/net/ipv4/icmp_echo_sysrq  This pattern in hex can be used to attack the host with the icmp_echo_sysrq cookie set (and sysrq enabled) as per this example:  # ping -c1 -s57 <target>  Remote attacker could exploit this feature using bruteforce to submit arbitrary SysRq commands if this feature was enabled.  There is no fix for this at the time, this feature can be disabled / reverted in the code and usual methods of sysrq magic keys can be used as a workaround till a sufficient alternative has been developed.  Resources:  Upstream discussion on original topic:  Red Hat Bugzilla:  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      