  oss-security - Xen Security Advisory - QEMU:  Banked access to VGA memory (VBE) uses inconsistent bounds checks            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Tue, 10 May From: Xen.org security team <security@....org> To: xen-announce@...ts.xen.org, xen-devel@...ts.xen.org,  xen-users@...ts.xen.org, oss-security@...ts.openwall.com CC: Xen.org security team <security@....org> Subject: Xen Security Advisory - QEMU:  Banked access to VGA memory (VBE) uses inconsistent bounds checks  -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1        Xen Security Advisory /                                version 5   QEMU: Banked access to VGA memory (VBE) uses inconsistent bounds checks  UPDATES IN VERSION 5 ====================  Fixed credits section. Zuozhi Fzz was mistakenly credited with but should have been credited with  ISSUE DESCRIPTION =================  Qemu VGA module allows banked access to video memory using the window at and it supports different access modes with different address calculations.  But an attacker can easily change access modes after setting the bank register.  This is  Qemu VGA module allows guest to edit certain registers in 'vbe' and 'vga' modes. ie. guest could set certain 'VGA' registers while in 'VBE' mode.  This is   IMPACT ======  A privileged guest user could use to exceed the bank address window and write beyond the said memory area, potentially leading to arbitrary code execution with privileges of the Qemu process.  If the system is not using stubdomains, this will be in domain 0.  A privileged guest user could use to cause potential integer overflow or OOB read access issues in Qemu, resulting in a DoS of the guest itself.  More dangerous effect, such as data leakage or code execution, are not known but cannot be ruled out.   VULNERABLE SYSTEMS ==================  Versions of qemu shipped with all Xen versions are vulnerable.  Xen systems running on x86 with HVM guests, with the qemu process running in dom0 are vulnerable.  Only guests provided with the "stdvga" emulated video card can exploit the vulnerability.  The default "cirrus" emulated video card is not vulnerable.  (With xl the emulated video card is controlled by the "stdvga=" and "vga=" domain configuration options.)  ARM systems are not vulnerable.  Systems using only PV guests are not vulnerable.  For VMs whose qemu process is running in a stub domain, a successful attacker will only gain the privileges of that stubdom, which should be only over the guest itself.  Both upstream-based versions of qemu (device_model_version="qemu-xen") and `traditional' qemu (device_model_version="qemu-xen-traditional") are vulnerable.  MITIGATION ==========  Running only PV guests will avoid the issue.  Running HVM guests with the device model in a stubdomain will mitigate the issue.  Changing the video card emulation to cirrus (stdvga=0, vga="cirrus", in the xl domain configuraton) will avoid the vulnerability.  CREDITS =======  was discovered and reported by "Wei Xiao and Qinghao Tang of Marvel Team" of Inc.  was discovered and reported by Zuozhi Fzz of Alibaba Inc.  RESOLUTION ==========  Applying the appropriate attached patch resolves this issue for systems using upstream-based versions of qemu.  Patch addresses and patches address  qemu-upstream, xen-unstable:   qemu-upstream, xen 4.6:   qemu-upstream, xen 4.5:   qemu-upstream, xen 4.4:   qemu-upstream, xen 4.3:   qemu-xen-traditional, unstable:   $                               $  DEPLOYMENT DURING EMBARGO =========================  Deployment of the patches and/or mitigations described above (or others which are substantially similar) is permitted during the embargo, even on public-facing systems with untrusted guest users and administrators.  But: Distribution of updated software is prohibited (except to other members of the predisclosure list).  Predisclosure list members who wish to deploy significantly different patches and/or mitigations, please contact the Xen Project Security Team.   (Note: this during-embargo deployment notice is retained in post-embargo publicly released Xen Project advisories, even though it is then no longer applicable.  This is to enable the community to have oversight of the Xen Project Security Team's decisionmaking.)  For more information about permissible uses of embargoed information, consult the Xen Project community's agreed Security Policy:   http://www.xenproject.org/security-policy.html -----BEGIN PGP SIGNATURE----- Version: GnuPG (GNU/Linux)  =O3qx -----END PGP SIGNATURE-----  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Download attachment of type "application/octet-stream" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      