  oss-security - - Linux kernel - Flaw in ASN.1 DER decoder for  certificate DER files.            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Fri, 13 May From: Wade Mealing <wmealing@...hat.com> To: oss-security@...ts.openwall.com Subject: - Linux kernel - Flaw in ASN.1 DER decoder for  certificate DER files.  An issue with ASN.1 DER decoder was reported that could lead to memory corruptions, possible privilege escalation, or complete local denial of service via certificate DER files.  Tags with indefinite length can be used to corrupt the _dp and _len pointers in asn1_find_indefinite_length() in lib/asn1_decoder.c  The vulnerable code:  ... next_tag:         if (unlikely(datalen - dp < 2)) {                 if (datalen == dp)                         goto missing_eoc;                 goto data_overrun_error;         } ...         n = len -         if (unlikely(n > sizeof(size_t) - 1))                 goto length_too_long;         if (unlikely(n > datalen - dp))                 goto data_overrun_error;         for (len = 0; n > 0; n--) {                 len <<= 8;                 len |= data[dp++];         }         dp += len;         goto next_tag; ...  The dp can be corrupted and the check at next_tag is not sufficient to prevent this.  Red Hat would like to thank Philip Pettersson of Samsung for reporting this issue to Red Hat.  Thanks,  Wade Mealing Red Hat Product Security Team   References:  Upstream fix:  Red hat Bugzilla:  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      