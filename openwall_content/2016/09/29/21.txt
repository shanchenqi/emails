  oss-security - MyFaces Trinidad view state deserialization security vulnerability            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [thread-next>] [day] [month] [year] [list]  Date: Thu, 29 Sep From: Mike Kienenberger <mkienenb@...il.com> To: announce@...aces.apache.org, MyFaces Development <dev@...aces.apache.org>,  	MyFaces Discussion <users@...aces.apache.org> Cc: "security@...che.org" <security@...che.org>, oss-security@...ts.openwall.com,  	bugtraq@...urityfocus.com Subject: MyFaces Trinidad view state deserialization security vulnerability  Apache MyFaces Trinidad information disclosure vulnerability  Severity: Important  Vendor: The Apache Software Foundation  Versions Affected: Trinidad from to Trinidad from to Trinidad from to Trinidad from to  Description:  Trinidad’s CoreResponseStateManager both reads and writes view state strings using ObjectInputStream/ObjectOutputStream directly.  By doing so, Trinidad bypasses the view state security features provided by the JSF implementations - ie. the view state is not encrypted and is not MAC’ed.  Trinidad’s CoreResponseStateManager will blindly deserialize untrusted view state strings, which makes Trinidad-based applications vulnerable to deserialization attacks.  Mitigation:  All users of Apache Trinidad should upgrade to either or and enable view state encryption using org.apache.myfaces.USE_ENCRYPTION and related web configuration parameters. See http://wiki.apache.org/myfaces/Secure_Your_Application for details.  Upgrading all Commons Collections jars on the class path to will prevent certain well-known vectors of attack, but will not entirely resolve this issue.  References:  This issue was discovered by Teemu Kääriäinen and reported by Andy Schwartz  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      