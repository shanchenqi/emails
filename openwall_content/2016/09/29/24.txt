  oss-security - Apache MyFaces Trinidad released            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Thu, 29 Sep From: Mike Kienenberger <mkienenb@...il.com> To: announce@...aces.apache.org, MyFaces Development <dev@...aces.apache.org>,  	MyFaces Discussion <users@...aces.apache.org> Cc: "security@...che.org" <security@...che.org>, oss-security@...ts.openwall.com,  	bugtraq@...urityfocus.com Subject: Apache MyFaces Trinidad released  The Apache MyFaces team is pleased to announce the release of Apache MyFaces Trinidad  MyFaces Trinidad is a feature-rich renderkit for JavaServer(tm) Faces that provides an extendibles framework and extensive skinning support. This version is designed to be used with the JSF 2.0 specification and works with either Mojarra or MyFaces.  Trinidad’s CoreResponseStateManager both reads and writes view state strings using ObjectInputStream/ObjectOutputStream directly.  By doing so, Trinidad bypasses the view state security features provided by the JSF implementations - ie. the view state is not encrypted and is not MAC’ed.  Trinidad’s CoreResponseStateManager will blindly deserialize untrusted view state strings, which makes Trinidad-based applications vulnerable to deserialization attacks.  Apache MyFaces Trinidad is available in both binary and source distributions, and there are examples available as well:      * http://myfaces.apache.org/trinidad/download.html  Apache MyFaces Trinidad is available in the central Maven repository under Group ID "org.apache.myfaces.trinidad"  Release Notes - MyFaces Trinidad - Version  Bug     - MyFaces Trinidad view state deserialization security vulnerability      - Need an ability for the WindowManager implementation to be executed before all Configurators and filters and to complete teh response     - Client DateTimeConverter _fix2DYear does not handle th_TH locale     - adjustments to the UIXComponentBase subscribeToEvent and unsubscribeFromEvent implementation     - x-frame-options header not working in trinidad     - ForEach tag throws ArrayIndexOfBoundsException when the end attribute is same as the size of the List     - ViewDeclarationLanguageFactoryImpl$ChangeApplyingVDLWrapper does not override non-abstract retargetMethodExpressions() causing composite component actions not to fire     - tr:inputListOfValues - no ReturnEvent is fired when using facelets     - UIXComponentBase calls setInView(false) before the component is actually removed from tree     - StateManagerImp.saveView should not check current request token     - avoid exceptions in design time for agent rules     - alias wrongly specified in base-desktop.css     - function _pprControlCapture() causes an error in IE8 when it tries to focus on a PPR'd element     - f:convertnumber throws error when the number input by user has leading or trailing grouping separator char     - avoid exceptions in design time when wrong style sheet name is specified in trinidad-skins.xml     - State saving skips facets (component resources).     - perf: change the concurrenthashmap to arraymap and fix the golden files     - update RenderingContext.getIcon() documentation     - remove acc datatable=0 from non data tables     - LocaleElementsResourceLoader init dependency on request path     - HeadRenderer renders meta tags in wrong order for IE     - TreeRenderer renders duplicate IDs     - GlobalConfiguratorImpl will not always clean up resources     - TrPage._getTextContent is not working in IE10     - IE 11 - Unsupported JavaScript methods are used in Trinidad  Improvement      - pseudo classes missing from CSSGenerationUtils     - Clirr runner tests should work off last revision rather then a fixed label     - Provide mechanism to reload skin definitions from trinidad-skins.xml     - Skinning: stable names for generated style sheets     - Change component templating scheme to generate superclasses of templated components rather than the templated components themselves     - Ability to synchronize UI view size with model cache size`     - Update Clirr Runner tests to check against Trinidad     - Add support for base64 encoded images in skin files.     - Enhancements to allow for custom FileUpload code     - Ability to control skin and compression programatically     - LabeledFacesMessage is not appropriately serializable  New Feature      - Pregeneration of skin style sheets  regards,  Mike Kienenberger  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      