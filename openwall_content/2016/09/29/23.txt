  oss-security - Apache MyFaces Trinidad released            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Thu, 29 Sep From: Mike Kienenberger <mkienenb@...il.com> To: announce@...aces.apache.org, MyFaces Development <dev@...aces.apache.org>,  	MyFaces Discussion <users@...aces.apache.org> Cc: "security@...che.org" <security@...che.org>, oss-security@...ts.openwall.com,  	bugtraq@...urityfocus.com Subject: Apache MyFaces Trinidad released  The Apache MyFaces team is pleased to announce the release of Apache MyFaces Trinidad  MyFaces Trinidad is a feature-rich renderkit for JavaServer(tm) Faces that provides an extendibles framework and extensive skinning support. This version is designed to be used with the JSF 1.2 specification and works with either Mojarra or MyFaces.  Trinidad’s CoreResponseStateManager both reads and writes view state strings using ObjectInputStream/ObjectOutputStream directly.  By doing so, Trinidad bypasses the view state security features provided by the JSF implementations - ie. the view state is not encrypted and is not MAC’ed.  Trinidad’s CoreResponseStateManager will blindly deserialize untrusted view state strings, which makes Trinidad-based applications vulnerable to deserialization attacks.  Apache MyFaces Trinidad is available in both binary and source distributions, and there are examples available as well:      * http://myfaces.apache.org/trinidad/download.html  Apache MyFaces Trinidad is available in the central Maven repository under Group ID "org.apache.myfaces.trinidad"  Release Notes - MyFaces Trinidad - Version  Bug     - MyFaces Trinidad view state deserialization security vulnerability      - Two requests at the same time throw an exception when the server just started     - handle session timeout     - client-side convertNumber causes loss of precision     - Resources not errors     - NullPointerException in LocaleInfoScriptlet.getSupportedLocaleVariant     - tr:table selectAll also selects disabled chekcboxes     - Trinidad statemananger needs to store everything on the client, when HTML_Basic is used, in combination with standard client-side state-saving     - Wrong behavior in TrNumberFormat     - CheckSerializationConfigurator should use the Trinidad specific ObjectInputStream (ObjectInputStreamResolveClass) class     - UIXCollection holding only to application data     - Should reset value on component at the beginning of decode     - trh:tableLayout tag doc should call out table-layout:fixed as desirable for programmatically-resizable cell contents     - While ResourceServlet references files of type "ico", they won't load because CoreRenderKitResourceLoader doesn't register them     - Icons are created if the string for the resource is an empty string in Trinidad 1.2     - UIXCollection should release the reference to the model at the very end of processSaveState     - UIXCollection saves the stamp state when there is no stamp     - ComponentUtils.getScopedIdForComponent() is not producing consistent scoped IDs for components relocated during tag execution     - NPE in BAseChangeManager     - UIXTree/UIXTreeTable/UIXTable RowKeySets require that their attributes are only fetched when the component is in context     - add a utility method in PartialPageUtils to send a <noop/> ppr response     - tr:selectOneListBox - item not selected - wrong item of selected item returned by SimpleSelectOneRenderer.resolveIndex     - workaround for jsf portlet bridge 2.0 nullviewstatetoken     - tr:table component renders navigation bar wrongly for unknown row count  Improvement      - provide a hook for for an external decorator of Skin InputStreamProvider  New Feature      - Need the ability to bypass the Cache on ResourceServlet     - Need to add a utility method to ExternalContextUtils to get the writer from the ExternalContext  regards,  Mike Kienenberger  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      