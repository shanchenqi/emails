  oss-security - Re: ADOdb PDO driver: incorrect quoting may allow SQL injection            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Wed, 14 Sep From: Damien Regad <dregad@...tisbt.org> To: oss-security@...ts.openwall.com Subject: Re: ADOdb PDO driver: incorrect quoting may allow SQL injection  On Damien Regad wrote: > Greetings >  > jdavidlists reported an issue [1] with ADOdb 5.x, qstr() method, > improperly quoting strings resulting in a potential SQL injection attack > vector. >  > This affects only PDO-based drivers, and only in the case where the > query is built by inlining the quoted string, e.g. >  > $strHack = 'xxxx\\\' OR 1 -- '; > $sql = "SELECT * FROM employees WHERE name = " . $db->qstr( $strHack ); > $rs = $db->getAll($strSQL); // dumps the whole table >  > Note that it is not recommended to write SQL as per the above example, > the code should be rewritten to use query parameters, like >  > $strHack = 'xxxx\\\' OR 1 -- '; > $sql = "SELECT * FROM employees WHERE name = ?" > $rs = $db->getAll($strSQL, array($strHack)); >  > Please let me know if a CVE is needed for this. >  > Patch for the issue is available [2], and will be included in upcoming > ADOdb release. >  > Best regards > Damien Regad > ADOdb maintainer >  >  > [1] > [2] https://github.com/ADOdb/ADOdb/commit/bd9eca9  Should I assume from the silence that no CVE is required for this ?  Thanks for your reply. Damien      Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      