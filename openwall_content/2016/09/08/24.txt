  oss-security - Re: Persistent Cross-Site Scripting vulnerability in WordPress due to unsafe processing of file names            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Thu,  8 Sep (EDT) From: cve-assign@...re.org To: oss-security@...ts.openwall.com Cc: cve-assign@...re.org Subject: Re: Persistent Cross-Site Scripting vulnerability in WordPress due to unsafe processing of file names  -----BEGIN PGP SIGNED MESSAGE----- Hash:  >  (Please note the "extra" CVE ID below for the other vulnerability fixed in   > a cross-site scripting vulnerability via image filename, reported by > SumOfPwn researcher Cengiz Han Sahin  Use   > lure an admin into uploading the image with the malicious file name  > A WordPress admin uploads a malicious image file requested by a user > this admin trusts or a popular malicious image that was spread via > social media.  We are not sure whether this issue is best interpreted as a vulnerability. We think it means that the admin has the unfiltered_html capability, and proceeds with uploading the file even though its name (which contains an embedded IMG string with onerror=alert in the PoC) is visible to the admin. It seems to be more of a design change in which the meaning of unfiltered_html is slightly redefined, in a way that is helpful to many users but not all.  One counterargument use case is:    - the admin of WordPress site A observes that all of their images     are being stolen for use on WordPress site B    - the process for stealing the images keeps each original filename    - the admin of WordPress site A specifically wants one image     filename to contain JavaScript code, as part of an effort to     identify the operators of WordPress site B (this JavaScript code     has no effect on site visitors when encountered in the context of     WordPress site A)    - the admin of WordPress site A has always relied on the Media     Upload functionality in wp-admin/media-new.php for entering these     filenames, and this is now broken with the upgrade to   > a path traversal vulnerability in the upgrade package uploader, > reported by Dominik Schilling from the WordPress security team  Use  - --  CVE Assignment Team M/S Burlington Road, Bedford, MA USA [ A PGP key is available for encrypted communications at   http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG v1  =g17f -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      