  oss-security - Re: CVE assignment for PHP and - and libcurl            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [day] [month] [year] [list]  Date: Fri,  2 Sep (EDT) From: cve-assign@...re.org To: kaplanlior@...il.com Cc: cve-assign@...re.org, oss-security@...ts.openwall.com, security@....net Subject: Re: CVE assignment for PHP and - and libcurl  -----BEGIN PGP SIGNED MESSAGE----- Hash:  > Bug Create an Unexpected > Object and Don't Invoke __wakeup() in Deserialization >  Use for this one issue, regardless of the subsequent behavior (i.e., either "i) The unexpected object was destroyed, invoke __destruct()" or "ii) The unexpected object wasn't destroyed, invoke more magic methods.").   > Bug PHP Session Data > Injection Vulnerability >  Use  The scope of this CVE also includes the "The similar issue also exist in session php_binary handler" part of   > Bug select_colors write > out-of-bounds >  Use   > Bug imagegammacorrect allows > arbitrary write access >  Use   > Bug Memory Leakage In > exif_process_IFD_in_TIFF >  Use   > Bug wddx_deserialize allows > illegal memory access >  Use   > Bug wddx_deserialize null > dereference >  Use   > Bug wddx_deserialize null > dereference with invalid xml >  Use  and are associated with the same commit. Not all of the commit is about the pop issue in   > Bug wddx_deserialize null > dereference in php_wddx_pop_element >  Use  and are associated with the same commit. Not all of the commit is about the pop issue in   > Bug memory allocator fails > to realloc small block to large one >  Use   > Bug Heap overflow in > curl_escape >  Use for the PHP vulnerability. In other words, PHP is intended to operate safely even with an unpatched copy of libcurl.  This is associated with the https://curl.haxx.se/libcurl/c/curl_easy_escape.html and http://php.net/manual/en/function.curl-escape.php relationship. We feel that this may be a (minor) vulnerability in libcurl. It seems plausible that a libcurl application could accept arbitrary length URI components from an untrusted user, for use in GET requests to (probably) a hardcoded server name. However, it is possible that CVE ID assignment is already in progress for libcurl. If nobody knows, then we will contact curl-security@...x.se directly to ask.  (As far as we can tell, it is not yet fixed on the https://github.com/curl/curl/commits/master/lib/escape.c page.)  - --  CVE Assignment Team M/S Burlington Road, Bedford, MA USA [ A PGP key is available for encrypted communications at   http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG v1  BaxLqvFCiflOsCUKeMJU =3zTJ -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      