  oss-security - Re: CVE Request - Ruby OpenSSL Library - IV Reuse in  GCM Mode            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Mon, 19 Sep From: Seth Arnold <seth.arnold@...onical.com> To: Mike Santillana <michael.santillana@...ork.com> Cc: oss-security@...ts.openwall.com, 'Apple' via <infosec@...ork.com> Subject: Re: CVE Request - Ruby OpenSSL Library - IV Reuse in  GCM Mode  On Mon, Sep 19, at Mike Santillana wrote: > An IV reuse bug was discovered in Ruby's OpenSSL library when using > aes-gcm. When encrypting data with aes-*-gcm, if the IV is set before > setting the key, the cipher will default to using a static IV. This creates > a static nonce and since aes-gcm is a stream cipher, this can lead to known > cryptographic issues. >  > The documentation does not appear to specify the order of operations when > setting the key and IV [1]. As an example, see the following insecure code > snippet below: >  > Vulnerable Code: >  > def encrypt(plaintext) >     cipher = >     iv = cipher.random_iv # Notice here the IV is set before the key >     cipher.key = >     cipher.auth_data = "" >     ciphertext = cipher.update(plaintext) + cipher.final >     tag = cipher.auth_tag >  >     puts "[+] Encrypting: #{plaintext}" >     puts "[+] CipherMessage (IV | Tag | Ciphertext): #{bin2hex(iv)} | > #{bin2hex(tag)} | #{bin2hex(ciphertext)}" > end  Hello,  I think you have a mistake in this sample code, 'iv' is assigned but never used (aside from being printed).  Your github code is far more complicated but looks like it is doing the right thing.  Thanks  Download attachment "signature.asc" of type "application/pgp-signature" bytes)  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      