  oss-security - Re: ADOdb PDO driver: incorrect quoting may allow SQL injection            Products  Openwall GNU/*/Linux   server OS Linux Kernel Runtime Guard John the Ripper   password cracker  Free & Open Source for any platform in the cloud Pro for Linux Pro for macOS  Wordlists   for password cracking passwdqc   policy enforcement  Free & Open Source for Unix Pro for Windows (Active Directory)  yescrypt   KDF & password hashing yespower   Proof-of-Work (PoW) crypt_blowfish   password hashing phpass   ditto in PHP tcb   better password shadowing Pluggable Authentication Modules scanlogd   port scan detector popa3d   tiny POP3 daemon blists   web interface to mailing lists msulogin   single user mode login php_mt_seed   mt_rand() cracker  Services Publications  Articles Presentations  Resources  Mailing lists Community wiki Source code repositories (GitHub) Source code repositories (CVSweb) File archive & mirrors How to verify digital signatures OVE IDs  What's new         Follow @Openwall on Twitter for new release announcements and other news   [<prev] [next>] [<thread-prev] [thread-next>] [day] [month] [year] [list]  Date: Thu, 15 Sep (EDT) From: cve-assign@...re.org To: dregad@...tisbt.org Cc: cve-assign@...re.org, oss-security@...ts.openwall.com Subject: Re: ADOdb PDO driver: incorrect quoting may allow SQL injection  -----BEGIN PGP SIGNED MESSAGE----- Hash:  > ADOdb 5.x, qstr() method, > improperly quoting strings resulting in a potential SQL injection attack > vector.  > Note that it is not recommended to write SQL as per the above ...  > >  >> SECURITY: ADODB qstr does not quote properly with PDO  >> labels >> security  >>> Should I assume from the silence that no CVE is required for this ?  It only means that the CVE Team at MITRE is not in an optimal position to decide whether a CVE ID should exist for a specific library issue that's exploitable only when application code has used that library in a "not recommended" way. It's best for a maintainer to suggest what outcome they prefer, e.g., "it's not recommended but people still can use ADOdb that way; thus, we consider this a required security fix."  Because "security" is still present in the title and labels of we're making the conclusion that this is a security problem and assigning an ID,  >>>> That's true, but I never did in the past, as this mailing list is (or was?) >>>> monitored by mitre, so posting here has been sufficient until now.  The current situation is that the CVE Team at MITRE receives both the oss-security messages and the https://cveform.mitre.org form output. We let people choose either method for obtaining a CVE ID from us, depending on their disclosure goals, their perspective about open pre-assignment discussion, or other factors. People using https://cveform.mitre.org are free to forward our replies to oss-security if they're relevant to the list, e.g., did this.  - --  CVE Assignment Team M/S Burlington Road, Bedford, MA USA [ A PGP key is available for encrypted communications at   http://cve.mitre.org/cve/request_id.html ] -----BEGIN PGP SIGNATURE----- Version: GnuPG v1  SNkQDCDU0zfiY/s8xutp =Gaft -----END PGP SIGNATURE-----  Powered by blists - more mailing lists  Please check out the  Open Source Software Security Wiki, which is counterpart to this mailing list.  Confused about mailing lists and their use? Read about mailing lists on Wikipedia and check out these guidelines on proper formatting of your messages.      